{"version":3,"file":"static/8142.b95f9a57.chunk.js","mappings":"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","sources":["webpack://backstage.plugin-techdocs/../../node_modules/@backstage/plugin-techdocs/node_modules/@backstage/core-plugin-api/dist/translation/TranslationResource.esm.js","webpack://backstage.plugin-techdocs/../../node_modules/react/jsx-runtime.js","webpack://backstage.plugin-techdocs/../../node_modules/@backstage/plugin-techdocs/node_modules/@backstage/core-plugin-api/dist/apis/system/ApiRef.esm.js","webpack://backstage.plugin-techdocs/../../node_modules/@backstage/plugin-techdocs/node_modules/@backstage/core-plugin-api/dist/apis/definitions/ErrorApi.esm.js","webpack://backstage.plugin-techdocs/../../node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://backstage.plugin-techdocs/../../node_modules/@backstage/plugin-techdocs/node_modules/@backstage/core-plugin-api/dist/apis/system/useApi.esm.js","webpack://backstage.plugin-techdocs/../../node_modules/@backstage/plugin-techdocs/node_modules/@backstage/core-plugin-api/dist/apis/definitions/TranslationApi.esm.js","webpack://backstage.plugin-techdocs/../../node_modules/@backstage/plugin-techdocs/node_modules/@backstage/core-plugin-api/dist/translation/useTranslationRef.esm.js","webpack://backstage.plugin-techdocs/../../node_modules/@backstage/plugin-techdocs/node_modules/@backstage/core-plugin-api/dist/translation/TranslationRef.esm.js"],"sourcesContent":["function createTranslationResource(options) {\n  return {\n    $$type: \"@backstage/TranslationResource\",\n    version: \"v1\",\n    id: options.ref.id,\n    resources: Object.entries(options.translations).map(\n      ([language, loader]) => ({\n        language,\n        loader: () => loader().then((m) => {\n          const value = m.default;\n          return {\n            messages: value?.$$type === \"@backstage/TranslationMessages\" ? value.messages : value\n          };\n        })\n      })\n    )\n  };\n}\n\nexport { createTranslationResource };\n//# sourceMappingURL=TranslationResource.esm.js.map\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","class ApiRefImpl {\n  constructor(config) {\n    this.config = config;\n    const valid = config.id.split(\".\").flatMap((part) => part.split(\"-\")).every((part) => part.match(/^[a-z][a-z0-9]*$/));\n    if (!valid) {\n      throw new Error(\n        `API id must only contain period separated lowercase alphanum tokens with dashes, got '${config.id}'`\n      );\n    }\n  }\n  get id() {\n    return this.config.id;\n  }\n  // Utility for getting type of an api, using `typeof apiRef.T`\n  get T() {\n    throw new Error(`tried to read ApiRef.T of ${this}`);\n  }\n  toString() {\n    return `apiRef{${this.config.id}}`;\n  }\n}\nfunction createApiRef(config) {\n  return new ApiRefImpl(config);\n}\n\nexport { createApiRef };\n//# sourceMappingURL=ApiRef.esm.js.map\n","import 'react/jsx-runtime';\nimport '@backstage/version-bridge';\nimport '@backstage/errors';\nimport { createApiRef } from '../system/ApiRef.esm.js';\n\nconst errorApiRef = createApiRef({\n  id: \"core.error\"\n});\n\nexport { errorApiRef };\n//# sourceMappingURL=ErrorApi.esm.js.map\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","import { jsx } from 'react/jsx-runtime';\nimport { useVersionedContext } from '@backstage/version-bridge';\nimport { NotImplementedError } from '@backstage/errors';\n\nfunction useApiHolder() {\n  const versionedHolder = useVersionedContext(\"api-context\");\n  if (!versionedHolder) {\n    throw new NotImplementedError(\"API context is not available\");\n  }\n  const apiHolder = versionedHolder.atVersion(1);\n  if (!apiHolder) {\n    throw new NotImplementedError(\"ApiContext v1 not available\");\n  }\n  return apiHolder;\n}\nfunction useApi(apiRef) {\n  const apiHolder = useApiHolder();\n  const api = apiHolder.get(apiRef);\n  if (!api) {\n    throw new NotImplementedError(`No implementation available for ${apiRef}`);\n  }\n  return api;\n}\nfunction withApis(apis) {\n  return function withApisWrapper(WrappedComponent) {\n    const Hoc = (props) => {\n      const apiHolder = useApiHolder();\n      const impls = {};\n      for (const key in apis) {\n        if (apis.hasOwnProperty(key)) {\n          const ref = apis[key];\n          const api = apiHolder.get(ref);\n          if (!api) {\n            throw new NotImplementedError(\n              `No implementation available for ${ref}`\n            );\n          }\n          impls[key] = api;\n        }\n      }\n      return /* @__PURE__ */ jsx(WrappedComponent, { ...props, ...impls });\n    };\n    const displayName = WrappedComponent.displayName || WrappedComponent.name || \"Component\";\n    Hoc.displayName = `withApis(${displayName})`;\n    return Hoc;\n  };\n}\n\nexport { useApi, useApiHolder, withApis };\n//# sourceMappingURL=useApi.esm.js.map\n","import { createApiRef } from '@backstage/core-plugin-api';\n\nconst translationApiRef = createApiRef({\n  id: \"core.translation\"\n});\n\nexport { translationApiRef };\n//# sourceMappingURL=TranslationApi.esm.js.map\n","import { useState, useMemo, useCallback, useEffect, useRef } from 'react';\nimport { useApi } from '../apis/system/useApi.esm.js';\nimport '../apis/definitions/auth.esm.js';\nimport '../apis/definitions/AlertApi.esm.js';\nimport '../apis/definitions/AnalyticsApi.esm.js';\nimport '../apis/definitions/AppThemeApi.esm.js';\nimport '../apis/definitions/ConfigApi.esm.js';\nimport '../apis/definitions/DiscoveryApi.esm.js';\nimport { errorApiRef } from '../apis/definitions/ErrorApi.esm.js';\nimport '../apis/definitions/FeatureFlagsApi.esm.js';\nimport '../apis/definitions/FetchApi.esm.js';\nimport '../apis/definitions/IdentityApi.esm.js';\nimport '../apis/definitions/OAuthRequestApi.esm.js';\nimport '../apis/definitions/StorageApi.esm.js';\nimport { translationApiRef } from '../apis/definitions/TranslationApi.esm.js';\nimport '../apis/definitions/AppLanguageApi.esm.js';\n\nconst loggedRefs = /* @__PURE__ */ new WeakSet();\nconst useTranslationRef = (translationRef) => {\n  const errorApi = useApi(errorApiRef);\n  const translationApi = useApi(translationApiRef);\n  const [snapshot, setSnapshot] = useState(\n    () => translationApi.getTranslation(translationRef)\n  );\n  const observable = useMemo(\n    () => translationApi.translation$(translationRef),\n    [translationApi, translationRef]\n  );\n  const onError = useCallback(\n    (error) => {\n      if (!loggedRefs.has(translationRef)) {\n        const errMsg = `Failed to load translation resource '${translationRef.id}'; caused by ${error}`;\n        console.error(errMsg);\n        errorApi.post(new Error(errMsg));\n        loggedRefs.add(translationRef);\n      }\n    },\n    [errorApi, translationRef]\n  );\n  useEffect(() => {\n    const subscription = observable.subscribe({\n      next(next) {\n        if (next.ready) {\n          setSnapshot(next);\n        }\n      },\n      error(error) {\n        onError(error);\n      }\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [observable, onError]);\n  const initialRenderRef = useRef(true);\n  useEffect(() => {\n    if (initialRenderRef.current) {\n      initialRenderRef.current = false;\n    } else {\n      setSnapshot(translationApi.getTranslation(translationRef));\n    }\n  }, [translationApi, translationRef]);\n  if (!snapshot.ready) {\n    throw new Promise((resolve) => {\n      const subscription = observable.subscribe({\n        next(next) {\n          if (next.ready) {\n            subscription.unsubscribe();\n            resolve();\n          }\n        },\n        error(error) {\n          subscription.unsubscribe();\n          onError(error);\n          resolve();\n        }\n      });\n    });\n  }\n  return { t: snapshot.t };\n};\n\nexport { useTranslationRef };\n//# sourceMappingURL=useTranslationRef.esm.js.map\n","import { createTranslationResource } from './TranslationResource.esm.js';\n\nfunction flattenMessages(nested) {\n  const entries = new Array();\n  function visit(obj, prefix) {\n    for (const [key, value] of Object.entries(obj)) {\n      if (typeof value === \"string\") {\n        entries.push([prefix + key, value]);\n      } else {\n        visit(value, `${prefix}${key}.`);\n      }\n    }\n  }\n  visit(nested, \"\");\n  return Object.fromEntries(entries);\n}\nclass TranslationRefImpl {\n  #id;\n  #messages;\n  #resources;\n  constructor(options) {\n    this.#id = options.id;\n    this.#messages = flattenMessages(\n      options.messages\n    );\n  }\n  $$type = \"@backstage/TranslationRef\";\n  version = \"v1\";\n  get id() {\n    return this.#id;\n  }\n  get T() {\n    throw new Error(\"Not implemented\");\n  }\n  getDefaultMessages() {\n    return this.#messages;\n  }\n  setDefaultResource(resources) {\n    this.#resources = resources;\n  }\n  getDefaultResource() {\n    return this.#resources;\n  }\n  toString() {\n    return `TranslationRef{id=${this.id}}`;\n  }\n}\nfunction createTranslationRef(config) {\n  const ref = new TranslationRefImpl(config);\n  if (config.translations) {\n    ref.setDefaultResource(\n      createTranslationResource({\n        ref,\n        translations: config.translations\n      })\n    );\n  }\n  return ref;\n}\n\nexport { createTranslationRef };\n//# sourceMappingURL=TranslationRef.esm.js.map\n"],"names":["createTranslationResource","options","$$type","version","id","ref","resources","Object","entries","translations","map","language","loader","then","m","value","default","messages","module","exports","ApiRefImpl","constructor","config","this","split","flatMap","part","every","match","Error","T","toString","createApiRef","errorApiRef","f","k","Symbol","for","l","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","Fragment","jsx","jsxs","useApiHolder","versionedHolder","useVersionedContext","apiHolder","atVersion","useApi","apiRef","api","get","withApis","apis","WrappedComponent","Hoc","impls","displayName","name","translationApiRef","loggedRefs","WeakSet","useTranslationRef","translationRef","errorApi","translationApi","snapshot","setSnapshot","useState","getTranslation","observable","useMemo","translation$","onError","useCallback","error","has","errMsg","console","post","add","useEffect","subscription","subscribe","next","ready","unsubscribe","initialRenderRef","useRef","Promise","resolve","t","TranslationRefImpl","nested","Array","visit","obj","prefix","push","fromEntries","flattenMessages","getDefaultMessages","setDefaultResource","getDefaultResource","createTranslationRef"],"sourceRoot":""}