{"version":3,"file":"static/exposed-PluginRoot.856a8fe9.chunk.js","mappings":"6ZAiBO,MAAMA,EAA2B,EAAGC,eACzC,MAAOC,EAAgBC,GACrBC,IAAAA,SAAsC,MAElCC,EAAgBD,IAAAA,SAAoC,IACnDF,EAGE,CACLI,KAAKC,EAAAA,EAAAA,IAAU,KACVC,EAAAA,EAAAA,aACHN,mBAEFO,cAAe,IAAIC,KAPZ,MASR,CAACR,IAEJ,OACE,UAACS,MAAAA,C,WACC,SAACA,MAAAA,CAAIC,IAAKT,IACTE,GACC,SAACQ,EAAAA,eAAqBA,IAAKR,E,SACxBJ,IAED,SCWGa,EAAcC,EAAAA,GAAkCC,SAC3DC,EAAAA,EAAAA,IAAiC,CAC/BC,KAAM,cACNC,SAAUC,EAAAA,EAAuBC,QACjCC,UAduB,KAEvB,SAACX,MAAAA,CAAIY,GAAG,gC,UACN,SAACvB,EAAwBA,C,UACvB,SAACwB,EAAAA,GAAeA,CAAAA,S","sources":["webpack://backstage.plugin-techdocs-module-addons-contrib/./src/ShadowRootStylesProvider.tsx","webpack://backstage.plugin-techdocs-module-addons-contrib/./src/addons.tsx"],"sourcesContent":["import React from \"react\";\n\nimport type { StylesOptions } from \"@material-ui/styles\";\n\n// It's neccessary that this provider is loaded from `core/styles` not just `styles`!\nimport {\n  StylesProvider as WrappedStylesProvider,\n  jssPreset,\n} from \"@material-ui/core/styles\";\nimport { create as createJss } from \"jss\";\n\n/**\n * Creates a new JSS StylesProvider that inserts additional styles\n * to the current (react and browser) dom position.\n * This is only useful in a shadow root world because MUI v4 component\n * styles are handled globally.\n */\nexport const ShadowRootStylesProvider = ({ children }: { children: any }) => {\n  const [insertionPoint, setInsertionPoint] =\n    React.useState<HTMLDivElement | null>(null);\n\n  const stylesOptions = React.useMemo<StylesOptions | null>(() => {\n    if (!insertionPoint) {\n      return null;\n    }\n    return {\n      jss: createJss({\n        ...jssPreset(),\n        insertionPoint,\n      }),\n      sheetsManager: new Map(),\n    };\n  }, [insertionPoint]);\n\n  return (\n    <div>\n      <div ref={setInsertionPoint} />\n      {stylesOptions ? (\n        <WrappedStylesProvider {...stylesOptions}>\n          {children}\n        </WrappedStylesProvider>\n      ) : null}\n    </div>\n  );\n};\n","import {\n  ReportIssue as ReportIssueBase,\n  techdocsModuleAddonsContribPlugin,\n} from \"@backstage/plugin-techdocs-module-addons-contrib\";\n\nimport React from \"react\";\n\nimport {\n  createTechDocsAddonExtension,\n  TechDocsAddonLocations,\n} from \"@backstage/plugin-techdocs-react\";\n\nimport { ShadowRootStylesProvider } from \"./ShadowRootStylesProvider\";\n\n/**\n * Automatically wrap the backstage ReportIssue component with a (JSS)\n * StylesProvider, the underlaying styling technique under MUI v4.\n *\n * With this, the additional styles for overlay button are applied correctly\n * because the techdocs content is rendered in a shadow root, but the styles\n * from the ReportIssue components are added to the root document.\n *\n * It isn't possible to create an additional shadow root here without reusing\n * or copying more components from the techdocs packages.\n *\n * The addons are rendered with a (react) portal above the content while the\n * addon itself is added below the content.\n *\n * HTML structure:\n *\n * html root doc\n *   backstage sidebar\n *   backstage header\n *   techdocs shadow root\n *     left sidebar (content navigation)\n *     right sidebar (table of content)\n *     content\n *       (report issue link is added here when text is selected)\n *       content itself\n *       addons\n *         report issue wrapper\n */\nconst ReportIssueWrapper = () => {\n  return (\n    <div id=\"techdocs-report-issue-wrapper\">\n      <ShadowRootStylesProvider>\n        <ReportIssueBase />\n      </ShadowRootStylesProvider>\n    </div>\n  );\n};\n\nexport const ReportIssue = techdocsModuleAddonsContribPlugin.provide(\n  createTechDocsAddonExtension<{}>({\n    name: \"ReportIssue\",\n    location: TechDocsAddonLocations.Content,\n    component: ReportIssueWrapper,\n  }),\n);\n"],"names":["ShadowRootStylesProvider","children","insertionPoint","setInsertionPoint","React","stylesOptions","jss","createJss","jssPreset","sheetsManager","Map","div","ref","WrappedStylesProvider","ReportIssue","techdocsModuleAddonsContribPlugin","provide","createTechDocsAddonExtension","name","location","TechDocsAddonLocations","Content","component","id","ReportIssueBase"],"sourceRoot":""}