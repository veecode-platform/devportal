# This dockerfile builds an image for the backend package.
# It should be executed with the root of the repo as docker context.
#
# Before building this image, be sure to have run the following commands in the repo root:
#
# yarn install
# yarn tsc
# yarn build:backend
#
# Once the commands have been run, you can build the image using `yarn build-image`

FROM registry.redhat.io/rhel9/nodejs-20:latest

# Install sqlite3 dependencies. You can skip this if you don't use sqlite3 in the image,
# in which case you should also move better-sqlite3 to "devDependencies" in package.json.
# Additionally, we install dependencies for `techdocs.generator.runIn: local`.
# https://backstage.io/docs/features/techdocs/getting-started#disabling-docker-in-docker-situation-optional
USER root
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    yum update -y && \
    yum install -y sqlite-devel python3 python3-pip zlib-devel brotli-devel curl-minimal && \
    pip3 install --upgrade pymdown-extensions wheel setuptools && \
    ln -s /usr/bin/python3 /usr/bin/python

# From here on we use the least-privileged `node` user to run the backend.
USER default
RUN npm i -g yarn && yarn config set python /usr/bin/python3
RUN pip3 install mkdocs-techdocs-core==1.1.7
WORKDIR /app
# RUN chown default:default /app


# This switches many Node.js dependencies to production mode.
ENV NODE_ENV production
ENV NODE_OPTIONS "--no-node-snapshot --max-old-space-size=4096"

# Copy over Yarn 3 configuration, release, and plugins
COPY --chown=default:default .yarn ./.yarn
COPY --chown=default:default .yarnrc.yml ./

# Copy repo skeleton first, to avoid unnecessary docker cache invalidation.
# The skeleton contains the package.json of each package in the monorepo,
# and along with yarn.lock and the root package.json, that's enough to run yarn install.
COPY --chown=default:default yarn.lock package.json packages/backend/dist/skeleton.tar.gz ./
RUN tar xzf skeleton.tar.gz && rm skeleton.tar.gz

# Note that this install is not immutable, which is one of the reasons we don't recommend Yarn 3 yet
RUN --mount=type=cache,target=/home/node/.yarn/berry/cache,sharing=locked,uid=1000,gid=1000 \
    yarn workspaces focus --all --production && \
    yarn cache clean

# Then copy the rest of the backend bundle, along with any other files we might want.
COPY --chown=default:default packages/backend/dist/bundle.tar.gz app-config*.yaml ./
RUN tar xzf bundle.tar.gz && rm bundle.tar.gz

COPY --chown=default:default devportal.json backstage.json ./

# Create the entrypoint script
USER root
COPY packages/backend/entrypoint.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh

RUN chown -R 1001:0 /app && chmod -R ug+rwx /app && \
    rpm-file-permissions

USER default

ENTRYPOINT ["/app/entrypoint.sh"]

CMD ["node", "packages/backend", "--config", "app-config.yaml"]