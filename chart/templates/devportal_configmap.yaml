{{- $app_path_without_last_slash := trimSuffix "/" .Values.appConfig.app.baseUrl }} 
{{- $backend_path_without_last_slash := trimSuffix "/" .Values.appConfig.backend.baseUrl }}

{{- $rbacEnabled := .Values.permission.rbac.enabled }}

{{- $grafana := .Values.grafana | default dict }}
{{- $grafana_default_domain := $grafana.domain | default "" }}
{{- $grafana_domain := trimSuffix "/" $grafana_default_domain }}

{{- $is_okteto_deploy := contains ".okteto.net" .Values.appConfig.app.baseUrl }}
{{- $is_github_provider := hasKey .Values.integrations "github" }}
{{- $is_gitlab_provider := hasKey .Values.integrations "gitlab" }}

{{/*Generating csp image src add logo images to allow list*/}}
{{ $cspListValues := .Values.appConfig.backend.csp.imgSrc }}
{{ $cspListValues := append $cspListValues (include "extract-host" .Values.theme.images.sidebarFull) }}
{{ $cspListValues := append $cspListValues (include "extract-host" .Values.theme.images.sidebarIcon) }}
{{ $cspListValues := $cspListValues | uniq }}

{{/*Getting serviceLocatorMethod type*/}}
{{- $kubernetes := .Values.kubernetes | default dict }}
{{- $serviceLocatorMethod := $kubernetes.serviceLocatorMethod | default dict }}
{{- $serviceLocatorMethodType := $serviceLocatorMethod.type | default "multiTenant" }}

apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{- include "devportal-charts.fullname" . }}-app-env"
data:
  {{- if not .Values.grafana.enabled }}
  GRAFANA_DOMAIN: ""
  {{- end }}
  {{- if and .Values.theme.custom .Values.theme.custom.downloadUrl }}
  PLATFORM_DEVPORTAL_THEME_URL: {{ .Values.theme.custom.downloadUrl }}
  {{- end }}
  {{- if .Values.theme.images.favicon }}
  PLATFORM_DEVPORTAL_FAVICON: {{ .Values.theme.images.favicon }}
  {{- end }}
  app-config: |
    app:
      title: {{ .Values.appConfig.title | default "Platform Devportal" }}
      baseUrl: {{ $app_path_without_last_slash |quote }}
      branding:
        fullLogo: https://veecode-platform.github.io/support/logos/logo.svg
        fullLogoDark: https://veecode-platform.github.io/support/logos/logo-black.svg
        iconLogo: https://veecode-platform.github.io/support/logos/logo-mobile.png
        theme:
          light:
            primaryColor: '#202020'
            headerColor1: '#45556D'
            headerColor2: '#86F4CE'
            navigationIndicatorColor: '#86F4CE'
          dark:
            primaryColor: '#cdcdcd'
            headerColor1: '#45556D'
            headerColor2: '#86F4CE'
            navigationIndicatorColor: '#86F4CE'      
      support:
        url: https://github.com/veecode-platform/support/discussions 
        items: 
          - title: Issues
            icon: github
            links:
              - url: https://github.com/veecode-platform/support/discussions
                title: GitHub Issues
      {{- if or ($is_okteto_deploy) (and .Values.appConfig.analytics .Values.appConfig.analytics.ga .Values.appConfig.analytics.ga.measurementId) }}          
      analytics:
        ga4:
          {{- if ($is_okteto_deploy) }}
          measurementId: "G-8G2RQS1GFH"
          {{- else }}
          measurementId: ${GA_ANALYTICS_ID}
          {{- end }}
          identity: optional
          testMode: false
          debug: true
      {{- end }}
    permission:
      enabled: {{ .Values.permission.enabled }}
      {{- if $rbacEnabled }}
      rbac:
        pluginsWithPermission:
          - catalog
          - scaffolder
          - permission
          - kubernetes
          - vee
          - kong
          - veecode-platform-permissions-hub
        {{- if .Values.permission.rbac.admin.defaultAdminRoleEnabled }}
        policies-csv-file: /app/rbac-policy.csv
        policyFileReload: true
        {{- end }}
        {{- if .Values.permission.rbac.maxDepth }}
        maxDepth: {{ .Values.permission.rbac.maxDepth }}
        {{- end }}
        {{- if or .Values.platform.guest.enabled (and .Values.permission.rbac.admin .Values.permission.rbac.admin.superUsers) (and .Values.permission.rbac.admin .Values.permission.rbac.admin.users) }}
        admin:
          {{- if .Values.permission.rbac.admin.superUsers }}
          superUsers:
          {{- range .Values.permission.rbac.admin.superUsers }}
            - name: {{ .name }}
          {{- end }}
          {{- end }}
          {{- if .Values.permission.rbac.admin.users }}
          users:
          {{- range .Values.permission.rbac.admin.users }}
            - name: {{ .name }}
          {{- end }}
          {{- end }}
        {{- end }}
      {{- end }}

    backend:
      auth:
        {{- if .Values.platform.guest.enabled }}
        dangerouslyDisableDefaultAuthPolicy: true
        {{- end }}
        externalAccess:
          - type: static
            options:
              token: ${BACKEND_AUTH_SECRET_KEY}
              subject: secret
      baseUrl: {{ $backend_path_without_last_slash }}
      listen:
        port: 7007
      database:
        client: {{ .Values.appConfig.database.client }}
        {{- if eq .Values.appConfig.database.client "better-sqlite3" }}
          {{- if and .Values.appConfig.database.connection .Values.appConfig.database.connection.directory }}
        directory: {{ .Values.appConfig.database.connection.directory }}
          {{- else }}
        connection: ':memory:'
          {{- end }}
        {{- else }}
        pluginDivisionMode: schema
        connection:
          host: ${DATABASE_HOST}
          port: {{ .Values.appConfig.database.connection.port }}
          database: ${DATABASE_NAME}
          user: ${DATABASE_USER}
          password: ${DATABASE_PASSWORD}
          {{- if and .Values.appConfig.database.connection .Values.appConfig.database.connection.ssl .Values.appConfig.database.connection.ssl.rejectUnauthorized .Values.appConfig.database.connection.ssl.caFilePath }}
          ssl:
            rejectUnauthorized: {{ .Values.appConfig.database.connection.ssl.rejectUnauthorized | default false }}
            ca:
              $file: {{ .Values.appConfig.database.connection.ssl.caFilePath | quote }}
          {{- end}}
        {{- end }}
      cache:
        store: memory
      cors:
        origin: {{ $app_path_without_last_slash }}
        methods: [GET, POST, PUT, DELETE, PATCH]
        credentials: true
      csp:
        {{- if hasPrefix "http://" .Values.appConfig.app.baseUrl }}
        upgrade-insecure-requests: false
        {{- end }}
        connect-src: {{ index .Values.appConfig.backend.csp.connectSrc | toJson}}
        img-src: {{ $cspListValues | toJson }}
        script-src: {{ index .Values.appConfig.backend.csp.scriptSrc | toJson}}
        {{- if .Values.appConfig.backend.csp.frameSrc }}
        frame-src: {{ index .Values.appConfig.backend.csp.frameSrc | toJson}}
        {{- end }}
        {{- if .Values.appConfig.backend.csp.frameAncestors }}
        frame-ancestors: {{ index .Values.appConfig.backend.csp.frameAncestors | toJson}}
        {{- end }}
      reading:
        allow:
          - host: example.com
          - host: "*.mozilla.org"

    {{- if or .Values.grafana.enabled $is_gitlab_provider }}
    proxy:
      endpoints:
        {{- if .Values.grafana.enabled | default false }}
        "/grafana/api":
          target: {{ $grafana_domain | default "${GRAFANA_DOMAIN}" }}
          headers:
            Authorization: Bearer ${GRAFANA_TOKEN}
        {{- end }}
        {{- if $is_gitlab_provider }}
        "/gitlab/api":
          target: {{ default "https://gitlab.com/api/v4" (default .Values.integrations.gitlab.apiBaseUrl .Values.proxy.gitlab.target) }}
          allowedHeaders: {{ .Values.proxy.gitlab.allowedHeaders | toJson }}
          credentials: dangerously-allow-unauthenticated
          headers:
          {{- range $key, $value := .Values.proxy.gitlab.headers }}
            {{ $key }}: {{ $value | quote }}
          {{- end }}
        {{- end }}
    {{- end }}
    organization:
      name: Veecode Platform Devportal

    techdocs:
      builder: "local"
      generator:
        runIn: "local"
      publisher:
        type: "local"

    {{- if hasKey .Values "kubernetes" }}
    kubernetes:
      serviceLocatorMethod:
        type: {{ $serviceLocatorMethodType }}
      clusterLocatorMethods:
        - type: catalog
      {{- range .Values.kubernetes.clusterLocatorMethods }}
        - type: '{{ .type | default "config" }}'
          {{- if .clusters }}
          clusters:
            {{- range $i, $e := .clusters}}
            - name: {{ .name | default "config_{{$i}}" }}
              {{- if .url }}
              url: '{{ .url }}'
              {{- end }}
              {{- if .authProvider }}
              authProvider: '{{ .authProvider }}'
              {{- end }}
              {{- if .oidcTokenProvider }}
              oidcTokenProvider: {{ .oidcTokenProvider }}
              {{- end }}
              skipTLSVerify: {{ .skipTLSVerify | default false}}
              skipMetricsLookup: {{ .skipMetricsLookup | default false }}
              {{- if .serviceAccountToken }}
              serviceAccountToken: ${KUBERNETES_SERVICE_ACCOUNT_TOKEN_{{$i}}}
              {{- end }}
              {{- if .projectId }}
              dashboardUrl: .dashboardUrl
              {{- end }}
              {{- if .dashboardApp }}
              dashboardApp: {{ .dashboardApp }}
              {{- end }}
              {{- if .caData }}
              caData: ${KUBERNETES_CERTIFICATE_DATA_{{$i}}}
              {{- end }}
              {{- if .caFile }}
              caFile: .caFile | default ''
              {{- end }}
              {{- if .customResources }}
              customResources:
                {{- range .customResources }}
                - group: '{{ .group }}'
                  {{- if .apiVersion }}
                  apiVersion: '{{ .apiVersion }}'
                  {{- end }}
                  {{- if .plural }}
                  plural: '{{ .plural }}'
                  {{- end }}
                {{- end }}
              {{- end }}
            {{- end }}
          {{- end }}
          {{- if .projectId }}
          projectId: '{{ .projectId }}'
          {{- end }}
          {{- if .region }}
          region: '{{ .region }}'
          {{- end }}
          {{- if .exposeDashboard }}
          exposeDashboard: {{ .exposeDashboard }}
          {{- end }}          
      {{- end }}  
    {{- end }}
    {{- if .Values.argocd.enabled }}
    argocd:
      {{- if and .Values.argocd.username .Values.argocd.password }}
      username: ${ARGOCD_USERNAME}
      password: ${ARGOCD_PASSWORD}
      {{- end }}
      {{- if .Values.argocd.instances }}       
      appLocatorMethods:
        - type: "config"
          instances:
            {{- range $i, $e := .Values.argocd.instances }}
            - name: {{ .name | quote }}
              url: {{ .url | quote }}
              {{- if .token }}
              token: ${ARGOCD_TOKEN_{{$i}}}
              {{- end }}
            {{- end }}
      {{- end}}
    {{- end }}

    {{- if .Values.integrations }}
    integrations:
      {{- if .Values.integrations.github }}
      github:
        - host: {{ .Values.integrations.github.host | default "github.com" | quote }}
          apiBaseUrl: {{ .Values.integrations.github.apiBaseUrl | default "https://api.github.com" | quote }}
          {{- if .Values.integrations.github.token }}
          token: ${GITHUB_TOKEN_SECRET}
          {{- end }}
          {{- if .Values.integrations.github.apps }}
          apps:
            - $include: github-app-credentials.yaml
          {{- end }}
      {{- end }}
      {{- if .Values.integrations.bitbucketCloud }}
      bitbucketCloud:
        - username: ${BITBUCKET_CLOUD_USERNAME}
          appPassword: ${BITBUCKET_CLOUD_PASSWORD}
      {{- end }}
      {{- if .Values.integrations.bitbucketServer }}
      bitbucketServer:
        - host: {{ .Values.integrations.bitbucketServer.host | quote }}
          apiBaseUrl: {{ .Values.integrations.bitbucketServer.apiBaseUrl | quote }}
          token: ${BITBUCKET_SERVER_TOKEN}
      {{- end }}
      {{- if .Values.integrations.gitlab  }}
      gitlab:
        - host: {{ .Values.integrations.gitlab.host | default "gitlab.com" | quote }}
          {{- if .Values.integrations.gitlab.apiBaseUrl }}
          apiBaseUrl: {{ .Values.integrations.gitlab.apiBaseUrl | quote }}
          {{- end }}
          {{- if .Values.integrations.gitlab.baseUrl }}
          baseUrl: {{ .Values.integrations.gitlab.baseUrl | quote }}
          {{- end }}
          token: ${GITLAB_TOKEN_SECRET}
          tokenFrontEnd: ${GITLAB_TOKEN_SECRET}
      {{- end }}
      {{- if .Values.integrations.azure }}
      azure:
        {{- range .Values.integrations.azure }}
        - host: {{ .host | default "dev.azure.com" | quote }}
          credentials:
            {{- range $i, $e := .credentials}}
            - organizations:
              {{- range .organizations }}
                - {{ . }}
              {{- end }}
              clientId: ${AZURE_CLIENT_ID_{{$i}}}
              clientSecret: ${AZURE_CLIENT_SECRET_{{$i}}}
              tenantId: ${AZURE_TENANT_ID_{{$i}}}
              personalAccessToken: ${AZURE_PERSONAL_ACCESS_TOKEN_{{$i}}}
            {{- end }}
        {{- end }}  
      {{- end }}
    {{- end }}
    {{- if or .Values.scaffolder .Values.integrations }}
    {{ "" }}
    scaffolder:
      {{- if .Values.scaffolder.defaultAuthor }}
      defaultAuthor:
        name: {{ .Values.scaffolder.defaultAuthor.name | quote }}
        email: {{ .Values.scaffolder.defaultAuthor.email | quote }}
      {{- end }}
      {{- if .Values.scaffolder.defaultCommitMessage }}  
      defaultCommitMessage: {{ .Values.scaffolder.defaultCommitMessage | quote }}
      {{- if and .Values.integrations (or .Values.integrations.github .Values.integrations.gitlab) }}
      providers:
        {{- if .Values.integrations.github }}
        github:
          - host: {{ .Values.integrations.github.host | default "github.com" | quote }}
            token: ${GITHUB_TOKEN_SECRET}
        {{- end }}
        {{- if .Values.integrations.gitlab  }}
        gitlab:
          - host: {{ .Values.integrations.gitlab.host | default "gitlab.com" | quote }}
            token: ${GITLAB_TOKEN_SECRET}
        {{- end }}
      {{- end }}
      {{- end }}
    {{- end }}

    catalog:
      orphanStrategy: {{ .Values.catalog.orphanStrategy | quote }}
      {{- if .Values.catalog.rules  }}
      rules:{{- range .Values.catalog.rules }}
        - allow: {{ .allow | toJson }}
      {{- end }}
      {{- end }}
      {{- if .Values.catalog.providers }}
      providers:
        {{- if .Values.catalog.providers.github }}
        githubOrg:
          id: providerId
          githubUrl: {{ .Values.catalog.providers.github.url | quote | default "https://github.com" }}
          orgs: [{{ .Values.catalog.providers.github.organization | quote }}]
          schedule:    
            frequency:
              {{- if and .Values.catalog.providers.github.schedule .Values.catalog.providers.github.schedule.frequency }}
              minutes: {{ .Values.catalog.providers.github.schedule.frequency }}
              {{- else }}
              minutes: 5
              {{- end }}
            timeout: 
              {{- if and .Values.catalog.providers.github.schedule .Values.catalog.providers.github.schedule.timeout }}
              minutes: {{ .Values.catalog.providers.github.schedule.timeout }}
              {{- else }}
              minutes: 3
              {{- end }}
        github:
          providerId: 
            organization: {{ .Values.catalog.providers.github.organization | quote }}
            catalogPath: {{ .Values.catalog.providers.github.catalogPath | default "/catalog-info.yaml" | quote }}
            validateLocationsExist: {{ .Values.catalog.providers.github.validateLocationsExist | default true }}
            filters:
              {{- if and .Values.catalog.providers.github.filters .Values.catalog.providers.github.filters.branch  }}
              branch: {{ .Values.catalog.providers.github.filters.branch | quote }}
              {{- else }}
              branch: "main"
              {{- end }}
              {{- if and .Values.catalog.providers.github.filters .Values.catalog.providers.github.filters.repository }}
              repository: {{ .Values.catalog.providers.github.filters.repository | quote }}
              {{- end }}
            schedule:    
              frequency:
                {{- if and .Values.catalog.providers.github.schedule .Values.catalog.providers.github.schedule.frequency }}
                minutes: {{ .Values.catalog.providers.github.schedule.frequency }}
                {{- else }}
                minutes: 5
                {{- end }}
              timeout: 
                {{- if and .Values.catalog.providers.github.schedule .Values.catalog.providers.github.schedule.timeout }}
                minutes: {{ .Values.catalog.providers.github.schedule.timeout }}
                {{- else }}
                minutes: 3
                {{- end }}
        {{- end }}
        {{- if .Values.catalog.providers.bitbucketCloud }}
        bitbucketCloud:
          yourProviderId: 
            workspace: {{ .Values.catalog.providers.bitbucketCloud.workspace | quote }}
            catalogPath: {{ .Values.catalog.providers.bitbucketCloud.catalogPath | default "/catalog-info.yaml" | quote }}
            {{- if and .Values.catalog.providers.bitbucketCloud.filters }}
            filters:
              {{- if and .Values.catalog.providers.bitbucketCloud.filters .Values.catalog.providers.bitbucketCloud.filters.projectKey }}
              projectKey: {{ .Values.catalog.providers.bitbucketCloud.filters.projectKey | quote }}
              {{- end }}
              {{- if and .Values.catalog.providers.bitbucketCloud.filters .Values.catalog.providers.bitbucketCloud.filters.repoSlug }}
              repoSlug: {{ .Values.catalog.providers.bitbucketCloud.filters.repoSlug | quote }}
              {{- end }}
            {{- end }}
            schedule:    
              frequency:
                {{- if and .Values.catalog.providers.bitbucketCloud.schedule .Values.catalog.providers.bitbucketCloud.schedule.frequency }}
                minutes: {{ .Values.catalog.providers.bitbucketCloud.schedule.frequency }}
                {{- else }}
                minutes: 5
                {{- end }}
              timeout: 
                {{- if and .Values.catalog.providers.bitbucketCloud.schedule .Values.catalog.providers.bitbucketCloud.schedule.timeout }}
                minutes: {{ .Values.catalog.providers.bitbucketCloud.schedule.timeout }}
                {{- else }}
                minutes: 3
                {{- end }}
        {{- end }}
        {{- if .Values.catalog.providers.bitbucketServer }}
        bitbucketServer:
          yourProviderId:
            host: {{ .Values.catalog.providers.bitbucketServer.host | quote }}
            catalogPath: {{ .Values.catalog.providers.bitbucketServer.catalogPath | default "/catalog-info.yaml" | quote }}
            {{- if and .Values.catalog.providers.bitbucketServer.filters }}
            filters:
              {{- if .Values.catalog.providers.bitbucketServer.filters.projectKey }} 
              projectKey: {{ .Values.catalog.providers.bitbucketServer.filters.projectKey | quote }}
              {{- end }}
              {{- if .Values.catalog.providers.bitbucketServer.filters.repoSlug }}
              repoSlug: {{ .Values.catalog.providers.bitbucketServer.filters.repoSlug | quote }}
              {{- end }}
            {{- end }}
            schedule:    
              frequency:
                {{- if and .Values.catalog.providers.bitbucketServer.schedule .Values.catalog.providers.bitbucketServer.schedule.frequency }}
                minutes: {{ .Values.catalog.providers.bitbucketServer.schedule.frequency }}
                {{- else }}
                minutes: 5
                {{- end }}
              timeout: 
                {{- if and .Values.catalog.providers.bitbucketServer.schedule .Values.catalog.providers.bitbucketServer.schedule.timeout }}
                minutes: {{ .Values.catalog.providers.bitbucketServer.schedule.timeout }}
                {{- else }}
                minutes: 3
                {{- end }}
        {{- end }}
        {{- if .Values.catalog.providers.gitlab }}
        gitlab:
          yourProviderId:
            host: {{ .Values.catalog.providers.gitlab.host | default "gitlab.com" | quote }}
            orgEnabled: {{ .Values.catalog.providers.gitlab.orgEnabled | default false }}
            branch: {{ .Values.catalog.providers.gitlab.branch | default "main" | quote }} 
            group: {{ .Values.catalog.providers.gitlab.group | quote }}
            entityFilename: {{ .Values.catalog.providers.gitlab.entityFilename | default "catalog-info.yaml" | quote }}
            {{- if .Values.catalog.providers.gitlab.projectPattern}}
            projectPattern: {{ .Values.catalog.providers.gitlab.projectPattern | quote }}
            {{- end }}
            schedule:    
              frequency:
                {{- if and .Values.catalog.providers.gitlab.schedule .Values.catalog.providers.gitlab.schedule.frequency }}
                minutes: {{ .Values.catalog.providers.gitlab.schedule.frequency }}
                {{- else }}
                minutes: 5
                {{- end }}
              timeout: 
                {{- if and .Values.catalog.providers.gitlab.schedule .Values.catalog.providers.gitlab.schedule.timeout }}
                minutes: {{ .Values.catalog.providers.gitlab.schedule.timeout }}
                {{- else }}
                minutes: 3
                {{- end }}
        {{- end }}
        {{- if hasKey .Values.catalog.providers "keycloak" }}
        keycloakOrg:
          default:
            baseUrl: {{ .Values.catalog.providers.keycloak.baseUrl }}
            loginRealm: {{ .Values.catalog.providers.keycloak.loginRealm | default "master" }}
            realm: {{ .Values.catalog.providers.keycloak.realm | default "platform-devportal" }}
            {{- if .Values.catalog.providers.keycloak.username }}
            username: ${CATALOG_KEYCLOAK_ADMIN_USERNAME}
            {{- end }}
            {{- if .Values.catalog.providers.keycloak.password }}
            password: ${CATALOG_KEYCLOAK_ADMIN_PASSWORD}
            {{- end }}
            {{- if .Values.catalog.providers.keycloak.clientId }}
            clientId: ${CATALOG_KEYCLOAK_CLIENT_ID}
            {{- end }}
            {{- if .Values.catalog.providers.keycloak.clientSecret }}
            clientSecret: ${CATALOG_KEYCLOAK_CLIENT_SECRET}
            {{- end }}
            schedule:    
              frequency:
                {{- if and .Values.catalog.providers.keycloak.schedule .Values.catalog.providers.keycloak.schedule.frequency }}
                minutes: {{ .Values.catalog.providers.keycloak.schedule.frequency }}
                {{- else }}
                minutes: 5
                {{- end }}
              timeout: 
                {{- if and .Values.catalog.providers.keycloak.schedule .Values.catalog.providers.keycloak.schedule.timeout }}
                minutes: {{ .Values.catalog.providers.keycloak.schedule.timeout }}
                {{- else }}
                minutes: 3
                {{- end }}
            userQuerySize: {{ .Values.catalog.providers.keycloak.userQuerySize | default 500 }}
            groupQuerySize: {{ .Values.catalog.providers.keycloak.groupQuerySize | default 250 }}
        {{- end }}
        {{- if .Values.infracost.enabled }}
        infracost:
          default: 
            schedule:    
              frequency:
                {{- if and .Values.infracost.schedule .Values.infracost.schedule.frequency }}
                minutes: {{ .Values.infracost.schedule.frequency }}
                {{- else }}
                minutes: 5
                {{- end }}
              timeout: 
                {{- if and .Values.infracost.schedule .Values.infracost.schedule.timeout }}
                minutes: {{ .Values.infracost.schedule.timeout }}
                {{- else }}
                minutes: 3
                {{- end }}
              initialDelay: 
                {{- if and .Values.infracost.schedule .Values.infracost.schedule.initialDelay }}
                seconds: {{ .Values.infracost.schedule.initialDelay }}
                {{- else }}
                seconds: 15
                {{- end }}
        {{- end }}
      {{- end }}
      {{- if .Values.locations }}
      locations: {{- range .Values.locations }}
        - type: {{- indent 1 .type }}
          target: {{- indent 1 .target }}
          {{- if .rules }}
          rules: {{- range .rules }}
            - allow: {{ .allow | toJson }}
          {{- end }}
          {{- end }}
      {{- end }}
      {{- end }}
    search:
      pg:
        highlightOptions:
          useHighlight: {{ .Values.search.pg.highlightOptions.useHighlight }}
          maxWord: {{ .Values.search.pg.highlightOptions.maxWord }}
          minWord: {{ .Values.search.pg.highlightOptions.minWord }}
          shortWord: {{ .Values.search.pg.highlightOptions.shortWord }}
          highlightAll: {{ .Values.search.pg.highlightOptions.highlightAll }}
          maxFragments: {{ .Values.search.pg.highlightOptions.maxFragments }}
          fragmentDelimiter: {{ .Values.search.pg.highlightOptions.fragmentDelimiter }}
        schedule:        
          frequency: 
            minutes: {{ .Values.search.pg.schedule.frequency.minutes }}
          timeout: 
            minutes: {{ .Values.search.pg.schedule.timeout.minutes }}
    auth:
      environment: {{ .Values.auth.environment | default "development" | quote }}
      session:
        secret: ${AUTH_USER_SESSION_SECRET}
      {{- if or .Values.auth.providers .Values.platform.guest.enabled }} 
      providers:
        {{- if .Values.platform.guest.enabled }}
        guest: {}
        {{- end }}
        {{- if .Values.auth.providers.keycloak }}
        oidc:
          development:
            metadataUrl: ${KEYCLOAK_METADATA_URL}
            clientId: ${KEYCLOAK_CLIENT_ID}
            clientSecret: ${KEYCLOAK_CLIENT_SECRET}
            prompt: {{ .Values.auth.providers.keycloak.prompt | default "auto"}}
            signIn:
              resolvers:
                - resolver: emailLocalPartMatchingUserEntityName
                - resolver: emailMatchingUserEntityProfileEmail
        {{- end }}
        {{- if .Values.auth.providers.github }}
        github:
          development:
            clientId: ${AUTH_GITHUB_CLIENT_ID}
            clientSecret: ${AUTH_GITHUB_CLIENT_SECRET}
            {{- if .Values.auth.providers.github.enterpriseInstanceUrl }}
            enterpriseInstanceUrl: {{ .Values.auth.providers.github.enterpriseInstanceUrl | quote }}
            {{- end }}
            signIn:
              resolvers:
                - resolver: usernameMatchingUserEntityName
                - resolver: emailMatchingUserEntityProfileEmail
                - resolver: emailLocalPartMatchingUserEntityName
        {{- end }}
        {{- if .Values.auth.providers.gitlab }}
        gitlab:
          development: 
            clientId: ${AUTH_GITLAB_CLIENT_ID}
            clientSecret: ${AUTH_GITLAB_CLIENT_SECRET}
            {{- if .Values.auth.providers.gitlab.audience }}
            audience: {{ .Values.auth.providers.gitlab.audience | default "https://gitlab.com" | quote }}
            {{- end }}
            {{- if or .Values.auth.providers.gitlab.callbackUrl .Values.auth.providers.gitlab.audience }}
            callbackUrl: {{ .Values.auth.providers.gitlab.callbackUrl | default "{{ $backend_path_without_last_slash }}/api/auth/gitlab/handler/frame" | quote }}
            {{- end }}
            signIn:
              resolvers:
                - resolver: usernameMatchingUserEntityName
        {{- end }}
      {{- end }}
    enabledPlugins:
      rbac: {{ $rbacEnabled }}
      vault: {{ .Values.vault.enabled | default false }}
      grafana: {{ .Values.grafana.enabled | default false }}
      kubernetes: {{ hasKey .Values "kubernetes" }}
      argocd: {{ .Values.argocd.enabled | default false }}
      gitlabPlugin: {{ hasKey .Values.integrations "gitlab" }}
      keycloak: {{ hasKey .Values.catalog.providers "keycloak" }}
      azureDevops: {{ .Values.azureDevOps.enabled | default false }}
      infracost: {{ .Values.infracost.enabled | default false }}
      kong: {{ .Values.kong.enabled | default false }}
      vee: {{ .Values.vee.enabled | default false }}
      sonarqube: {{ .Values.sonarqube.enabled | default false }}
      gitlab: {{ $is_gitlab_provider }}
      github: {{ $is_github_provider }}
    platform:
      signInProviders: 
      {{- range .Values.platform.signInProviders }}
        - {{. | quote }}
      {{- end}}
      guest:
        enabled: {{ .Values.platform.guest.enabled | default false }}
        demo: {{ .Values.platform.guest.demo | default false }}
      apiManagement:
        enabled: {{ .Values.platform.apiManagement.enabled | default false }}
        readOnlyMode: {{ .Values.platform.apiManagement.readOnlyMode | default false }}
      defaultGroup:
        enabled: {{ .Values.platform.defaultGroups.enabled | default false }}
      group:
        admin: {{ .Values.platform.defaultGroups.admin | default "platform-admin" }}
        user: {{ .Values.platform.defaultGroups.user | default "platform-user" }}
      behaviour: 
        mode: {{ .Values.platform.behaviour.mode | default "product" | quote}}
        {{- if eq .Values.platform.behaviour.mode "custom" }}
        home: {{ eq .Values.platform.behaviour.home | default true }}
        catalog: {{ eq .Values.platform.behaviour.catalog | default true }}
        apis: {{ eq .Values.platform.behaviour.apis | default true }}
        resources: {{ eq .Values.platform.behaviour.resources | default true }}
        create: {{ eq .Values.platform.behaviour.create true }}
        docs: {{ eq .Values.platform.behaviour.docs | default true }}
        groups: {{ eq .Values.platform.behaviour.groups | default true }}
        apiManagement: {{ eq .Values.platform.behaviour.apiManagement | default true }}
        {{- end }}
      {{- if and .Values.platform.support .Values.platform.support.licenseKey }}
      support:
        licenseKey: {{ .Values.platform.support.licenseKey | quote }} 
      {{- end}}
      logo:
        icon: {{ .Values.theme.images.sidebarIcon }}
        full: {{ .Values.theme.images.sidebarFull }}
    {{- if .Values.zoraOss}}
    zoraOss:
      openAiApiKey: {{ .Values.zoraOss.openAiApiKey | quote }}
      openAiModel: {{ .Values.zoraOss.openAiModel | quote }}
    {{- end }}
    vulnerabilities:
      enabled: {{ .Values.vulnerabilities.enabled | default false }}
    {{- if .Values.sonarqube.enabled }}
    sonarqube:
      {{- if .Values.sonarqube.instances }}
      instances:
        {{- range .Values.sonarqube.instances }}
        - name: {{ .name | quote }}
          instanceKey: {{ .instanceKey | quote }}
          baseUrl: {{ .baseUrl | default "https://sonarcloud.io" | quote }}
          apiKey: {{ .apiKey | quote }}
        {{- end }}
      {{- else }}
      baseUrl: {{ .Values.sonarqube.baseUrl | default "https://sonarcloud.io" | quote }}
      instanceKey: {{ .Values.sonarqube.instanceKey | quote }}
      apiKey: {{ .Values.sonarqube.apiKey | quote }}
      {{- end }}
    {{- end }}
    {{- if .Values.vault.enabled }}
    vault:
      baseUrl: {{ .Values.vault.domain }}
      {{- if .Values.vault.publicUrl }}
      publicUrl: {{ .Values.vault.publicUrl }}
      {{- end }}
      auth:
        type: static
        secret: ${VAULT_TOKEN_RENEWABLE}
      secretEngine: {{ .Values.vault.secretEngine | default "secrets" }}
      kvVersion: {{ .Values.vault.kvVersion | default 2 }}
    {{- end }}      
    grafana:
      domain: {{ $grafana_domain | default "${GRAFANA_DOMAIN}" }} 
      unifiedAlerting: true
    {{- if .Values.kong.enabled }}
    kong:
      instances:
      {{- range $i, $e := .Values.kong.instances  }}
      - id: {{ .name }}
        apiBaseUrl: {{ .apiManager }}
        {{- if .workspace }}
        workspace: {{ .workspace }}
        {{- end }}
        {{- if and .authorization (or .authorization.adminToken .authorization.custom) }}
        auth:
          {{- if .authorization.adminToken }}
          kongAdmin: ${KONG_ADMIN_TOKEN_{{$i}}}
          {{- end }}
          {{- if .authorization.custom }}
          custom:
            header: {{ .authorization.custom.header }}
            value: ${KONG_ADMIN_CUSTOM_TOKEN_{{$i}}}
          {{- end }}
        {{- end }}
      {{- end }}
    {{- end }}
    {{- if or (and .Values.vee.openai .Values.vee.enabled .Values.vee.openai.apiBaseUrl .Values.vee.openai.model .Values.vee.openai.apiKey) }}
    vee:
      openai:
        apiBaseUrl: {{ .Values.vee.openai.apiBaseUrl }}
        apiKey: {{ .Values.vee.openai.apiKey }}
        model: {{ .Values.vee.openai.model }}
    {{- end }}
    {{- if .Values.azureDevOps.enabled }}
    azureDevOps:
      host: {{ .Values.azureDevOps.host | default "dev.azure.com" | quote }}
      organization: {{ .Values.azureDevOps.organization }}
      token: ${AZURE_DEVOPS_TOKEN}
    {{- end }}