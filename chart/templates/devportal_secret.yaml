{{- $backend_token := .Values.appConfig.backend.secret | default uuidv4 }} 
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "devportal-charts.fullname" . }}-credentials
type: Opaque
stringData:
  BACKEND_AUTH_SECRET_KEY: {{ $backend_token }}
  AUTH_USER_SESSION_SECRET: {{ $backend_token }}
  {{- if (and .Values.integrations.bitbucketCloud .Values.integrations.bitbucketCloud.username) }}
  BITBUCKET_CLOUD_USERNAME: {{ .Values.integrations.bitbucketCloud.username }}
  {{- end }}
  {{- if (and .Values.integrations.bitbucketCloud .Values.integrations.bitbucketCloud.appPassword) }}
  BITBUCKET_CLOUD_PASSWORD: {{ .Values.integrations.bitbucketCloud.appPassword }}
  {{- end }}
  {{- if (and .Values.integrations.bitbucketServer .Values.integrations.bitbucketServer.token) }}
  BITBUCKET_SERVER_TOKEN: {{ .Values.integrations.bitbucketServer.token }}
  {{- end }}
  {{- if (and .Values.auth.providers .Values.auth.providers.keycloak .Values.auth.providers.keycloak.metadataUrl) }}
  KEYCLOAK_METADATA_URL: {{ .Values.auth.providers.keycloak.metadataUrl }}
  KEYCLOAK_BASE_URL: {{ include "extract-host" .Values.auth.providers.keycloak.metadataUrl }}
  {{- end }}
  {{- if (and .Values.auth.providers .Values.auth.providers.keycloak .Values.auth.providers.keycloak.clientId) }}
  KEYCLOAK_CLIENT_ID: {{ .Values.auth.providers.keycloak.clientId }}
  {{- end }}
  {{- if (and .Values.auth.providers .Values.auth.providers.keycloak .Values.auth.providers.keycloak.clientSecret) }}
  KEYCLOAK_CLIENT_SECRET: {{ .Values.auth.providers.keycloak.clientSecret }}
  {{- end }}
  {{- if (and .Values.auth.providers .Values.auth.providers.keycloak .Values.auth.providers.keycloak.admin .Values.auth.providers.keycloak.admin.username) }}
  KEYCLOAK_ADMIN_USERNAME: {{ .Values.auth.providers.keycloak.admin.username }}
  {{- end }}
  {{- if (and .Values.auth.providers .Values.auth.providers.keycloak .Values.auth.providers.keycloak.admin .Values.auth.providers.keycloak.admin.password) }}
  KEYCLOAK_ADMIN_PASSWORD: {{ .Values.auth.providers.keycloak.admin.password }}
  {{- end }}
  {{- if (and .Values.appConfig.database.connection .Values.appConfig.database.connection.host) }}
  DATABASE_HOST: {{ .Values.appConfig.database.connection.host }}
  {{- end }}
  {{- if (and .Values.appConfig.database.connection .Values.appConfig.database.connection.database) }}
  DATABASE_NAME: {{ .Values.appConfig.database.connection.database | default "platform_devportal" }}
  {{- end }}
  {{- if (and .Values.appConfig.database.connection .Values.appConfig.database.connection.user) }}
  DATABASE_USER: {{ .Values.appConfig.database.connection.user }}
  {{- end }}
  {{- if (and .Values.appConfig.database.connection .Values.appConfig.database.connection.password) }}
  DATABASE_PASSWORD: {{ .Values.appConfig.database.connection.password | default "postgres1234" | quote }}
  {{- end }}
  {{- if (and .Values.grafana .Values.grafana.token) }}
  GRAFANA_TOKEN: {{ .Values.grafana.token }}
  {{- end }}
  {{- if (and .Values.argocd .Values.argocd.domain) }}
  ARGOCD_DOMAIN: "{{ .Values.argocd.domain }}"
  ARGOCD_URL_API: "{{ .Values.argocd.domain }}/api/v1"
  {{- end }}
  {{- if (and .Values.argocd .Values.argocd.username) }}
  ARGOCD_USERNAME: {{ .Values.argocd.username }}
  {{- end }}
  {{- if (and .Values.argocd .Values.argocd.password) }}
  ARGOCD_PASSWORD: "{{ .Values.argocd.password }}" 
  {{- end }}
  {{- if (and .Values.argocd .Values.argocd.token) }}
  ARGOCD_TOKEN: "{{ .Values.argocd.token }}"
  {{- end }}
  {{- if (and .Values.vault .Values.vault.token) }}
  VAULT_TOKEN_RENEWABLE: {{ .Values.vault.token }}
  {{- end }}
  {{- if and .Values.kong.enabled .Values.kong.instances }}
  {{- range $i, $e := .Values.kong.instances }}
  {{- if and .authorization .authorization.adminToken }}
  KONG_ADMIN_TOKEN_{{$i}}: {{ .authorization.adminToken }}
  {{- end }}
  {{- if and .authorization .authorization.custom .authorization.custom.value }}
  KONG_ADMIN_CUSTOM_TOKEN_{{$i}}: {{ .authorization.custom.value }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- if (and .Values.okta .Values.okta.domain) }}
  OKTA_HOST: {{ .Values.okta.domain }}
  {{- end }}
  {{- if (and .Values.okta .Values.okta.token) }}
  OKTA_TOKEN: {{ .Values.okta.token }}
  {{- end }}
  {{- if (and .Values.integrations .Values.integrations.github .Values.integrations.github.token) }}
  GITHUB_TOKEN_SECRET: {{ .Values.integrations.github.token }}
  {{- end }}
  {{- if (and .Values.auth.providers .Values.auth.providers.github .Values.auth.providers.github.clientId) }}
  AUTH_GITHUB_CLIENT_ID: {{ .Values.auth.providers.github.clientId }}
  {{- end }}
  {{- if (and .Values.auth.providers .Values.auth.providers.github .Values.auth.providers.github.clientSecret) }}
  AUTH_GITHUB_CLIENT_SECRET: {{ .Values.auth.providers.github.clientSecret }}
  {{- end }}
  {{- if (and .Values.auth.providers .Values.auth.providers.gitlab .Values.auth.providers.gitlab.clientId) }}
  AUTH_GITLAB_CLIENT_ID: {{ .Values.auth.providers.gitlab.clientId }}
  {{- end }}
  {{- if (and .Values.auth.providers .Values.auth.providers.gitlab .Values.auth.providers.gitlab.clientSecret) }}
  AUTH_GITLAB_CLIENT_SECRET: {{ .Values.auth.providers.gitlab.clientSecret }}
  {{- end }}
  {{- if (and .Values.integrations.gitlab .Values.integrations.gitlab.token) }}
  GITLAB_TOKEN_SECRET: {{ .Values.integrations.gitlab.token }}
  {{- end }}
  {{- if .Values.sonarqube.enabled }}
    {{- if .Values.sonarqube.instances }}
      {{- range $i, $instance := .Values.sonarqube.instances }}
        SONAR_INSTANCE_NAME_{{$i}}: {{ $instance.name | quote }}
        SONAR_INSTANCE_KEY_{{$i}}: {{ $instance.instanceKey | quote }}
        SONAR_BASE_URL_{{$i}}: {{ $instance.baseUrl | default "https://sonarcloud.io" | quote }}
        SONAR_API_KEY_{{$i}}: {{ $instance.apiKey | quote }}
      {{- end }}
    {{- else }}
  SONAR_INSTANCE_KEY: {{ .Values.sonarqube.instanceKey | quote }}
  SONAR_BASE_URL: {{ .Values.sonarqube.baseUrl | default "https://sonarcloud.io" | quote }}
  SONAR_API_KEY: {{ .Values.sonarqube.apiKey | quote }}
    {{- end }}
  {{- end }}
  {{- if hasKey .Values.catalog.providers "keycloak" }}
  {{- if .Values.catalog.providers.keycloak.username }}
  CATALOG_KEYCLOAK_ADMIN_USERNAME: {{ .Values.catalog.providers.keycloak.username }}
  {{- end }}
  {{- if .Values.catalog.providers.keycloak.password }}
  CATALOG_KEYCLOAK_ADMIN_PASSWORD: {{ .Values.catalog.providers.keycloak.password }}
  {{- end }}
  {{- if .Values.catalog.providers.keycloak.clientId }}
  CATALOG_KEYCLOAK_CLIENT_ID: {{ .Values.catalog.providers.keycloak.clientId }}
  {{- end }}
  {{- if .Values.catalog.providers.keycloak.clientSecret }}
  CATALOG_KEYCLOAK_CLIENT_SECRET: {{ .Values.catalog.providers.keycloak.clientSecret }}
  {{- end }}
  {{- end }}
  {{- if (and .Values.appConfig.analytics .Values.appConfig.analytics.ga .Values.appConfig.analytics.ga.measurementId) }}
  GA_ANALYTICS_ID: {{ .Values.appConfig.analytics.ga.measurementId }}
  {{- end }}
  {{- if .Values.kubernetes }}
  {{- range .Values.kubernetes.clusterLocatorMethods }}
  {{- if .clusters }}
  {{- range $i, $e := .clusters}}
  {{- if .serviceAccountToken }}
  KUBERNETES_SERVICE_ACCOUNT_TOKEN_{{$i}}: {{ .serviceAccountToken }}
  {{- end }}
  {{- if .caData }}
  KUBERNETES_CERTIFICATE_DATA_{{$i}}: {{ .caData }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- if .Values.integrations.azure }}{{- range .Values.integrations.azure }}{{- range $i, $e := .credentials}}
  AZURE_CLIENT_ID_{{$i}}: {{ .clientId }}
  AZURE_CLIENT_SECRET_{{$i}}: {{ .clientSecret }}
  AZURE_TENANT_ID_{{$i}}: {{ .tenantId }}
  AZURE_PERSONAL_ACCESS_TOKEN_{{$i}}: {{ .personalAccessToken }}
  {{- end }}{{- end }}{{- end }}
  {{- if .Values.azureDevOps.enabled }}
  AZURE_DEVOPS_TOKEN: {{ .Values.azureDevOps.token }}
  {{- end }}
  {{- range $i, $e := .Values.kong.instances }}
  {{- if .adminToken }}
  KONG_ADMIN_TOKEN_{{$i}}: {{ .adminToken }}-
  {{- end }}  
  {{- end }}