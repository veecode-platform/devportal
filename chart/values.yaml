replicas: 1 #number of devportal pod replicas to create
image:
  repository: veecode/devportal-bundle #devportal image repository
  tag: latest #devportal image tag
  pullPolicy: IfNotPresent #kubernetes pull policy
#imagePullSecrets: {} #image pull secrets
environment: development #application environment

extraEnv: [] #environment variables
  #- name: NODE_TLS_REJECT_UNAUTHORIZED
  #  value: 0

serviceAccount:
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

 #Host aliases for devportal
hostAliases: [] 
  #- ip: "127.0.0.1" #host ip
  #  hostnames:
  #   - "foo.local" #hostnames

service:
  enabled: true #if `true`, an service is created
  type: ClusterIP #service type, could be ‘ClusterIP’, ‘LoadBalancer’ or ‘NodePort’
  containerPort: 7007 #port to serve on the internal service

ingress:
  enabled: false #If `true`, an ingress is created
#  host: # your host to devportal ingress
#  className: nginx #ingress class name
#  path: / # Ingress path
#  pathType: Prefix # Ingress pathType
#  annotations: {} #ingress annotations
    #konghq.com/https-redirect-status-code: "308"
    #konghq.com/preserve-host: "true"
    #konghq.com/protocols: "https"
    #konghq.com/strip-path: "false"
#  tls: {} #TLS secrets and which hosts they should be used for
#    secretName: devportal-secret #tls secret name

resources:
  requests:
    memory: 256Mi #request memory
    cpu: 250m #request cpu
  limits:
    memory: 512Mi #limit memory
    cpu: 500m #limit cpu

  #use https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/ to configure readinessProbe and livenessProbe
#readinessProbe: #use k8s docs to implement
#   httpGet:
#     path: /.backstage/health/v1/readiness
#     port: 7007
#   initialDelaySeconds: #suggestion 30
#   periodSeconds: #suggestion 10
#livenessProbe: #use k8s docs to implement
#   httpGet:
#     path: /.backstage/health/v1/liveness
#     port: 7007
#   initialDelaySeconds: #suggestion 30
#   periodSeconds: #suggestion 10

appConfig:
  title: Devportal Platform #devportal title
  app:
    baseUrl: http://localhost:3000 #devportal base URL
  backend:
    baseUrl: http://localhost:7007 #devportal backend base URL
    #    secret: #devportal backend secret. Random value.
    csp:
      connectSrc: ["'self'", "http:", "https:"] #CSP connect-src
      imgSrc: [
        "'self'",
         "data:",
         "https://raw.githubusercontent.com/",
         "https://avatars.githubusercontent.com/"
         ] #CSP img-src
      scriptSrc: [
          "'self'",
          "'unsafe-eval'",
          "https://www.google-analytics.com",
          "https://www.googletagmanager.com",
        ] #CSP script-src
  #      frameAncestors: ["'self'", '*'] #CSP frame-ancestors
  #      frameSrc: ["'self'"] #CSP frame-src
  #  analytics:
  #    ga:
  #      measurementId: #Google analytics metrics ID

  database:
    client: better-sqlite3 #database client (better-sqlite3 or pg)
#    connection:
#      directory: #sqlite directory instead of memory storage
#      host: postgres-postgresql.vkpr #database host
#      port: 5432 #database port number
#      database: platform_devportal #database name
#      user: postgres #database username
#      password: postgres #database password

#locations:
#  - type: #location type to import(url)
#    target: #location target address
#    rules:
#        - allow: [] #Kinds to import (Component, Template, API, Group, User, Resource, System, Domain, Location)

search:
  pg:
    highlightOptions:
      useHighlight: true # Used to enable to disable the highlight feature. The default value is true
      maxWord: 35 # Used to set the longest headlines to output. The default value is 35.
      minWord: 15 # Used to set the shortest headlines to output. The default value is 15.
      shortWord: 3 # Words of this length or less will be dropped at the start and end of a headline, unless they are query terms. The default value of three (3) eliminates common English articles.
      highlightAll: false # If true the whole document will be used as the headline, ignoring the preceding three parameters. The default is false.
      maxFragments: 0 # Maximum number of text fragments to display. The default value of zero selects a non-fragment-based headline generation method. A value greater than zero selects fragment-based headline generation (see the linked documentation above for more details).
      fragmentDelimiter: " ... "
    schedule:
      frequency:
        minutes: 3
      timeout:
        minutes: 5
grafana:
  enabled: false #enable grafana plugin
#  domain:  #grafana domain
#  token:  #grafana token

argocd:
  enabled: false #enable ArgoCD plugin
#  domain:  #argoCD domain
#  username:  #argoCD username
#  token:  #argoCD token

vault:
  enabled: false #enable Vault plugin
  domain:  #vault domain
#  publicUrl: #vault public url
#  token:  #vault token
#  secretEngine: secrets #vault secret engine
#  kvVersion: 2 #vault kv version (1 | 2)

kong:
  enabled: true #enable Kong integration
#  instances:
#    - name: #Kong instance name
#      apiManager: #Kong API Manager
#      workspace: 'default' #Kong workspace
#      authorization: 
#        adminToken: #Kong admin token (optional)
#        custom: #custom token (optional)
#          header: #custom header
#          value: #custom header value

azureDevOps:
  enabled: false #enable Azure DevOps plugin
#  host: dev.azure.com #azure host
#  token: #azure token
#  organization: #azure organization

infracost:
  enabled: false
#  schedule:
#    frequency: 5 #time in minutes to refresh the catalog
#    timeout: 3 #time in minutes to timeout after the refresh request
#    initialDelay: 15 #time in minutes to wait before the first refresh request

vee:
  enabled: true
    # openai:
    #   apiBaseUrl: #api_base_url
    #   apiKey: #api_key
    #   model: #model

sonarqube:
  enabled: false #enable SonarQube plugin
  # baseUrl: ${SONARQUBE_BASE_URL}
  # instanceKey: ${SONARQUBE_INSTANCE_KEY}
  # apiKey: ${SONARQUBE_API_KEY}

proxy:
  gitlab:
    # target: https://gitlab.com #(Optional)Auto generated, only override if needed
    allowedHeaders: ["Authorization", "Content-Type"]
    headers:
      Accept: application/json
      Content-Type: "application/json"

auth:
  providers: {}
#    oidc:
#      metadataUrl:  #keycloak .well-known url
#      clientId:  #keycloak client id
#      clientSecret:  #keycloak client secret
#      prompt: auto #enable keycloak prompt
#    github:
#      clientId:  #github Oauth application client id
#      clientSecret:  #github Oauth application client secret
#    gitlab:
#      clientId: #Gitlab Client ID
#      clientSecret: #Gitlab Client Secret
#      audience: "https://gitlab.com" #Gitlab Audience

integrations: {}
#  azure:
#    - host: dev.azure.com #azure host
#      credentials:
#        - organizations: [] #list of organizations to sync
#          clientId: #client id
#          clientSecret: #client secret
#          tenantId: #tenant id
#          personalAccessToken: #personal access token
#  github:
#    host: github.com #github Server Host
#    apiBaseUrl: https://api.github.com
#    token:  #github Token
#    apps:
#      secretName: #Github App Secret Name
#      appId: #Github App Id
#      allowedInstallationOwners: #optional: allowed installation owners
#      clientId: #Github App Client Id
#      clientSecret: #Github App Client Secret
#      webhookSecret: #Github App Webhook Secret
#      privateKey: #Github App Private Key
#  bitbucketCloud:
#    username:  #Bitbucket Cloud Username
#    appPassword:  #Bitbucket Cloud Password
#  bitbucketServer:
#    host: #Bitbucket Cloud Host ex. bitbucket.company.com
#    apiBaseUrl:  #Bitbucket Cloud Api Base
#    token:  #Bitbucket Cloud Token
#  gitlab:
#    host: gitlab.com #Gitlab Host
#    apiBaseUrl: #api base URL: https://gitlab.domain.com/api/v4
#    token:  #Gitlab Server Token
#    callbackUrl: #The URL matching the Redirect URI registered when creating your GitLab OAuth App

permission:
  enabled: true
  rbac:
    enabled: true
    pluginsWithPermission:
      - catalog
      - scaffolder
      - permission
      - kubernetes
      - kong
      - vee
      - veecode-platform-permissions-hub
    admin:
      defaultAdminRoleEnabled: true
#      superUsers:
#        - name: user:default/admin
#      users:
#        - name: user:default/<user-name>
#    maxDepth: 1

scaffolder:
  defaultAuthor:
    name: Scaffolder # Scaffolder Author Name
    email: scaffolder@vee.codes # Scaffolder Author Email
  defaultCommitMessage: "initial project commit" # Scaffolder Default Commit Message

catalog:
  orphanStrategy: delete #Orphan strategy(delete|keep)
  rules: #Catalog rules
    - allow: [Component, API, Location, Cluster, Template, Environment, Database, Vault, Infracost, Group, User]
  providers: {}
#    github:
#      organization: #github Organization Name
#      catalogPath: /catalog-info.yaml #path catalog info
#      validateLocationsExist: true #check if exists
#      filters:
#        branch: main #branch to filter
#        repository: ## Regex repository name
#      schedule:
#        frequency: 5 #time in minutes to refresh the catalog
#        timeout: 3 #time in minutes to timeout after the refresh request
#    bitbucketCloud:
#      workspace: #Bitbucket workspace
#      catalogPath: "/catalog-info.yaml" #Path catalog info
#      filters:
#        projectKey: #optional Bitbucket project key
#        repoSlug: ##optional Bitbucket repo slug
#      schedule:
#        frequency: 5 #time in minutes to refresh the catalog
#        timeout: 3 #time in minutes to timeout after the refresh request
#    bitbucketServer:
#      host:
#      catalogPath: #Path catalog info
#      filters:
#        projectKey: #Bitbucket project key
#        repoSlug: #Bitbucket repo slug
#      schedule:
#        frequency: 5 #time in minutes to refresh the catalog
#        timeout: 3 #time in minutes to timeout after the refresh request
#    gitlab:
#      host: gitlab.com #Identifies one of the hosts set up in the integrations
#      orgEnabled: false #Enable organization
#      branch: main #Optional. Uses `master` as default
#      group: #Optional. Group and subgroup (if needed) to look for repositories. If not present the whole project will be scanned.
#      entityFilename: 'catalog-info.yaml' #Catalog file path
#      projectPattern: /[\s\S]*/ #Optional. Filters found projects based on provided patter.
#      schedule:
#        frequency: 5 #time in minutes to refresh the catalog
#        timeout: 3 #time in minutes to timeout after the refresh request
#    keycloak:
#      baseUrl: #keycloak base url
#      loginRealm: master #realm used to login
#      realm: platform-devportal #realm to be managed
#      username: #username to user with permissions to get groups and users
#      password: #password
       # If you are using username and password ignore the following with clientId and clientSecret
#      clientId: client id #client id
#      clientSecret: client secret #client secret
#      schedule:
#        frequency: 5 #time in minutes to refresh the catalog
#        timeout: 3 #time in minutes to timeout after the refresh request
#      userQuerySize: 500 #User query size to sync
#      groupQuerySize: 250 #Group query size to sync

platform:
  guest:
    enabled: true #enable guest mode
    demo: false #enable demo guest mode
  apiManagement:
    enabled: false #enable platform Api management module
    readOnlyMode: false #Enable platform Api management readonly mode
  defaultGroups:
    enabled: false #If 'false', the user will not be able to belong to any group. If 'true', the user will belong to the user group by default.
    admin: "platform-admin" #Group to be mapped as devportal's admin group
    user: "platform-user" #Group to be mapped as devportal's user group
  behaviour:
    mode: product #(product, demo, workshop, custom)
#    home: true #enable or disable menu if mode is custom selected
#    catalog: true #enable or disable menu if mode is custom selected
#    apis: true #enable or disable menu if mode is custom selected
#    resources: true #enable or disable menu if mode is custom selected
#    create: true #enable or disable menu if mode is custom selected
#    docs: true #enable or disable menu if mode is custom selected
#    groups: true #enable or disable menu if mode is custom selected
#    apiManagement: true #enable or disable menu if mode is custom selected
  support:
    licenseKey:

#kubernetes:
# serviceLocatorMethod:
#   type: 'multiTenant' #determine which clusters a component is running in
# clusterLocatorMethods:
#   - type: 'config' #determine where to retrieve cluster configuration from
#     clusters:
#       - url: ''
#         authProvider: ''
#         oidcTokenProvider:
#         skipTLSVerify: false
#         skipMetricsLookup: true
#         serviceAccountToken: ''
#         dashboardUrl:  # url copied from running the command: minikube service kubernetes-dashboard -n kubernetes-dashboard
#         dashboardApp:
#         caData:
#         caFile: '' # local path to CA file
#         customResources:
#           - group: ''
#             apiVersion: ''
#             plural: ''
#         name:
#         projectId: ''
#         region: ''
#         exposeDashboard: false

theme:
  images:
    sidebarIcon: "https://platform.vee.codes/apple-touch-icon.png" #Menu Icon Url
    sidebarFull: "https://platform.vee.codes/assets/logo/logo.png" #Menu logo Url
    favicon: #Favicon URL
  custom:
    #use configmapName or downloadUrl
    configmapName: #Configmap with theme file created
    downloadUrl: #Theme file url

serviceMonitor:
  enabled: false #true to enable
#  interval: 30s
#  scrapeTimeout: 10s
#  selectors:
#    release: prometheus

#zoraOss: 
#  openAiApiKey: xxxxxxxx #OpenAI API Key
#  openAiModel: xxxxxxxx #OpenAI Model
