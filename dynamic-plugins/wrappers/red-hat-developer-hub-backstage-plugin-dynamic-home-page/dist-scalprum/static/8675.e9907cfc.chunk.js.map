{"version":3,"file":"static/8675.e9907cfc.chunk.js","mappings":"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","sources":["webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/@backstage/plugin-home/dist/components/HomepageCompositionRoot.esm.js","webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/@backstage/catalog-model/dist/entity/constants.esm.js","webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/@backstage/catalog-model/dist/entity/ref.esm.js","webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/@backstage/plugin-home/dist/components/VisitListener.esm.js"],"sourcesContent":["import { jsx, Fragment } from 'react/jsx-runtime';\nimport { useOutlet } from 'react-router-dom';\n\nconst HomepageCompositionRoot = (props) => {\n  const outlet = useOutlet();\n  const children = props.children ?? outlet;\n  return /* @__PURE__ */ jsx(Fragment, { children });\n};\n\nexport { HomepageCompositionRoot };\n//# sourceMappingURL=HomepageCompositionRoot.esm.js.map\n","const DEFAULT_NAMESPACE = \"default\";\nconst ANNOTATION_VIEW_URL = \"backstage.io/view-url\";\nconst ANNOTATION_EDIT_URL = \"backstage.io/edit-url\";\nconst ANNOTATION_KUBERNETES_API_SERVER = \"kubernetes.io/api-server\";\nconst ANNOTATION_KUBERNETES_API_SERVER_CA = \"kubernetes.io/api-server-certificate-authority\";\nconst ANNOTATION_KUBERNETES_AUTH_PROVIDER = \"kubernetes.io/auth-provider\";\n\nexport { ANNOTATION_EDIT_URL, ANNOTATION_KUBERNETES_API_SERVER, ANNOTATION_KUBERNETES_API_SERVER_CA, ANNOTATION_KUBERNETES_AUTH_PROVIDER, ANNOTATION_VIEW_URL, DEFAULT_NAMESPACE };\n//# sourceMappingURL=constants.esm.js.map\n","import { DEFAULT_NAMESPACE } from './constants.esm.js';\n\nfunction parseRefString(ref) {\n  let colonI = ref.indexOf(\":\");\n  const slashI = ref.indexOf(\"/\");\n  if (slashI !== -1 && slashI < colonI) {\n    colonI = -1;\n  }\n  const kind = colonI === -1 ? void 0 : ref.slice(0, colonI);\n  const namespace = slashI === -1 ? void 0 : ref.slice(colonI + 1, slashI);\n  const name = ref.slice(Math.max(colonI + 1, slashI + 1));\n  if (kind === \"\" || namespace === \"\" || name === \"\") {\n    throw new TypeError(\n      `Entity reference \"${ref}\" was not on the form [<kind>:][<namespace>/]<name>`\n    );\n  }\n  return { kind, namespace, name };\n}\nfunction getCompoundEntityRef(entity) {\n  return {\n    kind: entity.kind,\n    namespace: entity.metadata.namespace || DEFAULT_NAMESPACE,\n    name: entity.metadata.name\n  };\n}\nfunction parseEntityRef(ref, context) {\n  if (!ref) {\n    throw new Error(`Entity reference must not be empty`);\n  }\n  const defaultKind = context?.defaultKind;\n  const defaultNamespace = context?.defaultNamespace || DEFAULT_NAMESPACE;\n  let kind;\n  let namespace;\n  let name;\n  if (typeof ref === \"string\") {\n    const parsed = parseRefString(ref);\n    kind = parsed.kind ?? defaultKind;\n    namespace = parsed.namespace ?? defaultNamespace;\n    name = parsed.name;\n  } else {\n    kind = ref.kind ?? defaultKind;\n    namespace = ref.namespace ?? defaultNamespace;\n    name = ref.name;\n  }\n  if (!kind) {\n    const textual = JSON.stringify(ref);\n    throw new Error(\n      `Entity reference ${textual} had missing or empty kind (e.g. did not start with \"component:\" or similar)`\n    );\n  } else if (!namespace) {\n    const textual = JSON.stringify(ref);\n    throw new Error(\n      `Entity reference ${textual} had missing or empty namespace`\n    );\n  } else if (!name) {\n    const textual = JSON.stringify(ref);\n    throw new Error(`Entity reference ${textual} had missing or empty name`);\n  }\n  return { kind, namespace, name };\n}\nfunction stringifyEntityRef(ref) {\n  let kind;\n  let namespace;\n  let name;\n  if (\"metadata\" in ref) {\n    kind = ref.kind;\n    namespace = ref.metadata.namespace ?? DEFAULT_NAMESPACE;\n    name = ref.metadata.name;\n  } else {\n    kind = ref.kind;\n    namespace = ref.namespace ?? DEFAULT_NAMESPACE;\n    name = ref.name;\n  }\n  return `${kind.toLocaleLowerCase(\"en-US\")}:${namespace.toLocaleLowerCase(\n    \"en-US\"\n  )}/${name.toLocaleLowerCase(\"en-US\")}`;\n}\n\nexport { getCompoundEntityRef, parseEntityRef, stringifyEntityRef };\n//# sourceMappingURL=ref.esm.js.map\n","import { jsx, Fragment } from 'react/jsx-runtime';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport '@backstage/core-app-api';\nimport { visitsApiRef } from '../api/VisitsApi.esm.js';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { stringifyEntityRef } from '@backstage/catalog-model';\n\nconst getToEntityRef = ({\n  rootPath = \"catalog\",\n  stringifyEntityRefImpl = stringifyEntityRef\n} = {}) => ({ pathname }) => {\n  const regex = new RegExp(\n    `^/${rootPath}/(?<namespace>[^/]+)/(?<kind>[^/]+)/(?<name>[^/]+)`\n  );\n  const result = regex.exec(pathname);\n  if (!result || !result?.groups) return void 0;\n  const entity = {\n    namespace: result.groups.namespace,\n    kind: result.groups.kind,\n    name: result.groups.name\n  };\n  return stringifyEntityRefImpl(entity);\n};\nconst getVisitName = ({ rootPath = \"catalog\", document = global.document } = {}) => ({ pathname }) => {\n  const regex = new RegExp(\n    `^/${rootPath}/(?<namespace>[^/]+)/(?<kind>[^/]+)/(?<name>[^/]+)`\n  );\n  let result = regex.exec(pathname);\n  if (result && result?.groups) return result.groups.name;\n  result = /^\\/(?<name>[^\\/]+)$/.exec(pathname);\n  if (result && result?.groups) return result.groups.name;\n  return document.title;\n};\nconst VisitListener = ({\n  children,\n  toEntityRef,\n  visitName\n}) => {\n  const visitsApi = useApi(visitsApiRef);\n  const { pathname } = useLocation();\n  const toEntityRefImpl = toEntityRef ?? getToEntityRef();\n  const visitNameImpl = visitName ?? getVisitName();\n  useEffect(() => {\n    const requestId = requestAnimationFrame(() => {\n      visitsApi.save({\n        visit: {\n          name: visitNameImpl({ pathname }),\n          pathname,\n          entityRef: toEntityRefImpl({ pathname })\n        }\n      });\n    });\n    return () => cancelAnimationFrame(requestId);\n  }, [visitsApi, pathname, toEntityRefImpl, visitNameImpl]);\n  return /* @__PURE__ */ jsx(Fragment, { children });\n};\n\nexport { VisitListener };\n//# sourceMappingURL=VisitListener.esm.js.map\n"],"names":["HomepageCompositionRoot","props","outlet","useOutlet","children","jsx","Fragment","DEFAULT_NAMESPACE","parseEntityRef","ref","context","Error","defaultKind","defaultNamespace","kind","namespace","name","parsed","colonI","indexOf","slashI","slice","Math","max","TypeError","parseRefString","textual","JSON","stringify","stringifyEntityRef","metadata","toLocaleLowerCase","VisitListener","toEntityRef","visitName","visitsApi","useApi","pathname","useLocation","toEntityRefImpl","rootPath","stringifyEntityRefImpl","result","RegExp","exec","groups","entity","getToEntityRef","visitNameImpl","document","g","title","getVisitName","useEffect","requestId","requestAnimationFrame","save","visit","entityRef","cancelAnimationFrame"],"sourceRoot":""}