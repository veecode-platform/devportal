{"version":3,"file":"static/734.e2aae452.chunk.js","mappings":"iTAMA,MAAMA,GAAY,IAAAC,aACfC,IAAU,CACTC,KAAM,CACJC,UAAW,QAEbC,MAAO,CACLC,MAAOJ,EAAMK,KAAKC,UAClBC,WAAYP,EAAMQ,WAAWC,eAC7BC,cAAe,EACfC,SAAUX,EAAMQ,WAAWG,SAC3BC,aAAcZ,EAAMa,QAAQ,GAAK,EACjCC,WAAY,GAEdC,MAAO,CACLX,OAAO,IAAAY,OAAMhB,EAAMK,KAAKC,UAAW,IACnCK,SAAUX,EAAMQ,WAAWG,SAC3BG,WAAY,MAGhB,CAAEG,KAAM,yBAEJC,EAAqB,EACzBH,QACAI,YACAC,8BAEuB,IAAAC,KACrBC,EAAA,EACA,CACEC,UAAWH,IAA6C,iBAAVL,EAAqB,IAAM,QACzEI,YACAK,SAAUT,IAIhB,SAASU,EAAYC,GACnB,MAAM,MAAEvB,EAAK,MAAEY,EAAK,IAAEY,EAAG,8BAAEC,GAAkCF,EACvDG,EAAU/B,IACVgC,GAA0B,IAAAT,KAC9BH,EACA,CACEC,UAAWU,EAAQd,MACnBA,MAAOA,GAAS,YAChBK,wBAAyBQ,IAG7B,OAAuB,IAAAP,KAAIU,EAAA,EAAM,CAAEC,MAAM,EAAMR,UAA0B,IAAAS,MAAKX,EAAA,EAAY,CAAEC,UAAW,OAAQJ,UAAWU,EAAQ5B,KAAMuB,SAAU,EAChI,IAAAH,KAAIC,EAAA,EAAY,CAAEH,UAAWU,EAAQ1B,MAAOqB,SAAUrB,IACtEwB,GAAsB,IAAAN,KAAI,KAAM,CAAEa,GAAIP,EAAKH,SAAUM,IAAaA,MAEtE,CCpDA,MAAMK,EAAa,CACjBC,KAAM,UACNC,OAAQ,WAEV,SAASC,EAASC,EAAcC,GAC9B,MAAMC,EAAoB,IAAIC,KACxBC,EAAOC,OAAOC,UAAUC,SACxBC,EAAS,GACf,IAAKR,EACH,OAAOQ,EAET,IAAK,MAAMC,KAAeT,EAAc,CACtC,IAAIpC,EAAQ6C,EAAY7C,MACxB,MAAM8C,EAAU,CACdC,SAAUF,EAAYE,YACnBV,GAAoBL,GAEzB,KACE,IAAqBO,MAAQS,eAAeR,EAAMM,EACpD,CAAE,MAAOG,GACPC,QAAQC,KACN,gBAAgBL,EAAQC,0CAE1BD,EAAQC,SAAW,MACnB/C,EAAQ,KACV,CACA,MAAMY,EAAQ0B,EAAEc,mBAAmBZ,EAAMM,GACnCO,EAAWf,EAAEc,mBAAmBZ,EAAM,CAC1CO,SAAUD,EAAQC,SAClBd,KAAM,UACNC,OAAQ,UACRoB,QAAQ,IAEVV,EAAOW,KAAK,CAAEvD,QAAOY,QAAOyC,YAC9B,CACA,OAAOT,CACT,CACA,MAAMY,EAAoBjC,IACxB,MAAM,aAAEa,EAAY,iBAAEC,GAAqBd,GAEpCqB,EAAQa,IAAY,IAAAC,UADN,IAWrB,OATA,IAAAC,YAAU,KACRF,EAAStB,EAASC,EAAcC,IAChC,MAAMuB,EAAaC,aAAY,KAC7BJ,EAAStB,EAASC,EAAcC,MAC/B,KACH,MAAO,KACLyB,cAAcF,MAEf,CAACxB,EAAcC,IACI,IAAlBO,EAAOmB,QACc,IAAA7C,KAAI,EAAA8C,SAAU,CAAE3C,SAAUuB,EAAOqB,KAAKC,IAA0B,IAAAhD,KACrFI,EACA,CACEtB,MAAOkE,EAAMlE,MACbY,OAAuB,IAAAM,KAAI,OAAQ,CAAEmC,SAAUa,EAAMb,SAAUhC,SAAU6C,EAAMtD,SAEjFsD,EAAMlE,WAGH,K","sources":["webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/@backstage/core-components/dist/layout/HeaderLabel/HeaderLabel.esm.js","webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/@backstage/plugin-home/dist/homePageComponents/HeaderWorldClock/HeaderWorldClock.esm.js"],"sourcesContent":["import { jsx, jsxs } from 'react/jsx-runtime';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, alpha } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from '../../components/Link/Link.esm.js';\n\nconst useStyles = makeStyles(\n  (theme) => ({\n    root: {\n      textAlign: \"left\"\n    },\n    label: {\n      color: theme.page.fontColor,\n      fontWeight: theme.typography.fontWeightBold,\n      letterSpacing: 0,\n      fontSize: theme.typography.fontSize,\n      marginBottom: theme.spacing(1) / 2,\n      lineHeight: 1\n    },\n    value: {\n      color: alpha(theme.page.fontColor, 0.8),\n      fontSize: theme.typography.fontSize,\n      lineHeight: 1\n    }\n  }),\n  { name: \"BackstageHeaderLabel\" }\n);\nconst HeaderLabelContent = ({\n  value,\n  className,\n  typographyRootComponent\n}) => {\n  return /* @__PURE__ */ jsx(\n    Typography,\n    {\n      component: typographyRootComponent ?? (typeof value === \"string\" ? \"p\" : \"span\"),\n      className,\n      children: value\n    }\n  );\n};\nfunction HeaderLabel(props) {\n  const { label, value, url, contentTypograpyRootComponent } = props;\n  const classes = useStyles();\n  const content = /* @__PURE__ */ jsx(\n    HeaderLabelContent,\n    {\n      className: classes.value,\n      value: value || \"<Unknown>\",\n      typographyRootComponent: contentTypograpyRootComponent\n    }\n  );\n  return /* @__PURE__ */ jsx(Grid, { item: true, children: /* @__PURE__ */ jsxs(Typography, { component: \"span\", className: classes.root, children: [\n    /* @__PURE__ */ jsx(Typography, { className: classes.label, children: label }),\n    url ? /* @__PURE__ */ jsx(Link, { to: url, children: content }) : content\n  ] }) });\n}\n\nexport { HeaderLabel };\n//# sourceMappingURL=HeaderLabel.esm.js.map\n","import { jsx, Fragment } from 'react/jsx-runtime';\nimport { useState, useEffect } from 'react';\nimport { HeaderLabel } from '@backstage/core-components';\n\nconst timeFormat = {\n  hour: \"2-digit\",\n  minute: \"2-digit\"\n};\nfunction getTimes(clockConfigs, customTimeFormat) {\n  const d = /* @__PURE__ */ new Date();\n  const lang = window.navigator.language;\n  const clocks = [];\n  if (!clockConfigs) {\n    return clocks;\n  }\n  for (const clockConfig of clockConfigs) {\n    let label = clockConfig.label;\n    const options = {\n      timeZone: clockConfig.timeZone,\n      ...customTimeFormat ?? timeFormat\n    };\n    try {\n      (/* @__PURE__ */ new Date()).toLocaleString(lang, options);\n    } catch (e) {\n      console.warn(\n        `The timezone ${options.timeZone} is invalid. Defaulting to GMT`\n      );\n      options.timeZone = \"GMT\";\n      label = \"GMT\";\n    }\n    const value = d.toLocaleTimeString(lang, options);\n    const dateTime = d.toLocaleTimeString(lang, {\n      timeZone: options.timeZone,\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false\n    });\n    clocks.push({ label, value, dateTime });\n  }\n  return clocks;\n}\nconst HeaderWorldClock = (props) => {\n  const { clockConfigs, customTimeFormat } = props;\n  const defaultTimes = [];\n  const [clocks, setTimes] = useState(defaultTimes);\n  useEffect(() => {\n    setTimes(getTimes(clockConfigs, customTimeFormat));\n    const intervalId = setInterval(() => {\n      setTimes(getTimes(clockConfigs, customTimeFormat));\n    }, 1e3);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [clockConfigs, customTimeFormat]);\n  if (clocks.length !== 0) {\n    return /* @__PURE__ */ jsx(Fragment, { children: clocks.map((clock) => /* @__PURE__ */ jsx(\n      HeaderLabel,\n      {\n        label: clock.label,\n        value: /* @__PURE__ */ jsx(\"time\", { dateTime: clock.dateTime, children: clock.value })\n      },\n      clock.label\n    )) });\n  }\n  return null;\n};\n\nexport { HeaderWorldClock };\n//# sourceMappingURL=HeaderWorldClock.esm.js.map\n"],"names":["useStyles","makeStyles","theme","root","textAlign","label","color","page","fontColor","fontWeight","typography","fontWeightBold","letterSpacing","fontSize","marginBottom","spacing","lineHeight","value","alpha","name","HeaderLabelContent","className","typographyRootComponent","jsx","Typography","component","children","HeaderLabel","props","url","contentTypograpyRootComponent","classes","content","Grid","item","jsxs","to","timeFormat","hour","minute","getTimes","clockConfigs","customTimeFormat","d","Date","lang","window","navigator","language","clocks","clockConfig","options","timeZone","toLocaleString","e","console","warn","toLocaleTimeString","dateTime","hour12","push","HeaderWorldClock","setTimes","useState","useEffect","intervalId","setInterval","clearInterval","length","Fragment","map","clock"],"sourceRoot":""}