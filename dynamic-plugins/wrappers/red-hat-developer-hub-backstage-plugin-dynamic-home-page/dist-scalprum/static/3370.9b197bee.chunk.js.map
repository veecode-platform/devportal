{"version":3,"file":"static/3370.9b197bee.chunk.js","mappings":"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","sources":["webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/@red-hat-developer-hub/backstage-plugin-dynamic-home-page/node_modules/react-grid-layout/build/fastRGLPropsEqual.js","webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/@red-hat-developer-hub/backstage-plugin-dynamic-home-page/node_modules/react-grid-layout/build/calculateUtils.js","webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/@red-hat-developer-hub/backstage-plugin-dynamic-home-page/node_modules/react-grid-layout/build/utils.js","webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/@red-hat-developer-hub/backstage-plugin-dynamic-home-page/node_modules/react-grid-layout/build/ResponsiveReactGridLayout.js","webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/react-use/lib/useIsomorphicLayoutEffect.js","webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/fast-equals/dist/fast-equals.js","webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/@red-hat-developer-hub/backstage-plugin-dynamic-home-page/node_modules/react-grid-layout/build/ReactGridLayoutPropTypes.js","webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/@red-hat-developer-hub/backstage-plugin-dynamic-home-page/node_modules/react-grid-layout/build/ReactGridLayout.js","webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/@red-hat-developer-hub/backstage-plugin-dynamic-home-page/node_modules/react-grid-layout/build/GridItem.js","webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/@red-hat-developer-hub/backstage-plugin-dynamic-home-page/node_modules/react-grid-layout/index.js","webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/@red-hat-developer-hub/backstage-plugin-dynamic-home-page/dist/components/ReadOnlyGrid.esm.js","webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/@red-hat-developer-hub/backstage-plugin-dynamic-home-page/dist/components/HomePage.esm.js","webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/@red-hat-developer-hub/backstage-plugin-dynamic-home-page/dist/components/DynamicHomePage.esm.js","webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/@red-hat-developer-hub/backstage-plugin-dynamic-home-page/node_modules/react-grid-layout/build/components/WidthProvider.js","webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/react-use/lib/useMeasure.js","webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/@red-hat-developer-hub/backstage-plugin-dynamic-home-page/node_modules/react-grid-layout/build/responsiveUtils.js","webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/clsx/dist/clsx.js","webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","webpack://red-hat-developer-hub.backstage-plugin-dynamic-home-page/../../node_modules/react-use/lib/misc/util.js"],"sourcesContent":["// this file was prevaled\nmodule.exports = function fastRGLPropsEqual(a, b, isEqualImpl) {\n  if (a === b) return true;\n  return a.className === b.className && isEqualImpl(a.style, b.style) && a.width === b.width && a.autoSize === b.autoSize && a.cols === b.cols && a.draggableCancel === b.draggableCancel && a.draggableHandle === b.draggableHandle && isEqualImpl(a.verticalCompact, b.verticalCompact) && isEqualImpl(a.compactType, b.compactType) && isEqualImpl(a.layout, b.layout) && isEqualImpl(a.margin, b.margin) && isEqualImpl(a.containerPadding, b.containerPadding) && a.rowHeight === b.rowHeight && a.maxRows === b.maxRows && a.isBounded === b.isBounded && a.isDraggable === b.isDraggable && a.isResizable === b.isResizable && a.allowOverlap === b.allowOverlap && a.preventCollision === b.preventCollision && a.useCSSTransforms === b.useCSSTransforms && a.transformScale === b.transformScale && a.isDroppable === b.isDroppable && isEqualImpl(a.resizeHandles, b.resizeHandles) && isEqualImpl(a.resizeHandle, b.resizeHandle) && a.onLayoutChange === b.onLayoutChange && a.onDragStart === b.onDragStart && a.onDrag === b.onDrag && a.onDragStop === b.onDragStop && a.onResizeStart === b.onResizeStart && a.onResize === b.onResize && a.onResizeStop === b.onResizeStop && a.onDrop === b.onDrop && isEqualImpl(a.droppingItem, b.droppingItem) && isEqualImpl(a.innerRef, b.innerRef);\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calcGridColWidth = calcGridColWidth;\nexports.calcGridItemPosition = calcGridItemPosition;\nexports.calcGridItemWHPx = calcGridItemWHPx;\nexports.calcWH = calcWH;\nexports.calcXY = calcXY;\nexports.clamp = clamp;\n/*:: import type { Position } from \"./utils\";*/\n/*:: export type PositionParams = {\n  margin: [number, number],\n  containerPadding: [number, number],\n  containerWidth: number,\n  cols: number,\n  rowHeight: number,\n  maxRows: number\n};*/\n// Helper for generating column width\nfunction calcGridColWidth(positionParams /*: PositionParams*/) /*: number*/{\n  const {\n    margin,\n    containerPadding,\n    containerWidth,\n    cols\n  } = positionParams;\n  return (containerWidth - margin[0] * (cols - 1) - containerPadding[0] * 2) / cols;\n}\n\n// This can either be called:\n// calcGridItemWHPx(w, colWidth, margin[0])\n// or\n// calcGridItemWHPx(h, rowHeight, margin[1])\nfunction calcGridItemWHPx(gridUnits /*: number*/, colOrRowSize /*: number*/, marginPx /*: number*/) /*: number*/{\n  // 0 * Infinity === NaN, which causes problems with resize contraints\n  if (!Number.isFinite(gridUnits)) return gridUnits;\n  return Math.round(colOrRowSize * gridUnits + Math.max(0, gridUnits - 1) * marginPx);\n}\n\n/**\n * Return position on the page given an x, y, w, h.\n * left, top, width, height are all in pixels.\n * @param  {PositionParams} positionParams  Parameters of grid needed for coordinates calculations.\n * @param  {Number}  x                      X coordinate in grid units.\n * @param  {Number}  y                      Y coordinate in grid units.\n * @param  {Number}  w                      W coordinate in grid units.\n * @param  {Number}  h                      H coordinate in grid units.\n * @return {Position}                       Object containing coords.\n */\nfunction calcGridItemPosition(positionParams /*: PositionParams*/, x /*: number*/, y /*: number*/, w /*: number*/, h /*: number*/, state /*: ?Object*/) /*: Position*/{\n  const {\n    margin,\n    containerPadding,\n    rowHeight\n  } = positionParams;\n  const colWidth = calcGridColWidth(positionParams);\n  const out = {};\n\n  // If resizing, use the exact width and height as returned from resizing callbacks.\n  if (state && state.resizing) {\n    out.width = Math.round(state.resizing.width);\n    out.height = Math.round(state.resizing.height);\n  }\n  // Otherwise, calculate from grid units.\n  else {\n    out.width = calcGridItemWHPx(w, colWidth, margin[0]);\n    out.height = calcGridItemWHPx(h, rowHeight, margin[1]);\n  }\n\n  // If dragging, use the exact width and height as returned from dragging callbacks.\n  if (state && state.dragging) {\n    out.top = Math.round(state.dragging.top);\n    out.left = Math.round(state.dragging.left);\n  } else if (state && state.resizing && typeof state.resizing.top === \"number\" && typeof state.resizing.left === \"number\") {\n    out.top = Math.round(state.resizing.top);\n    out.left = Math.round(state.resizing.left);\n  }\n  // Otherwise, calculate from grid units.\n  else {\n    out.top = Math.round((rowHeight + margin[1]) * y + containerPadding[1]);\n    out.left = Math.round((colWidth + margin[0]) * x + containerPadding[0]);\n  }\n  return out;\n}\n\n/**\n * Translate x and y coordinates from pixels to grid units.\n * @param  {PositionParams} positionParams  Parameters of grid needed for coordinates calculations.\n * @param  {Number} top                     Top position (relative to parent) in pixels.\n * @param  {Number} left                    Left position (relative to parent) in pixels.\n * @param  {Number} w                       W coordinate in grid units.\n * @param  {Number} h                       H coordinate in grid units.\n * @return {Object}                         x and y in grid units.\n */\nfunction calcXY(positionParams /*: PositionParams*/, top /*: number*/, left /*: number*/, w /*: number*/, h /*: number*/) /*: { x: number, y: number }*/{\n  const {\n    margin,\n    containerPadding,\n    cols,\n    rowHeight,\n    maxRows\n  } = positionParams;\n  const colWidth = calcGridColWidth(positionParams);\n\n  // left = containerPaddingX + x * (colWidth + marginX)\n  // x * (colWidth + marginX) = left - containerPaddingX\n  // x = (left - containerPaddingX) / (colWidth + marginX)\n  let x = Math.round((left - containerPadding[0]) / (colWidth + margin[0]));\n  let y = Math.round((top - containerPadding[1]) / (rowHeight + margin[1]));\n\n  // Capping\n  x = clamp(x, 0, cols - w);\n  y = clamp(y, 0, maxRows - h);\n  return {\n    x,\n    y\n  };\n}\n\n/**\n * Given a height and width in pixel values, calculate grid units.\n * @param  {PositionParams} positionParams  Parameters of grid needed for coordinates calcluations.\n * @param  {Number} height                  Height in pixels.\n * @param  {Number} width                   Width in pixels.\n * @param  {Number} x                       X coordinate in grid units.\n * @param  {Number} y                       Y coordinate in grid units.\n * @param {String} handle Resize Handle.\n * @return {Object}                         w, h as grid units.\n */\nfunction calcWH(positionParams /*: PositionParams*/, width /*: number*/, height /*: number*/, x /*: number*/, y /*: number*/, handle /*: string*/) /*: { w: number, h: number }*/{\n  const {\n    margin,\n    maxRows,\n    cols,\n    rowHeight\n  } = positionParams;\n  const colWidth = calcGridColWidth(positionParams);\n\n  // width = colWidth * w - (margin * (w - 1))\n  // ...\n  // w = (width + margin) / (colWidth + margin)\n  let w = Math.round((width + margin[0]) / (colWidth + margin[0]));\n  let h = Math.round((height + margin[1]) / (rowHeight + margin[1]));\n\n  // Capping\n  let _w = clamp(w, 0, cols - x);\n  let _h = clamp(h, 0, maxRows - y);\n  if ([\"sw\", \"w\", \"nw\"].indexOf(handle) !== -1) {\n    _w = clamp(w, 0, cols);\n  }\n  if ([\"nw\", \"n\", \"ne\"].indexOf(handle) !== -1) {\n    _h = clamp(h, 0, maxRows);\n  }\n  return {\n    w: _w,\n    h: _h\n  };\n}\n\n// Similar to _.clamp\nfunction clamp(num /*: number*/, lowerBound /*: number*/, upperBound /*: number*/) /*: number*/{\n  return Math.max(Math.min(num, upperBound), lowerBound);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bottom = bottom;\nexports.childrenEqual = childrenEqual;\nexports.cloneLayout = cloneLayout;\nexports.cloneLayoutItem = cloneLayoutItem;\nexports.collides = collides;\nexports.compact = compact;\nexports.compactItem = compactItem;\nexports.compactType = compactType;\nexports.correctBounds = correctBounds;\nexports.fastPositionEqual = fastPositionEqual;\nexports.fastRGLPropsEqual = void 0;\nexports.getAllCollisions = getAllCollisions;\nexports.getFirstCollision = getFirstCollision;\nexports.getLayoutItem = getLayoutItem;\nexports.getStatics = getStatics;\nexports.modifyLayout = modifyLayout;\nexports.moveElement = moveElement;\nexports.moveElementAwayFromCollision = moveElementAwayFromCollision;\nexports.noop = void 0;\nexports.perc = perc;\nexports.resizeItemInDirection = resizeItemInDirection;\nexports.setTopLeft = setTopLeft;\nexports.setTransform = setTransform;\nexports.sortLayoutItems = sortLayoutItems;\nexports.sortLayoutItemsByColRow = sortLayoutItemsByColRow;\nexports.sortLayoutItemsByRowCol = sortLayoutItemsByRowCol;\nexports.synchronizeLayoutWithChildren = synchronizeLayoutWithChildren;\nexports.validateLayout = validateLayout;\nexports.withLayoutItem = withLayoutItem;\nvar _fastEquals = require(\"fast-equals\");\nvar _react = _interopRequireDefault(require(\"react\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/*:: import type {\n  ChildrenArray as ReactChildrenArray,\n  Element as ReactElement\n} from \"react\";*/\n/*:: export type ResizeHandleAxis =\n  | \"s\"\n  | \"w\"\n  | \"e\"\n  | \"n\"\n  | \"sw\"\n  | \"nw\"\n  | \"se\"\n  | \"ne\";*/\n/*:: export type LayoutItem = {\n  w: number,\n  h: number,\n  x: number,\n  y: number,\n  i: string,\n  minW?: number,\n  minH?: number,\n  maxW?: number,\n  maxH?: number,\n  moved?: boolean,\n  static?: boolean,\n  isDraggable?: ?boolean,\n  isResizable?: ?boolean,\n  resizeHandles?: Array<ResizeHandleAxis>,\n  isBounded?: ?boolean\n};*/\n/*:: export type Layout = $ReadOnlyArray<LayoutItem>;*/\n/*:: export type Position = {\n  left: number,\n  top: number,\n  width: number,\n  height: number\n};*/\n/*:: export type ReactDraggableCallbackData = {\n  node: HTMLElement,\n  x?: number,\n  y?: number,\n  deltaX: number,\n  deltaY: number,\n  lastX?: number,\n  lastY?: number\n};*/\n/*:: export type PartialPosition = { left: number, top: number };*/\n/*:: export type DroppingPosition = { left: number, top: number, e: Event };*/\n/*:: export type Size = { width: number, height: number };*/\n/*:: export type GridDragEvent = {\n  e: Event,\n  node: HTMLElement,\n  newPosition: PartialPosition\n};*/\n/*:: export type GridResizeEvent = {\n  e: Event,\n  node: HTMLElement,\n  size: Size,\n  handle: string\n};*/\n/*:: export type DragOverEvent = MouseEvent & {\n  nativeEvent: {\n    layerX: number,\n    layerY: number,\n    ...Event\n  }\n};*/\n/*:: export type Pick<FromType, Properties: { [string]: 0 }> = $Exact<\n  $ObjMapi<Properties, <K, V>(k: K, v: V) => $ElementType<FromType, K>>\n>;*/\n// Helpful port from TS\n/*:: type REl = ReactElement<any>;*/\n/*:: export type ReactChildren = ReactChildrenArray<REl>;*/\n/*:: export type EventCallback = (\n  Layout,\n  oldItem: ?LayoutItem,\n  newItem: ?LayoutItem,\n  placeholder: ?LayoutItem,\n  Event,\n  ?HTMLElement\n) => void;*/\n// All callbacks are of the signature (layout, oldItem, newItem, placeholder, e).\n/*:: export type CompactType = ?(\"horizontal\" | \"vertical\");*/\nconst isProduction = process.env.NODE_ENV === \"production\";\nconst DEBUG = false;\n\n/**\n * Return the bottom coordinate of the layout.\n *\n * @param  {Array} layout Layout array.\n * @return {Number}       Bottom coordinate.\n */\nfunction bottom(layout /*: Layout*/) /*: number*/{\n  let max = 0,\n    bottomY;\n  for (let i = 0, len = layout.length; i < len; i++) {\n    bottomY = layout[i].y + layout[i].h;\n    if (bottomY > max) max = bottomY;\n  }\n  return max;\n}\nfunction cloneLayout(layout /*: Layout*/) /*: Layout*/{\n  const newLayout = Array(layout.length);\n  for (let i = 0, len = layout.length; i < len; i++) {\n    newLayout[i] = cloneLayoutItem(layout[i]);\n  }\n  return newLayout;\n}\n\n// Modify a layoutItem inside a layout. Returns a new Layout,\n// does not mutate. Carries over all other LayoutItems unmodified.\nfunction modifyLayout(layout /*: Layout*/, layoutItem /*: LayoutItem*/) /*: Layout*/{\n  const newLayout = Array(layout.length);\n  for (let i = 0, len = layout.length; i < len; i++) {\n    if (layoutItem.i === layout[i].i) {\n      newLayout[i] = layoutItem;\n    } else {\n      newLayout[i] = layout[i];\n    }\n  }\n  return newLayout;\n}\n\n// Function to be called to modify a layout item.\n// Does defensive clones to ensure the layout is not modified.\nfunction withLayoutItem(layout /*: Layout*/, itemKey /*: string*/, cb /*: LayoutItem => LayoutItem*/) /*: [Layout, ?LayoutItem]*/{\n  let item = getLayoutItem(layout, itemKey);\n  if (!item) return [layout, null];\n  item = cb(cloneLayoutItem(item)); // defensive clone then modify\n  // FIXME could do this faster if we already knew the index\n  layout = modifyLayout(layout, item);\n  return [layout, item];\n}\n\n// Fast path to cloning, since this is monomorphic\nfunction cloneLayoutItem(layoutItem /*: LayoutItem*/) /*: LayoutItem*/{\n  return {\n    w: layoutItem.w,\n    h: layoutItem.h,\n    x: layoutItem.x,\n    y: layoutItem.y,\n    i: layoutItem.i,\n    minW: layoutItem.minW,\n    maxW: layoutItem.maxW,\n    minH: layoutItem.minH,\n    maxH: layoutItem.maxH,\n    moved: Boolean(layoutItem.moved),\n    static: Boolean(layoutItem.static),\n    // These can be null/undefined\n    isDraggable: layoutItem.isDraggable,\n    isResizable: layoutItem.isResizable,\n    resizeHandles: layoutItem.resizeHandles,\n    isBounded: layoutItem.isBounded\n  };\n}\n\n/**\n * Comparing React `children` is a bit difficult. This is a good way to compare them.\n * This will catch differences in keys, order, and length.\n */\nfunction childrenEqual(a /*: ReactChildren*/, b /*: ReactChildren*/) /*: boolean*/{\n  return (0, _fastEquals.deepEqual)(_react.default.Children.map(a, c => c?.key), _react.default.Children.map(b, c => c?.key)) && (0, _fastEquals.deepEqual)(_react.default.Children.map(a, c => c?.props[\"data-grid\"]), _react.default.Children.map(b, c => c?.props[\"data-grid\"]));\n}\n\n/**\n * See `fastRGLPropsEqual.js`.\n * We want this to run as fast as possible - it is called often - and to be\n * resilient to new props that we add. So rather than call lodash.isEqual,\n * which isn't suited to comparing props very well, we use this specialized\n * function in conjunction with preval to generate the fastest possible comparison\n * function, tuned for exactly our props.\n */\n/*:: type FastRGLPropsEqual = (Object, Object, Function) => boolean;*/\nconst fastRGLPropsEqual /*: FastRGLPropsEqual*/ = exports.fastRGLPropsEqual = require(\"./fastRGLPropsEqual\");\n\n// Like the above, but a lot simpler.\nfunction fastPositionEqual(a /*: Position*/, b /*: Position*/) /*: boolean*/{\n  return a.left === b.left && a.top === b.top && a.width === b.width && a.height === b.height;\n}\n\n/**\n * Given two layoutitems, check if they collide.\n */\nfunction collides(l1 /*: LayoutItem*/, l2 /*: LayoutItem*/) /*: boolean*/{\n  if (l1.i === l2.i) return false; // same element\n  if (l1.x + l1.w <= l2.x) return false; // l1 is left of l2\n  if (l1.x >= l2.x + l2.w) return false; // l1 is right of l2\n  if (l1.y + l1.h <= l2.y) return false; // l1 is above l2\n  if (l1.y >= l2.y + l2.h) return false; // l1 is below l2\n  return true; // boxes overlap\n}\n\n/**\n * Given a layout, compact it. This involves going down each y coordinate and removing gaps\n * between items.\n *\n * Does not modify layout items (clones). Creates a new layout array.\n *\n * @param  {Array} layout Layout.\n * @param  {Boolean} verticalCompact Whether or not to compact the layout\n *   vertically.\n * @param  {Boolean} allowOverlap When `true`, allows overlapping grid items.\n * @return {Array}       Compacted Layout.\n */\nfunction compact(layout /*: Layout*/, compactType /*: CompactType*/, cols /*: number*/, allowOverlap /*: ?boolean*/) /*: Layout*/{\n  // Statics go in the compareWith array right away so items flow around them.\n  const compareWith = getStatics(layout);\n  // We go through the items by row and column.\n  const sorted = sortLayoutItems(layout, compactType);\n  // Holding for new items.\n  const out = Array(layout.length);\n  for (let i = 0, len = sorted.length; i < len; i++) {\n    let l = cloneLayoutItem(sorted[i]);\n\n    // Don't move static elements\n    if (!l.static) {\n      l = compactItem(compareWith, l, compactType, cols, sorted, allowOverlap);\n\n      // Add to comparison array. We only collide with items before this one.\n      // Statics are already in this array.\n      compareWith.push(l);\n    }\n\n    // Add to output array to make sure they still come out in the right order.\n    out[layout.indexOf(sorted[i])] = l;\n\n    // Clear moved flag, if it exists.\n    l.moved = false;\n  }\n  return out;\n}\nconst heightWidth = {\n  x: \"w\",\n  y: \"h\"\n};\n/**\n * Before moving item down, it will check if the movement will cause collisions and move those items down before.\n */\nfunction resolveCompactionCollision(layout /*: Layout*/, item /*: LayoutItem*/, moveToCoord /*: number*/, axis /*: \"x\" | \"y\"*/) {\n  const sizeProp = heightWidth[axis];\n  item[axis] += 1;\n  const itemIndex = layout.map(layoutItem => {\n    return layoutItem.i;\n  }).indexOf(item.i);\n\n  // Go through each item we collide with.\n  for (let i = itemIndex + 1; i < layout.length; i++) {\n    const otherItem = layout[i];\n    // Ignore static items\n    if (otherItem.static) continue;\n\n    // Optimization: we can break early if we know we're past this el\n    // We can do this b/c it's a sorted layout\n    if (otherItem.y > item.y + item.h) break;\n    if (collides(item, otherItem)) {\n      resolveCompactionCollision(layout, otherItem, moveToCoord + item[sizeProp], axis);\n    }\n  }\n  item[axis] = moveToCoord;\n}\n\n/**\n * Compact an item in the layout.\n *\n * Modifies item.\n *\n */\nfunction compactItem(compareWith /*: Layout*/, l /*: LayoutItem*/, compactType /*: CompactType*/, cols /*: number*/, fullLayout /*: Layout*/, allowOverlap /*: ?boolean*/) /*: LayoutItem*/{\n  const compactV = compactType === \"vertical\";\n  const compactH = compactType === \"horizontal\";\n  if (compactV) {\n    // Bottom 'y' possible is the bottom of the layout.\n    // This allows you to do nice stuff like specify {y: Infinity}\n    // This is here because the layout must be sorted in order to get the correct bottom `y`.\n    l.y = Math.min(bottom(compareWith), l.y);\n    // Move the element up as far as it can go without colliding.\n    while (l.y > 0 && !getFirstCollision(compareWith, l)) {\n      l.y--;\n    }\n  } else if (compactH) {\n    // Move the element left as far as it can go without colliding.\n    while (l.x > 0 && !getFirstCollision(compareWith, l)) {\n      l.x--;\n    }\n  }\n\n  // Move it down, and keep moving it down if it's colliding.\n  let collides;\n  // Checking the compactType null value to avoid breaking the layout when overlapping is allowed.\n  while ((collides = getFirstCollision(compareWith, l)) && !(compactType === null && allowOverlap)) {\n    if (compactH) {\n      resolveCompactionCollision(fullLayout, l, collides.x + collides.w, \"x\");\n    } else {\n      resolveCompactionCollision(fullLayout, l, collides.y + collides.h, \"y\");\n    }\n    // Since we can't grow without bounds horizontally, if we've overflown, let's move it down and try again.\n    if (compactH && l.x + l.w > cols) {\n      l.x = cols - l.w;\n      l.y++;\n      // ALso move element as left as we can\n      while (l.x > 0 && !getFirstCollision(compareWith, l)) {\n        l.x--;\n      }\n    }\n  }\n\n  // Ensure that there are no negative positions\n  l.y = Math.max(l.y, 0);\n  l.x = Math.max(l.x, 0);\n  return l;\n}\n\n/**\n * Given a layout, make sure all elements fit within its bounds.\n *\n * Modifies layout items.\n *\n * @param  {Array} layout Layout array.\n * @param  {Number} bounds Number of columns.\n */\nfunction correctBounds(layout /*: Layout*/, bounds /*: { cols: number }*/) /*: Layout*/{\n  const collidesWith = getStatics(layout);\n  for (let i = 0, len = layout.length; i < len; i++) {\n    const l = layout[i];\n    // Overflows right\n    if (l.x + l.w > bounds.cols) l.x = bounds.cols - l.w;\n    // Overflows left\n    if (l.x < 0) {\n      l.x = 0;\n      l.w = bounds.cols;\n    }\n    if (!l.static) collidesWith.push(l);else {\n      // If this is static and collides with other statics, we must move it down.\n      // We have to do something nicer than just letting them overlap.\n      while (getFirstCollision(collidesWith, l)) {\n        l.y++;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * Get a layout item by ID. Used so we can override later on if necessary.\n *\n * @param  {Array}  layout Layout array.\n * @param  {String} id     ID\n * @return {LayoutItem}    Item at ID.\n */\nfunction getLayoutItem(layout /*: Layout*/, id /*: string*/) /*: ?LayoutItem*/{\n  for (let i = 0, len = layout.length; i < len; i++) {\n    if (layout[i].i === id) return layout[i];\n  }\n}\n\n/**\n * Returns the first item this layout collides with.\n * It doesn't appear to matter which order we approach this from, although\n * perhaps that is the wrong thing to do.\n *\n * @param  {Object} layoutItem Layout item.\n * @return {Object|undefined}  A colliding layout item, or undefined.\n */\nfunction getFirstCollision(layout /*: Layout*/, layoutItem /*: LayoutItem*/) /*: ?LayoutItem*/{\n  for (let i = 0, len = layout.length; i < len; i++) {\n    if (collides(layout[i], layoutItem)) return layout[i];\n  }\n}\nfunction getAllCollisions(layout /*: Layout*/, layoutItem /*: LayoutItem*/) /*: Array<LayoutItem>*/{\n  return layout.filter(l => collides(l, layoutItem));\n}\n\n/**\n * Get all static elements.\n * @param  {Array} layout Array of layout objects.\n * @return {Array}        Array of static layout items..\n */\nfunction getStatics(layout /*: Layout*/) /*: Array<LayoutItem>*/{\n  return layout.filter(l => l.static);\n}\n\n/**\n * Move an element. Responsible for doing cascading movements of other elements.\n *\n * Modifies layout items.\n *\n * @param  {Array}      layout            Full layout to modify.\n * @param  {LayoutItem} l                 element to move.\n * @param  {Number}     [x]               X position in grid units.\n * @param  {Number}     [y]               Y position in grid units.\n */\nfunction moveElement(layout /*: Layout*/, l /*: LayoutItem*/, x /*: ?number*/, y /*: ?number*/, isUserAction /*: ?boolean*/, preventCollision /*: ?boolean*/, compactType /*: CompactType*/, cols /*: number*/, allowOverlap /*: ?boolean*/) /*: Layout*/{\n  // If this is static and not explicitly enabled as draggable,\n  // no move is possible, so we can short-circuit this immediately.\n  if (l.static && l.isDraggable !== true) return layout;\n\n  // Short-circuit if nothing to do.\n  if (l.y === y && l.x === x) return layout;\n  log(`Moving element ${l.i} to [${String(x)},${String(y)}] from [${l.x},${l.y}]`);\n  const oldX = l.x;\n  const oldY = l.y;\n\n  // This is quite a bit faster than extending the object\n  if (typeof x === \"number\") l.x = x;\n  if (typeof y === \"number\") l.y = y;\n  l.moved = true;\n\n  // If this collides with anything, move it.\n  // When doing this comparison, we have to sort the items we compare with\n  // to ensure, in the case of multiple collisions, that we're getting the\n  // nearest collision.\n  let sorted = sortLayoutItems(layout, compactType);\n  const movingUp = compactType === \"vertical\" && typeof y === \"number\" ? oldY >= y : compactType === \"horizontal\" && typeof x === \"number\" ? oldX >= x : false;\n  // $FlowIgnore acceptable modification of read-only array as it was recently cloned\n  if (movingUp) sorted = sorted.reverse();\n  const collisions = getAllCollisions(sorted, l);\n  const hasCollisions = collisions.length > 0;\n\n  // We may have collisions. We can short-circuit if we've turned off collisions or\n  // allowed overlap.\n  if (hasCollisions && allowOverlap) {\n    // Easy, we don't need to resolve collisions. But we *did* change the layout,\n    // so clone it on the way out.\n    return cloneLayout(layout);\n  } else if (hasCollisions && preventCollision) {\n    // If we are preventing collision but not allowing overlap, we need to\n    // revert the position of this element so it goes to where it came from, rather\n    // than the user's desired location.\n    log(`Collision prevented on ${l.i}, reverting.`);\n    l.x = oldX;\n    l.y = oldY;\n    l.moved = false;\n    return layout; // did not change so don't clone\n  }\n\n  // Move each item that collides away from this element.\n  for (let i = 0, len = collisions.length; i < len; i++) {\n    const collision = collisions[i];\n    log(`Resolving collision between ${l.i} at [${l.x},${l.y}] and ${collision.i} at [${collision.x},${collision.y}]`);\n\n    // Short circuit so we can't infinite loop\n    if (collision.moved) continue;\n\n    // Don't move static items - we have to move *this* element away\n    if (collision.static) {\n      layout = moveElementAwayFromCollision(layout, collision, l, isUserAction, compactType, cols);\n    } else {\n      layout = moveElementAwayFromCollision(layout, l, collision, isUserAction, compactType, cols);\n    }\n  }\n  return layout;\n}\n\n/**\n * This is where the magic needs to happen - given a collision, move an element away from the collision.\n * We attempt to move it up if there's room, otherwise it goes below.\n *\n * @param  {Array} layout            Full layout to modify.\n * @param  {LayoutItem} collidesWith Layout item we're colliding with.\n * @param  {LayoutItem} itemToMove   Layout item we're moving.\n */\nfunction moveElementAwayFromCollision(layout /*: Layout*/, collidesWith /*: LayoutItem*/, itemToMove /*: LayoutItem*/, isUserAction /*: ?boolean*/, compactType /*: CompactType*/, cols /*: number*/) /*: Layout*/{\n  const compactH = compactType === \"horizontal\";\n  // Compact vertically if not set to horizontal\n  const compactV = compactType === \"vertical\";\n  const preventCollision = collidesWith.static; // we're already colliding (not for static items)\n\n  // If there is enough space above the collision to put this element, move it there.\n  // We only do this on the main collision as this can get funky in cascades and cause\n  // unwanted swapping behavior.\n  if (isUserAction) {\n    // Reset isUserAction flag because we're not in the main collision anymore.\n    isUserAction = false;\n\n    // Make a mock item so we don't modify the item here, only modify in moveElement.\n    const fakeItem /*: LayoutItem*/ = {\n      x: compactH ? Math.max(collidesWith.x - itemToMove.w, 0) : itemToMove.x,\n      y: compactV ? Math.max(collidesWith.y - itemToMove.h, 0) : itemToMove.y,\n      w: itemToMove.w,\n      h: itemToMove.h,\n      i: \"-1\"\n    };\n    const firstCollision = getFirstCollision(layout, fakeItem);\n    const collisionNorth = firstCollision && firstCollision.y + firstCollision.h > collidesWith.y;\n    const collisionWest = firstCollision && collidesWith.x + collidesWith.w > firstCollision.x;\n\n    // No collision? If so, we can go up there; otherwise, we'll end up moving down as normal\n    if (!firstCollision) {\n      log(`Doing reverse collision on ${itemToMove.i} up to [${fakeItem.x},${fakeItem.y}].`);\n      return moveElement(layout, itemToMove, compactH ? fakeItem.x : undefined, compactV ? fakeItem.y : undefined, isUserAction, preventCollision, compactType, cols);\n    } else if (collisionNorth && compactV) {\n      return moveElement(layout, itemToMove, undefined, collidesWith.y + 1, isUserAction, preventCollision, compactType, cols);\n    } else if (collisionNorth && compactType == null) {\n      collidesWith.y = itemToMove.y;\n      itemToMove.y = itemToMove.y + itemToMove.h;\n      return layout;\n    } else if (collisionWest && compactH) {\n      return moveElement(layout, collidesWith, itemToMove.x, undefined, isUserAction, preventCollision, compactType, cols);\n    }\n  }\n  const newX = compactH ? itemToMove.x + 1 : undefined;\n  const newY = compactV ? itemToMove.y + 1 : undefined;\n  if (newX == null && newY == null) {\n    return layout;\n  }\n  return moveElement(layout, itemToMove, compactH ? itemToMove.x + 1 : undefined, compactV ? itemToMove.y + 1 : undefined, isUserAction, preventCollision, compactType, cols);\n}\n\n/**\n * Helper to convert a number to a percentage string.\n *\n * @param  {Number} num Any number\n * @return {String}     That number as a percentage.\n */\nfunction perc(num /*: number*/) /*: string*/{\n  return num * 100 + \"%\";\n}\n\n/**\n * Helper functions to constrain dimensions of a GridItem\n */\nconst constrainWidth = (left /*: number*/, currentWidth /*: number*/, newWidth /*: number*/, containerWidth /*: number*/) => {\n  return left + newWidth > containerWidth ? currentWidth : newWidth;\n};\nconst constrainHeight = (top /*: number*/, currentHeight /*: number*/, newHeight /*: number*/) => {\n  return top < 0 ? currentHeight : newHeight;\n};\nconst constrainLeft = (left /*: number*/) => Math.max(0, left);\nconst constrainTop = (top /*: number*/) => Math.max(0, top);\nconst resizeNorth = (currentSize, _ref, _containerWidth) => {\n  let {\n    left,\n    height,\n    width\n  } = _ref;\n  const top = currentSize.top - (height - currentSize.height);\n  return {\n    left,\n    width,\n    height: constrainHeight(top, currentSize.height, height),\n    top: constrainTop(top)\n  };\n};\nconst resizeEast = (currentSize, _ref2, containerWidth) => {\n  let {\n    top,\n    left,\n    height,\n    width\n  } = _ref2;\n  return {\n    top,\n    height,\n    width: constrainWidth(currentSize.left, currentSize.width, width, containerWidth),\n    left: constrainLeft(left)\n  };\n};\nconst resizeWest = (currentSize, _ref3, containerWidth) => {\n  let {\n    top,\n    height,\n    width\n  } = _ref3;\n  const left = currentSize.left - (width - currentSize.width);\n  return {\n    height,\n    width: left < 0 ? currentSize.width : constrainWidth(currentSize.left, currentSize.width, width, containerWidth),\n    top: constrainTop(top),\n    left: constrainLeft(left)\n  };\n};\nconst resizeSouth = (currentSize, _ref4, containerWidth) => {\n  let {\n    top,\n    left,\n    height,\n    width\n  } = _ref4;\n  return {\n    width,\n    left,\n    height: constrainHeight(top, currentSize.height, height),\n    top: constrainTop(top)\n  };\n};\nconst resizeNorthEast = function () {\n  return resizeNorth(arguments.length <= 0 ? undefined : arguments[0], resizeEast(...arguments), arguments.length <= 2 ? undefined : arguments[2]);\n};\nconst resizeNorthWest = function () {\n  return resizeNorth(arguments.length <= 0 ? undefined : arguments[0], resizeWest(...arguments), arguments.length <= 2 ? undefined : arguments[2]);\n};\nconst resizeSouthEast = function () {\n  return resizeSouth(arguments.length <= 0 ? undefined : arguments[0], resizeEast(...arguments), arguments.length <= 2 ? undefined : arguments[2]);\n};\nconst resizeSouthWest = function () {\n  return resizeSouth(arguments.length <= 0 ? undefined : arguments[0], resizeWest(...arguments), arguments.length <= 2 ? undefined : arguments[2]);\n};\nconst ordinalResizeHandlerMap = {\n  n: resizeNorth,\n  ne: resizeNorthEast,\n  e: resizeEast,\n  se: resizeSouthEast,\n  s: resizeSouth,\n  sw: resizeSouthWest,\n  w: resizeWest,\n  nw: resizeNorthWest\n};\n\n/**\n * Helper for clamping width and position when resizing an item.\n */\nfunction resizeItemInDirection(direction /*: ResizeHandleAxis*/, currentSize /*: Position*/, newSize /*: Position*/, containerWidth /*: number*/) /*: Position*/{\n  const ordinalHandler = ordinalResizeHandlerMap[direction];\n  // Shouldn't be possible given types; that said, don't fail hard\n  if (!ordinalHandler) return newSize;\n  return ordinalHandler(currentSize, {\n    ...currentSize,\n    ...newSize\n  }, containerWidth);\n}\nfunction setTransform(_ref5 /*:: */) /*: Object*/{\n  let {\n    top,\n    left,\n    width,\n    height\n  } /*: Position*/ = _ref5 /*: Position*/;\n  // Replace unitless items with px\n  const translate = `translate(${left}px,${top}px)`;\n  return {\n    transform: translate,\n    WebkitTransform: translate,\n    MozTransform: translate,\n    msTransform: translate,\n    OTransform: translate,\n    width: `${width}px`,\n    height: `${height}px`,\n    position: \"absolute\"\n  };\n}\nfunction setTopLeft(_ref6 /*:: */) /*: Object*/{\n  let {\n    top,\n    left,\n    width,\n    height\n  } /*: Position*/ = _ref6 /*: Position*/;\n  return {\n    top: `${top}px`,\n    left: `${left}px`,\n    width: `${width}px`,\n    height: `${height}px`,\n    position: \"absolute\"\n  };\n}\n\n/**\n * Get layout items sorted from top left to right and down.\n *\n * @return {Array} Array of layout objects.\n * @return {Array}        Layout, sorted static items first.\n */\nfunction sortLayoutItems(layout /*: Layout*/, compactType /*: CompactType*/) /*: Layout*/{\n  if (compactType === \"horizontal\") return sortLayoutItemsByColRow(layout);\n  if (compactType === \"vertical\") return sortLayoutItemsByRowCol(layout);else return layout;\n}\n\n/**\n * Sort layout items by row ascending and column ascending.\n *\n * Does not modify Layout.\n */\nfunction sortLayoutItemsByRowCol(layout /*: Layout*/) /*: Layout*/{\n  // Slice to clone array as sort modifies\n  return layout.slice(0).sort(function (a, b) {\n    if (a.y > b.y || a.y === b.y && a.x > b.x) {\n      return 1;\n    } else if (a.y === b.y && a.x === b.x) {\n      // Without this, we can get different sort results in IE vs. Chrome/FF\n      return 0;\n    }\n    return -1;\n  });\n}\n\n/**\n * Sort layout items by column ascending then row ascending.\n *\n * Does not modify Layout.\n */\nfunction sortLayoutItemsByColRow(layout /*: Layout*/) /*: Layout*/{\n  return layout.slice(0).sort(function (a, b) {\n    if (a.x > b.x || a.x === b.x && a.y > b.y) {\n      return 1;\n    }\n    return -1;\n  });\n}\n\n/**\n * Generate a layout using the initialLayout and children as a template.\n * Missing entries will be added, extraneous ones will be truncated.\n *\n * Does not modify initialLayout.\n *\n * @param  {Array}  initialLayout Layout passed in through props.\n * @param  {String} breakpoint    Current responsive breakpoint.\n * @param  {?String} compact      Compaction option.\n * @return {Array}                Working layout.\n */\nfunction synchronizeLayoutWithChildren(initialLayout /*: Layout*/, children /*: ReactChildren*/, cols /*: number*/, compactType /*: CompactType*/, allowOverlap /*: ?boolean*/) /*: Layout*/{\n  initialLayout = initialLayout || [];\n\n  // Generate one layout item per child.\n  const layout /*: LayoutItem[]*/ = [];\n  _react.default.Children.forEach(children, (child /*: ReactElement<any>*/) => {\n    // Child may not exist\n    if (child?.key == null) return;\n    const exists = getLayoutItem(initialLayout, String(child.key));\n    const g = child.props[\"data-grid\"];\n    // Don't overwrite the layout item if it's already in the initial layout.\n    // If it has a `data-grid` property, prefer that over what's in the layout.\n    if (exists && g == null) {\n      layout.push(cloneLayoutItem(exists));\n    } else {\n      // Hey, this item has a data-grid property, use it.\n      if (g) {\n        if (!isProduction) {\n          validateLayout([g], \"ReactGridLayout.children\");\n        }\n        // FIXME clone not really necessary here\n        layout.push(cloneLayoutItem({\n          ...g,\n          i: child.key\n        }));\n      } else {\n        // Nothing provided: ensure this is added to the bottom\n        // FIXME clone not really necessary here\n        layout.push(cloneLayoutItem({\n          w: 1,\n          h: 1,\n          x: 0,\n          y: bottom(layout),\n          i: String(child.key)\n        }));\n      }\n    }\n  });\n\n  // Correct the layout.\n  const correctedLayout = correctBounds(layout, {\n    cols: cols\n  });\n  return allowOverlap ? correctedLayout : compact(correctedLayout, compactType, cols);\n}\n\n/**\n * Validate a layout. Throws errors.\n *\n * @param  {Array}  layout        Array of layout items.\n * @param  {String} [contextName] Context name for errors.\n * @throw  {Error}                Validation error.\n */\nfunction validateLayout(layout /*: Layout*/) /*: void*/{\n  let contextName /*: string*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Layout\";\n  const subProps = [\"x\", \"y\", \"w\", \"h\"];\n  if (!Array.isArray(layout)) throw new Error(contextName + \" must be an array!\");\n  for (let i = 0, len = layout.length; i < len; i++) {\n    const item = layout[i];\n    for (let j = 0; j < subProps.length; j++) {\n      const key = subProps[j];\n      const value = item[key];\n      if (typeof value !== \"number\" || Number.isNaN(value)) {\n        throw new Error(`ReactGridLayout: ${contextName}[${i}].${key} must be a number! Received: ${value} (${typeof value})`);\n      }\n    }\n    if (typeof item.i !== \"undefined\" && typeof item.i !== \"string\") {\n      throw new Error(`ReactGridLayout: ${contextName}[${i}].i must be a string! Received: ${item.i} (${typeof item.i})`);\n    }\n  }\n}\n\n// Legacy support for verticalCompact: false\nfunction compactType(props /*: ?{ verticalCompact: boolean, compactType: CompactType }*/) /*: CompactType*/{\n  const {\n    verticalCompact,\n    compactType\n  } = props || {};\n  return verticalCompact === false ? null : compactType;\n}\nfunction log() {\n  if (!DEBUG) return;\n  // eslint-disable-next-line no-console\n  console.log(...arguments);\n}\nconst noop = () => {};\nexports.noop = noop;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _fastEquals = require(\"fast-equals\");\nvar _utils = require(\"./utils\");\nvar _responsiveUtils = require(\"./responsiveUtils\");\nvar _ReactGridLayout = _interopRequireDefault(require(\"./ReactGridLayout\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); } /*:: import { type Layout, type Pick } from \"./utils\";*/ /*:: import { type ResponsiveLayout, type OnLayoutChangeCallback, type Breakpoints } from \"./responsiveUtils\";*/\n// $FlowFixMe[method-unbinding]\nconst type = obj => Object.prototype.toString.call(obj);\n\n/**\n * Get a value of margin or containerPadding.\n *\n * @param  {Array | Object} param Margin | containerPadding, e.g. [10, 10] | {lg: [10, 10], ...}.\n * @param  {String} breakpoint   Breakpoint: lg, md, sm, xs and etc.\n * @return {Array}\n */\nfunction getIndentationValue /*:: <T: ?[number, number]>*/(param /*: { [key: string]: T } | T*/, breakpoint /*: string*/) /*: T*/{\n  // $FlowIgnore TODO fix this typedef\n  if (param == null) return null;\n  // $FlowIgnore TODO fix this typedef\n  return Array.isArray(param) ? param : param[breakpoint];\n}\n/*:: type State = {\n  layout: Layout,\n  breakpoint: string,\n  cols: number,\n  layouts?: ResponsiveLayout<string>\n};*/\n/*:: type Props<Breakpoint: string = string> = {|\n  ...React.ElementConfig<typeof ReactGridLayout>,\n\n  // Responsive config\n  breakpoint?: ?Breakpoint,\n  breakpoints: Breakpoints<Breakpoint>,\n  cols: { [key: Breakpoint]: number },\n  layouts: ResponsiveLayout<Breakpoint>,\n  width: number,\n  margin: { [key: Breakpoint]: [number, number] } | [number, number],\n  /* prettier-ignore *-/\n  containerPadding: { [key: Breakpoint]: ?[number, number] } | ?[number, number],\n\n  // Callbacks\n  onBreakpointChange: (Breakpoint, cols: number) => void,\n  onLayoutChange: OnLayoutChangeCallback,\n  onWidthChange: (\n    containerWidth: number,\n    margin: [number, number],\n    cols: number,\n    containerPadding: ?[number, number]\n  ) => void\n|};*/\n/*:: type DefaultProps = Pick<\n  Props<>,\n  {|\n    allowOverlap: 0,\n    breakpoints: 0,\n    cols: 0,\n    containerPadding: 0,\n    layouts: 0,\n    margin: 0,\n    onBreakpointChange: 0,\n    onLayoutChange: 0,\n    onWidthChange: 0\n  |}\n>;*/\nclass ResponsiveReactGridLayout extends React.Component\n/*:: <\n  Props<>,\n  State\n>*/\n{\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", this.generateInitialState());\n    // wrap layouts so we do not need to pass layouts to child\n    _defineProperty(this, \"onLayoutChange\", (layout /*: Layout*/) => {\n      this.props.onLayoutChange(layout, {\n        ...this.props.layouts,\n        [this.state.breakpoint]: layout\n      });\n    });\n  }\n  generateInitialState() /*: State*/{\n    const {\n      width,\n      breakpoints,\n      layouts,\n      cols\n    } = this.props;\n    const breakpoint = (0, _responsiveUtils.getBreakpointFromWidth)(breakpoints, width);\n    const colNo = (0, _responsiveUtils.getColsFromBreakpoint)(breakpoint, cols);\n    // verticalCompact compatibility, now deprecated\n    const compactType = this.props.verticalCompact === false ? null : this.props.compactType;\n    // Get the initial layout. This can tricky; we try to generate one however possible if one doesn't exist\n    // for this layout.\n    const initialLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(layouts, breakpoints, breakpoint, breakpoint, colNo, compactType);\n    return {\n      layout: initialLayout,\n      breakpoint: breakpoint,\n      cols: colNo\n    };\n  }\n  static getDerivedStateFromProps(nextProps /*: Props<*>*/, prevState /*: State*/) /*: ?$Shape<State>*/{\n    if (!(0, _fastEquals.deepEqual)(nextProps.layouts, prevState.layouts)) {\n      // Allow parent to set layouts directly.\n      const {\n        breakpoint,\n        cols\n      } = prevState;\n\n      // Since we're setting an entirely new layout object, we must generate a new responsive layout\n      // if one does not exist.\n      const newLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(nextProps.layouts, nextProps.breakpoints, breakpoint, breakpoint, cols, nextProps.compactType);\n      return {\n        layout: newLayout,\n        layouts: nextProps.layouts\n      };\n    }\n    return null;\n  }\n  componentDidUpdate(prevProps /*: Props<*>*/) {\n    // Allow parent to set width or breakpoint directly.\n    if (this.props.width != prevProps.width || this.props.breakpoint !== prevProps.breakpoint || !(0, _fastEquals.deepEqual)(this.props.breakpoints, prevProps.breakpoints) || !(0, _fastEquals.deepEqual)(this.props.cols, prevProps.cols)) {\n      this.onWidthChange(prevProps);\n    }\n  }\n  /**\n   * When the width changes work through breakpoints and reset state with the new width & breakpoint.\n   * Width changes are necessary to figure out the widget widths.\n   */\n  onWidthChange(prevProps /*: Props<*>*/) {\n    const {\n      breakpoints,\n      cols,\n      layouts,\n      compactType\n    } = this.props;\n    const newBreakpoint = this.props.breakpoint || (0, _responsiveUtils.getBreakpointFromWidth)(this.props.breakpoints, this.props.width);\n    const lastBreakpoint = this.state.breakpoint;\n    const newCols /*: number*/ = (0, _responsiveUtils.getColsFromBreakpoint)(newBreakpoint, cols);\n    const newLayouts = {\n      ...layouts\n    };\n\n    // Breakpoint change\n    if (lastBreakpoint !== newBreakpoint || prevProps.breakpoints !== breakpoints || prevProps.cols !== cols) {\n      // Preserve the current layout if the current breakpoint is not present in the next layouts.\n      if (!(lastBreakpoint in newLayouts)) newLayouts[lastBreakpoint] = (0, _utils.cloneLayout)(this.state.layout);\n\n      // Find or generate a new layout.\n      let layout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(newLayouts, breakpoints, newBreakpoint, lastBreakpoint, newCols, compactType);\n\n      // This adds missing items.\n      layout = (0, _utils.synchronizeLayoutWithChildren)(layout, this.props.children, newCols, compactType, this.props.allowOverlap);\n\n      // Store the new layout.\n      newLayouts[newBreakpoint] = layout;\n\n      // callbacks\n      this.props.onBreakpointChange(newBreakpoint, newCols);\n      this.props.onLayoutChange(layout, newLayouts);\n      this.setState({\n        breakpoint: newBreakpoint,\n        layout: layout,\n        cols: newCols\n      });\n    }\n    const margin = getIndentationValue(this.props.margin, newBreakpoint);\n    const containerPadding = getIndentationValue(this.props.containerPadding, newBreakpoint);\n\n    //call onWidthChange on every change of width, not only on breakpoint changes\n    this.props.onWidthChange(this.props.width, margin, newCols, containerPadding);\n  }\n  render() /*: React.Element<typeof ReactGridLayout>*/{\n    /* eslint-disable no-unused-vars */\n    const {\n      breakpoint,\n      breakpoints,\n      cols,\n      layouts,\n      margin,\n      containerPadding,\n      onBreakpointChange,\n      onLayoutChange,\n      onWidthChange,\n      ...other\n    } = this.props;\n    /* eslint-enable no-unused-vars */\n\n    return /*#__PURE__*/React.createElement(_ReactGridLayout.default, _extends({}, other, {\n      // $FlowIgnore should allow nullable here due to DefaultProps\n      margin: getIndentationValue(margin, this.state.breakpoint),\n      containerPadding: getIndentationValue(containerPadding, this.state.breakpoint),\n      onLayoutChange: this.onLayoutChange,\n      layout: this.state.layout,\n      cols: this.state.cols\n    }));\n  }\n}\nexports.default = ResponsiveReactGridLayout;\n// This should only include propTypes needed in this code; RGL itself\n// will do validation of the rest props passed to it.\n_defineProperty(ResponsiveReactGridLayout, \"propTypes\", {\n  //\n  // Basic props\n  //\n\n  // Optional, but if you are managing width yourself you may want to set the breakpoint\n  // yourself as well.\n  breakpoint: _propTypes.default.string,\n  // {name: pxVal}, e.g. {lg: 1200, md: 996, sm: 768, xs: 480}\n  breakpoints: _propTypes.default.object,\n  allowOverlap: _propTypes.default.bool,\n  // # of cols. This is a breakpoint -> cols map\n  cols: _propTypes.default.object,\n  // # of margin. This is a breakpoint -> margin map\n  // e.g. { lg: [5, 5], md: [10, 10], sm: [15, 15] }\n  // Margin between items [x, y] in px\n  // e.g. [10, 10]\n  margin: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.object]),\n  // # of containerPadding. This is a breakpoint -> containerPadding map\n  // e.g. { lg: [5, 5], md: [10, 10], sm: [15, 15] }\n  // Padding inside the container [x, y] in px\n  // e.g. [10, 10]\n  containerPadding: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.object]),\n  // layouts is an object mapping breakpoints to layouts.\n  // e.g. {lg: Layout, md: Layout, ...}\n  layouts(props /*: Props<>*/, propName /*: string*/) {\n    if (type(props[propName]) !== \"[object Object]\") {\n      throw new Error(\"Layout property must be an object. Received: \" + type(props[propName]));\n    }\n    Object.keys(props[propName]).forEach(key => {\n      if (!(key in props.breakpoints)) {\n        throw new Error(\"Each key in layouts must align with a key in breakpoints.\");\n      }\n      (0, _utils.validateLayout)(props.layouts[key], \"layouts.\" + key);\n    });\n  },\n  // The width of this component.\n  // Required in this propTypes stanza because generateInitialState() will fail without it.\n  width: _propTypes.default.number.isRequired,\n  //\n  // Callbacks\n  //\n\n  // Calls back with breakpoint and new # cols\n  onBreakpointChange: _propTypes.default.func,\n  // Callback so you can save the layout.\n  // Calls back with (currentLayout, allLayouts). allLayouts are keyed by breakpoint.\n  onLayoutChange: _propTypes.default.func,\n  // Calls back with (containerWidth, margin, cols, containerPadding)\n  onWidthChange: _propTypes.default.func\n});\n_defineProperty(ResponsiveReactGridLayout, \"defaultProps\", {\n  breakpoints: {\n    lg: 1200,\n    md: 996,\n    sm: 768,\n    xs: 480,\n    xxs: 0\n  },\n  cols: {\n    lg: 12,\n    md: 10,\n    sm: 6,\n    xs: 4,\n    xxs: 2\n  },\n  containerPadding: {\n    lg: null,\n    md: null,\n    sm: null,\n    xs: null,\n    xxs: null\n  },\n  layouts: {},\n  margin: [10, 10],\n  allowOverlap: false,\n  onBreakpointChange: _utils.noop,\n  onLayoutChange: _utils.noop,\n  onWidthChange: _utils.noop\n});","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar util_1 = require(\"./misc/util\");\nvar useIsomorphicLayoutEffect = util_1.isBrowser ? react_1.useLayoutEffect : react_1.useEffect;\nexports.default = useIsomorphicLayoutEffect;\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global[\"fast-equals\"] = {}));\n})(this, (function (exports) { 'use strict';\n\n  /**\r\n   * Default equality comparator pass-through, used as the standard `isEqual` creator for\r\n   * use inside the built comparator.\r\n   */\r\n  function createDefaultIsNestedEqual(comparator) {\r\n      return function isEqual(a, b, _indexOrKeyA, _indexOrKeyB, _parentA, _parentB, meta) {\r\n          return comparator(a, b, meta);\r\n      };\r\n  }\r\n  /**\r\n   * Wrap the provided `areItemsEqual` method to manage the circular cache, allowing\r\n   * for circular references to be safely included in the comparison without creating\r\n   * stack overflows.\r\n   */\r\n  function createIsCircular(areItemsEqual) {\r\n      return function isCircular(a, b, isEqual, cache) {\r\n          if (!a || !b || typeof a !== 'object' || typeof b !== 'object') {\r\n              return areItemsEqual(a, b, isEqual, cache);\r\n          }\r\n          var cachedA = cache.get(a);\r\n          var cachedB = cache.get(b);\r\n          if (cachedA && cachedB) {\r\n              return cachedA === b && cachedB === a;\r\n          }\r\n          cache.set(a, b);\r\n          cache.set(b, a);\r\n          var result = areItemsEqual(a, b, isEqual, cache);\r\n          cache.delete(a);\r\n          cache.delete(b);\r\n          return result;\r\n      };\r\n  }\r\n  /**\r\n   * Targeted shallow merge of two objects.\r\n   *\r\n   * @NOTE\r\n   * This exists as a tinier compiled version of the `__assign` helper that\r\n   * `tsc` injects in case of `Object.assign` not being present.\r\n   */\r\n  function merge(a, b) {\r\n      var merged = {};\r\n      for (var key in a) {\r\n          merged[key] = a[key];\r\n      }\r\n      for (var key in b) {\r\n          merged[key] = b[key];\r\n      }\r\n      return merged;\r\n  }\r\n  /**\r\n   * Whether the value is a plain object.\r\n   *\r\n   * @NOTE\r\n   * This is a same-realm compariosn only.\r\n   */\r\n  function isPlainObject(value) {\r\n      return value.constructor === Object || value.constructor == null;\r\n  }\r\n  /**\r\n   * When the value is `Promise`-like, aka \"then-able\".\r\n   */\r\n  function isPromiseLike(value) {\r\n      return typeof value.then === 'function';\r\n  }\r\n  /**\r\n   * Whether the values passed are strictly equal or both NaN.\r\n   */\r\n  function sameValueZeroEqual(a, b) {\r\n      return a === b || (a !== a && b !== b);\r\n  }\n\n  var ARGUMENTS_TAG = '[object Arguments]';\r\n  var BOOLEAN_TAG = '[object Boolean]';\r\n  var DATE_TAG = '[object Date]';\r\n  var REG_EXP_TAG = '[object RegExp]';\r\n  var MAP_TAG = '[object Map]';\r\n  var NUMBER_TAG = '[object Number]';\r\n  var OBJECT_TAG = '[object Object]';\r\n  var SET_TAG = '[object Set]';\r\n  var STRING_TAG = '[object String]';\r\n  var toString = Object.prototype.toString;\r\n  function createComparator(_a) {\r\n      var areArraysEqual = _a.areArraysEqual, areDatesEqual = _a.areDatesEqual, areMapsEqual = _a.areMapsEqual, areObjectsEqual = _a.areObjectsEqual, areRegExpsEqual = _a.areRegExpsEqual, areSetsEqual = _a.areSetsEqual, createIsNestedEqual = _a.createIsNestedEqual;\r\n      var isEqual = createIsNestedEqual(comparator);\r\n      /**\r\n       * compare the value of the two objects and return true if they are equivalent in values\r\n       */\r\n      function comparator(a, b, meta) {\r\n          // If the items are strictly equal, no need to do a value comparison.\r\n          if (a === b) {\r\n              return true;\r\n          }\r\n          // If the items are not non-nullish objects, then the only possibility\r\n          // of them being equal but not strictly is if they are both `NaN`. Since\r\n          // `NaN` is uniquely not equal to itself, we can use self-comparison of\r\n          // both objects, which is faster than `isNaN()`.\r\n          if (!a || !b || typeof a !== 'object' || typeof b !== 'object') {\r\n              return a !== a && b !== b;\r\n          }\r\n          // Checks are listed in order of commonality of use-case:\r\n          //   1. Common complex object types (plain object, array)\r\n          //   2. Common data values (date, regexp)\r\n          //   3. Less-common complex object types (map, set)\r\n          //   4. Less-common data values (promise, primitive wrappers)\r\n          // Inherently this is both subjective and assumptive, however\r\n          // when reviewing comparable libraries in the wild this order\r\n          // appears to be generally consistent.\r\n          // `isPlainObject` only checks against the object's own realm. Cross-realm\r\n          // comparisons are rare, and will be handled in the ultimate fallback, so\r\n          // we can avoid the `toString.call()` cost unless necessary.\r\n          if (isPlainObject(a) && isPlainObject(b)) {\r\n              return areObjectsEqual(a, b, isEqual, meta);\r\n          }\r\n          // `isArray()` works on subclasses and is cross-realm, so we can again avoid\r\n          // the `toString.call()` cost unless necessary by just checking if either\r\n          // and then both are arrays.\r\n          var aArray = Array.isArray(a);\r\n          var bArray = Array.isArray(b);\r\n          if (aArray || bArray) {\r\n              return aArray === bArray && areArraysEqual(a, b, isEqual, meta);\r\n          }\r\n          // Since this is a custom object, use the classic `toString.call()` to get its\r\n          // type. This is reasonably performant in modern environments like v8 and\r\n          // SpiderMonkey, and allows for cross-realm comparison when other checks like\r\n          // `instanceof` do not.\r\n          var aTag = toString.call(a);\r\n          if (aTag !== toString.call(b)) {\r\n              return false;\r\n          }\r\n          if (aTag === DATE_TAG) {\r\n              // `getTime()` showed better results compared to alternatives like `valueOf()`\r\n              // or the unary `+` operator.\r\n              return areDatesEqual(a, b, isEqual, meta);\r\n          }\r\n          if (aTag === REG_EXP_TAG) {\r\n              return areRegExpsEqual(a, b, isEqual, meta);\r\n          }\r\n          if (aTag === MAP_TAG) {\r\n              return areMapsEqual(a, b, isEqual, meta);\r\n          }\r\n          if (aTag === SET_TAG) {\r\n              return areSetsEqual(a, b, isEqual, meta);\r\n          }\r\n          // If a simple object tag, then we can prioritize a simple object comparison because\r\n          // it is likely a custom class. If an arguments tag, it should be treated as a standard\r\n          // object.\r\n          if (aTag === OBJECT_TAG || aTag === ARGUMENTS_TAG) {\r\n              // The exception for value comparison is `Promise`-like contracts. These should be\r\n              // treated the same as standard `Promise` objects, which means strict equality.\r\n              return isPromiseLike(a) || isPromiseLike(b)\r\n                  ? false\r\n                  : areObjectsEqual(a, b, isEqual, meta);\r\n          }\r\n          // As the penultimate fallback, check if the values passed are primitive wrappers. This\r\n          // is very rare in modern JS, which is why it is deprioritized compared to all other object\r\n          // types.\r\n          if (aTag === BOOLEAN_TAG || aTag === NUMBER_TAG || aTag === STRING_TAG) {\r\n              return sameValueZeroEqual(a.valueOf(), b.valueOf());\r\n          }\r\n          // If not matching any tags that require a specific type of comparison, then we hard-code false because\r\n          // the only thing remaining is strict equality, which has already been compared. This is for a few reasons:\r\n          //   - Certain types that cannot be introspected (e.g., `WeakMap`). For these types, this is the only\r\n          //     comparison that can be made.\r\n          //   - For types that can be introspected, but rarely have requirements to be compared\r\n          //     (`ArrayBuffer`, `DataView`, etc.), the cost is avoided to prioritize the common\r\n          //     use-cases (may be included in a future release, if requested enough).\r\n          //   - For types that can be introspected but do not have an objective definition of what\r\n          //     equality is (`Error`, etc.), the subjective decision is to be conservative and strictly compare.\r\n          // In all cases, these decisions should be reevaluated based on changes to the language and\r\n          // common development practices.\r\n          return false;\r\n      }\r\n      return comparator;\r\n  }\n\n  /**\r\n   * Whether the arrays are equal in value.\r\n   */\r\n  function areArraysEqual(a, b, isEqual, meta) {\r\n      var index = a.length;\r\n      if (b.length !== index) {\r\n          return false;\r\n      }\r\n      // Decrementing `while` showed faster results than either incrementing or\r\n      // decrementing `for` loop and than an incrementing `while` loop. Declarative\r\n      // methods like `some` / `every` were not used to avoid incurring the garbage\r\n      // cost of anonymous callbacks.\r\n      while (index-- > 0) {\r\n          if (!isEqual(a[index], b[index], index, index, a, b, meta)) {\r\n              return false;\r\n          }\r\n      }\r\n      return true;\r\n  }\r\n  /**\r\n   * Whether the arrays are equal in value, including circular references.\r\n   */\r\n  var areArraysEqualCircular = createIsCircular(areArraysEqual);\n\n  /**\r\n   * Whether the dates passed are equal in value.\r\n   *\r\n   * @NOTE\r\n   * This is a standalone function instead of done inline in the comparator\r\n   * to allow for overrides.\r\n   */\r\n  function areDatesEqual(a, b) {\r\n      return sameValueZeroEqual(a.valueOf(), b.valueOf());\r\n  }\n\n  /**\r\n   * Whether the `Map`s are equal in value.\r\n   */\r\n  function areMapsEqual(a, b, isEqual, meta) {\r\n      var isValueEqual = a.size === b.size;\r\n      if (!isValueEqual) {\r\n          return false;\r\n      }\r\n      if (!a.size) {\r\n          return true;\r\n      }\r\n      // The use of `forEach()` is to avoid the transpilation cost of `for...of` comparisons, and\r\n      // the inability to control the performance of the resulting code. It also avoids excessive\r\n      // iteration compared to doing comparisons of `keys()` and `values()`. As a result, though,\r\n      // we cannot short-circuit the iterations; bookkeeping must be done to short-circuit the\r\n      // equality checks themselves.\r\n      var matchedIndices = {};\r\n      var indexA = 0;\r\n      a.forEach(function (aValue, aKey) {\r\n          if (!isValueEqual) {\r\n              return;\r\n          }\r\n          var hasMatch = false;\r\n          var matchIndexB = 0;\r\n          b.forEach(function (bValue, bKey) {\r\n              if (!hasMatch &&\r\n                  !matchedIndices[matchIndexB] &&\r\n                  (hasMatch =\r\n                      isEqual(aKey, bKey, indexA, matchIndexB, a, b, meta) &&\r\n                          isEqual(aValue, bValue, aKey, bKey, a, b, meta))) {\r\n                  matchedIndices[matchIndexB] = true;\r\n              }\r\n              matchIndexB++;\r\n          });\r\n          indexA++;\r\n          isValueEqual = hasMatch;\r\n      });\r\n      return isValueEqual;\r\n  }\r\n  /**\r\n   * Whether the `Map`s are equal in value, including circular references.\r\n   */\r\n  var areMapsEqualCircular = createIsCircular(areMapsEqual);\n\n  var OWNER = '_owner';\r\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\r\n  /**\r\n   * Whether the objects are equal in value.\r\n   */\r\n  function areObjectsEqual(a, b, isEqual, meta) {\r\n      var keysA = Object.keys(a);\r\n      var index = keysA.length;\r\n      if (Object.keys(b).length !== index) {\r\n          return false;\r\n      }\r\n      var key;\r\n      // Decrementing `while` showed faster results than either incrementing or\r\n      // decrementing `for` loop and than an incrementing `while` loop. Declarative\r\n      // methods like `some` / `every` were not used to avoid incurring the garbage\r\n      // cost of anonymous callbacks.\r\n      while (index-- > 0) {\r\n          key = keysA[index];\r\n          if (key === OWNER) {\r\n              var reactElementA = !!a.$$typeof;\r\n              var reactElementB = !!b.$$typeof;\r\n              if ((reactElementA || reactElementB) && reactElementA !== reactElementB) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (!hasOwnProperty.call(b, key) ||\r\n              !isEqual(a[key], b[key], key, key, a, b, meta)) {\r\n              return false;\r\n          }\r\n      }\r\n      return true;\r\n  }\r\n  /**\r\n   * Whether the objects are equal in value, including circular references.\r\n   */\r\n  var areObjectsEqualCircular = createIsCircular(areObjectsEqual);\n\n  /**\r\n   * Whether the regexps passed are equal in value.\r\n   *\r\n   * @NOTE\r\n   * This is a standalone function instead of done inline in the comparator\r\n   * to allow for overrides. An example of this would be supporting a\r\n   * pre-ES2015 environment where the `flags` property is not available.\r\n   */\r\n  function areRegExpsEqual(a, b) {\r\n      return a.source === b.source && a.flags === b.flags;\r\n  }\n\n  /**\r\n   * Whether the `Set`s are equal in value.\r\n   */\r\n  function areSetsEqual(a, b, isEqual, meta) {\r\n      var isValueEqual = a.size === b.size;\r\n      if (!isValueEqual) {\r\n          return false;\r\n      }\r\n      if (!a.size) {\r\n          return true;\r\n      }\r\n      // The use of `forEach()` is to avoid the transpilation cost of `for...of` comparisons, and\r\n      // the inability to control the performance of the resulting code. It also avoids excessive\r\n      // iteration compared to doing comparisons of `keys()` and `values()`. As a result, though,\r\n      // we cannot short-circuit the iterations; bookkeeping must be done to short-circuit the\r\n      // equality checks themselves.\r\n      var matchedIndices = {};\r\n      a.forEach(function (aValue, aKey) {\r\n          if (!isValueEqual) {\r\n              return;\r\n          }\r\n          var hasMatch = false;\r\n          var matchIndex = 0;\r\n          b.forEach(function (bValue, bKey) {\r\n              if (!hasMatch &&\r\n                  !matchedIndices[matchIndex] &&\r\n                  (hasMatch = isEqual(aValue, bValue, aKey, bKey, a, b, meta))) {\r\n                  matchedIndices[matchIndex] = true;\r\n              }\r\n              matchIndex++;\r\n          });\r\n          isValueEqual = hasMatch;\r\n      });\r\n      return isValueEqual;\r\n  }\r\n  /**\r\n   * Whether the `Set`s are equal in value, including circular references.\r\n   */\r\n  var areSetsEqualCircular = createIsCircular(areSetsEqual);\n\n  var DEFAULT_CONFIG = Object.freeze({\r\n      areArraysEqual: areArraysEqual,\r\n      areDatesEqual: areDatesEqual,\r\n      areMapsEqual: areMapsEqual,\r\n      areObjectsEqual: areObjectsEqual,\r\n      areRegExpsEqual: areRegExpsEqual,\r\n      areSetsEqual: areSetsEqual,\r\n      createIsNestedEqual: createDefaultIsNestedEqual,\r\n  });\r\n  var DEFAULT_CIRCULAR_CONFIG = Object.freeze({\r\n      areArraysEqual: areArraysEqualCircular,\r\n      areDatesEqual: areDatesEqual,\r\n      areMapsEqual: areMapsEqualCircular,\r\n      areObjectsEqual: areObjectsEqualCircular,\r\n      areRegExpsEqual: areRegExpsEqual,\r\n      areSetsEqual: areSetsEqualCircular,\r\n      createIsNestedEqual: createDefaultIsNestedEqual,\r\n  });\r\n  var isDeepEqual = createComparator(DEFAULT_CONFIG);\r\n  /**\r\n   * Whether the items passed are deeply-equal in value.\r\n   */\r\n  function deepEqual(a, b) {\r\n      return isDeepEqual(a, b, undefined);\r\n  }\r\n  var isShallowEqual = createComparator(merge(DEFAULT_CONFIG, { createIsNestedEqual: function () { return sameValueZeroEqual; } }));\r\n  /**\r\n   * Whether the items passed are shallowly-equal in value.\r\n   */\r\n  function shallowEqual(a, b) {\r\n      return isShallowEqual(a, b, undefined);\r\n  }\r\n  var isCircularDeepEqual = createComparator(DEFAULT_CIRCULAR_CONFIG);\r\n  /**\r\n   * Whether the items passed are deeply-equal in value, including circular references.\r\n   */\r\n  function circularDeepEqual(a, b) {\r\n      return isCircularDeepEqual(a, b, new WeakMap());\r\n  }\r\n  var isCircularShallowEqual = createComparator(merge(DEFAULT_CIRCULAR_CONFIG, {\r\n      createIsNestedEqual: function () { return sameValueZeroEqual; },\r\n  }));\r\n  /**\r\n   * Whether the items passed are shallowly-equal in value, including circular references.\r\n   */\r\n  function circularShallowEqual(a, b) {\r\n      return isCircularShallowEqual(a, b, new WeakMap());\r\n  }\r\n  /**\r\n   * Create a custom equality comparison method.\r\n   *\r\n   * This can be done to create very targeted comparisons in extreme hot-path scenarios\r\n   * where the standard methods are not performant enough, but can also be used to provide\r\n   * support for legacy environments that do not support expected features like\r\n   * `RegExp.prototype.flags` out of the box.\r\n   */\r\n  function createCustomEqual(getComparatorOptions) {\r\n      return createComparator(merge(DEFAULT_CONFIG, getComparatorOptions(DEFAULT_CONFIG)));\r\n  }\r\n  /**\r\n   * Create a custom equality comparison method that handles circular references. This is very\r\n   * similar to `createCustomEqual`, with the only difference being that `meta` expects to be\r\n   * populated with a `WeakMap`-like contract.\r\n   *\r\n   * This can be done to create very targeted comparisons in extreme hot-path scenarios\r\n   * where the standard methods are not performant enough, but can also be used to provide\r\n   * support for legacy environments that do not support expected features like\r\n   * `WeakMap` out of the box.\r\n   */\r\n  function createCustomCircularEqual(getComparatorOptions) {\r\n      var comparator = createComparator(merge(DEFAULT_CIRCULAR_CONFIG, getComparatorOptions(DEFAULT_CIRCULAR_CONFIG)));\r\n      return (function (a, b, meta) {\r\n          if (meta === void 0) { meta = new WeakMap(); }\r\n          return comparator(a, b, meta);\r\n      });\r\n  }\n\n  exports.circularDeepEqual = circularDeepEqual;\n  exports.circularShallowEqual = circularShallowEqual;\n  exports.createCustomCircularEqual = createCustomCircularEqual;\n  exports.createCustomEqual = createCustomEqual;\n  exports.deepEqual = deepEqual;\n  exports.sameValueZeroEqual = sameValueZeroEqual;\n  exports.shallowEqual = shallowEqual;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=fast-equals.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resizeHandleType = exports.resizeHandleAxesType = exports.default = void 0;\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/*:: import type {\n  Ref,\n  ChildrenArray as ReactChildrenArray,\n  Element as ReactElement\n} from \"react\";*/\n/*:: import type {\n  DragOverEvent,\n  EventCallback,\n  CompactType,\n  Layout,\n  LayoutItem,\n  ResizeHandleAxis\n} from \"./utils\";*/\n/*:: export type ReactRef<T: HTMLElement> = {|\n  +current: T | null\n|};*/\n// util\n/*:: export type ResizeHandle =\n  | ReactElement<any>\n  | ((\n      resizeHandleAxis: ResizeHandleAxis,\n      ref: ReactRef<HTMLElement>\n    ) => ReactElement<any>);*/\n// Defines which resize handles should be rendered (default: 'se')\n// Allows for any combination of:\n// 's' - South handle (bottom-center)\n// 'w' - West handle (left-center)\n// 'e' - East handle (right-center)\n// 'n' - North handle (top-center)\n// 'sw' - Southwest handle (bottom-left)\n// 'nw' - Northwest handle (top-left)\n// 'se' - Southeast handle (bottom-right)\n// 'ne' - Northeast handle (top-right)\nconst resizeHandleAxesType /*: ReactPropsChainableTypeChecker*/ = exports.resizeHandleAxesType = _propTypes.default.arrayOf(_propTypes.default.oneOf([\"s\", \"w\", \"e\", \"n\", \"sw\", \"nw\", \"se\", \"ne\"]));\n// Custom component for resize handles\nconst resizeHandleType /*: ReactPropsChainableTypeChecker*/ = exports.resizeHandleType = _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]);\n/*:: export type Props = {|\n  className: string,\n  style: Object,\n  width: number,\n  autoSize: boolean,\n  cols: number,\n  draggableCancel: string,\n  draggableHandle: string,\n  verticalCompact: boolean,\n  compactType: CompactType,\n  layout: Layout,\n  margin: [number, number],\n  containerPadding: ?[number, number],\n  rowHeight: number,\n  maxRows: number,\n  isBounded: boolean,\n  isDraggable: boolean,\n  isResizable: boolean,\n  isDroppable: boolean,\n  preventCollision: boolean,\n  useCSSTransforms: boolean,\n  transformScale: number,\n  droppingItem: $Shape<LayoutItem>,\n  resizeHandles: ResizeHandleAxis[],\n  resizeHandle?: ResizeHandle,\n  allowOverlap: boolean,\n\n  // Callbacks\n  onLayoutChange: Layout => void,\n  onDrag: EventCallback,\n  onDragStart: EventCallback,\n  onDragStop: EventCallback,\n  onResize: EventCallback,\n  onResizeStart: EventCallback,\n  onResizeStop: EventCallback,\n  onDropDragOver: (e: DragOverEvent) => ?({| w?: number, h?: number |} | false),\n  onDrop: (layout: Layout, item: ?LayoutItem, e: Event) => void,\n  children: ReactChildrenArray<ReactElement<any>>,\n  innerRef?: Ref<\"div\">\n|};*/\n/*:: export type DefaultProps = $Diff<\n  Props,\n  {\n    children: ReactChildrenArray<ReactElement<any>>,\n    width: number\n  }\n>;*/\nvar _default = exports.default = {\n  //\n  // Basic props\n  //\n  className: _propTypes.default.string,\n  style: _propTypes.default.object,\n  // This can be set explicitly. If it is not set, it will automatically\n  // be set to the container width. Note that resizes will *not* cause this to adjust.\n  // If you need that behavior, use WidthProvider.\n  width: _propTypes.default.number,\n  // If true, the container height swells and contracts to fit contents\n  autoSize: _propTypes.default.bool,\n  // # of cols.\n  cols: _propTypes.default.number,\n  // A selector that will not be draggable.\n  draggableCancel: _propTypes.default.string,\n  // A selector for the draggable handler\n  draggableHandle: _propTypes.default.string,\n  // Deprecated\n  verticalCompact: function (props /*: Props*/) {\n    if (props.verticalCompact === false && process.env.NODE_ENV !== \"production\") {\n      console.warn(\n      // eslint-disable-line no-console\n      \"`verticalCompact` on <ReactGridLayout> is deprecated and will be removed soon. \" + 'Use `compactType`: \"horizontal\" | \"vertical\" | null.');\n    }\n  },\n  // Choose vertical or hotizontal compaction\n  compactType: (_propTypes.default.oneOf([\"vertical\", \"horizontal\"]) /*: ReactPropsChainableTypeChecker*/),\n  // layout is an array of object with the format:\n  // {x: Number, y: Number, w: Number, h: Number, i: String}\n  layout: function (props /*: Props*/) {\n    var layout = props.layout;\n    // I hope you're setting the data-grid property on the grid items\n    if (layout === undefined) return;\n    require(\"./utils\").validateLayout(layout, \"layout\");\n  },\n  //\n  // Grid Dimensions\n  //\n\n  // Margin between items [x, y] in px\n  margin: (_propTypes.default.arrayOf(_propTypes.default.number) /*: ReactPropsChainableTypeChecker*/),\n  // Padding inside the container [x, y] in px\n  containerPadding: (_propTypes.default.arrayOf(_propTypes.default.number) /*: ReactPropsChainableTypeChecker*/),\n  // Rows have a static height, but you can change this based on breakpoints if you like\n  rowHeight: _propTypes.default.number,\n  // Default Infinity, but you can specify a max here if you like.\n  // Note that this isn't fully fleshed out and won't error if you specify a layout that\n  // extends beyond the row capacity. It will, however, not allow users to drag/resize\n  // an item past the barrier. They can push items beyond the barrier, though.\n  // Intentionally not documented for this reason.\n  maxRows: _propTypes.default.number,\n  //\n  // Flags\n  //\n  isBounded: _propTypes.default.bool,\n  isDraggable: _propTypes.default.bool,\n  isResizable: _propTypes.default.bool,\n  // If true, grid can be placed one over the other.\n  allowOverlap: _propTypes.default.bool,\n  // If true, grid items won't change position when being dragged over.\n  preventCollision: _propTypes.default.bool,\n  // Use CSS transforms instead of top/left\n  useCSSTransforms: _propTypes.default.bool,\n  // parent layout transform scale\n  transformScale: _propTypes.default.number,\n  // If true, an external element can trigger onDrop callback with a specific grid position as a parameter\n  isDroppable: _propTypes.default.bool,\n  // Resize handle options\n  resizeHandles: resizeHandleAxesType,\n  resizeHandle: resizeHandleType,\n  //\n  // Callbacks\n  //\n\n  // Callback so you can save the layout. Calls after each drag & resize stops.\n  onLayoutChange: _propTypes.default.func,\n  // Calls when drag starts. Callback is of the signature (layout, oldItem, newItem, placeholder, e, ?node).\n  // All callbacks below have the same signature. 'start' and 'stop' callbacks omit the 'placeholder'.\n  onDragStart: _propTypes.default.func,\n  // Calls on each drag movement.\n  onDrag: _propTypes.default.func,\n  // Calls when drag is complete.\n  onDragStop: _propTypes.default.func,\n  //Calls when resize starts.\n  onResizeStart: _propTypes.default.func,\n  // Calls when resize movement happens.\n  onResize: _propTypes.default.func,\n  // Calls when resize is complete.\n  onResizeStop: _propTypes.default.func,\n  // Calls when some element is dropped.\n  onDrop: _propTypes.default.func,\n  //\n  // Other validations\n  //\n\n  droppingItem: (_propTypes.default.shape({\n    i: _propTypes.default.string.isRequired,\n    w: _propTypes.default.number.isRequired,\n    h: _propTypes.default.number.isRequired\n  }) /*: ReactPropsChainableTypeChecker*/),\n  // Children must not have duplicate keys.\n  children: function (props /*: Props*/, propName /*: string*/) {\n    const children = props[propName];\n\n    // Check children keys for duplicates. Throw if found.\n    const keys = {};\n    _react.default.Children.forEach(children, function (child) {\n      if (child?.key == null) return;\n      if (keys[child.key]) {\n        throw new Error('Duplicate child key \"' + child.key + '\" found! This will cause problems in ReactGridLayout.');\n      }\n      keys[child.key] = true;\n    });\n  },\n  // Optional ref for getting a reference for the wrapping div.\n  innerRef: _propTypes.default.any\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _fastEquals = require(\"fast-equals\");\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\nvar _utils = require(\"./utils\");\nvar _calculateUtils = require(\"./calculateUtils\");\nvar _GridItem = _interopRequireDefault(require(\"./GridItem\"));\nvar _ReactGridLayoutPropTypes = _interopRequireDefault(require(\"./ReactGridLayoutPropTypes\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*:: import type {\n  ChildrenArray as ReactChildrenArray,\n  Element as ReactElement\n} from \"react\";*/\n/*:: import type {\n  CompactType,\n  GridResizeEvent,\n  GridDragEvent,\n  DragOverEvent,\n  Layout,\n  DroppingPosition,\n  LayoutItem\n} from \"./utils\";*/\n// Types\n/*:: import type { PositionParams } from \"./calculateUtils\";*/\n/*:: type State = {\n  activeDrag: ?LayoutItem,\n  layout: Layout,\n  mounted: boolean,\n  oldDragItem: ?LayoutItem,\n  oldLayout: ?Layout,\n  oldResizeItem: ?LayoutItem,\n  resizing: boolean,\n  droppingDOMNode: ?ReactElement<any>,\n  droppingPosition?: DroppingPosition,\n  // Mirrored props\n  children: ReactChildrenArray<ReactElement<any>>,\n  compactType?: CompactType,\n  propsLayout?: Layout\n};*/\n/*:: import type { Props, DefaultProps } from \"./ReactGridLayoutPropTypes\";*/\n// End Types\nconst layoutClassName = \"react-grid-layout\";\nlet isFirefox = false;\n// Try...catch will protect from navigator not existing (e.g. node) or a bad implementation of navigator\ntry {\n  isFirefox = /firefox/i.test(navigator.userAgent);\n} catch (e) {\n  /* Ignore */\n}\n\n/**\n * A reactive, fluid grid layout with draggable, resizable components.\n */\n\nclass ReactGridLayout extends React.Component /*:: <Props, State>*/{\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", {\n      activeDrag: null,\n      layout: (0, _utils.synchronizeLayoutWithChildren)(this.props.layout, this.props.children, this.props.cols,\n      // Legacy support for verticalCompact: false\n      (0, _utils.compactType)(this.props), this.props.allowOverlap),\n      mounted: false,\n      oldDragItem: null,\n      oldLayout: null,\n      oldResizeItem: null,\n      resizing: false,\n      droppingDOMNode: null,\n      children: []\n    });\n    _defineProperty(this, \"dragEnterCounter\", 0);\n    /**\n     * When dragging starts\n     * @param {String} i Id of the child\n     * @param {Number} x X position of the move\n     * @param {Number} y Y position of the move\n     * @param {Event} e The mousedown event\n     * @param {Element} node The current dragging DOM element\n     */\n    _defineProperty(this, \"onDragStart\", (i /*: string*/, x /*: number*/, y /*: number*/, _ref /*:: */) => {\n      let {\n        e,\n        node\n      } /*: GridDragEvent*/ = _ref /*: GridDragEvent*/;\n      const {\n        layout\n      } = this.state;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n      if (!l) return;\n\n      // Create placeholder (display only)\n      const placeholder = {\n        w: l.w,\n        h: l.h,\n        x: l.x,\n        y: l.y,\n        placeholder: true,\n        i: i\n      };\n      this.setState({\n        oldDragItem: (0, _utils.cloneLayoutItem)(l),\n        oldLayout: layout,\n        activeDrag: placeholder\n      });\n      return this.props.onDragStart(layout, l, l, null, e, node);\n    });\n    /**\n     * Each drag movement create a new dragelement and move the element to the dragged location\n     * @param {String} i Id of the child\n     * @param {Number} x X position of the move\n     * @param {Number} y Y position of the move\n     * @param {Event} e The mousedown event\n     * @param {Element} node The current dragging DOM element\n     */\n    _defineProperty(this, \"onDrag\", (i, x, y, _ref2) => {\n      let {\n        e,\n        node\n      } = _ref2;\n      const {\n        oldDragItem\n      } = this.state;\n      let {\n        layout\n      } = this.state;\n      const {\n        cols,\n        allowOverlap,\n        preventCollision\n      } = this.props;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n      if (!l) return;\n\n      // Create placeholder (display only)\n      const placeholder = {\n        w: l.w,\n        h: l.h,\n        x: l.x,\n        y: l.y,\n        placeholder: true,\n        i: i\n      };\n\n      // Move the element to the dragged location.\n      const isUserAction = true;\n      layout = (0, _utils.moveElement)(layout, l, x, y, isUserAction, preventCollision, (0, _utils.compactType)(this.props), cols, allowOverlap);\n      this.props.onDrag(layout, oldDragItem, l, placeholder, e, node);\n      this.setState({\n        layout: allowOverlap ? layout : (0, _utils.compact)(layout, (0, _utils.compactType)(this.props), cols),\n        activeDrag: placeholder\n      });\n    });\n    /**\n     * When dragging stops, figure out which position the element is closest to and update its x and y.\n     * @param  {String} i Index of the child.\n     * @param {Number} x X position of the move\n     * @param {Number} y Y position of the move\n     * @param {Event} e The mousedown event\n     * @param {Element} node The current dragging DOM element\n     */\n    _defineProperty(this, \"onDragStop\", (i, x, y, _ref3) => {\n      let {\n        e,\n        node\n      } = _ref3;\n      if (!this.state.activeDrag) return;\n      const {\n        oldDragItem\n      } = this.state;\n      let {\n        layout\n      } = this.state;\n      const {\n        cols,\n        preventCollision,\n        allowOverlap\n      } = this.props;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n      if (!l) return;\n\n      // Move the element here\n      const isUserAction = true;\n      layout = (0, _utils.moveElement)(layout, l, x, y, isUserAction, preventCollision, (0, _utils.compactType)(this.props), cols, allowOverlap);\n\n      // Set state\n      const newLayout = allowOverlap ? layout : (0, _utils.compact)(layout, (0, _utils.compactType)(this.props), cols);\n      this.props.onDragStop(newLayout, oldDragItem, l, null, e, node);\n      const {\n        oldLayout\n      } = this.state;\n      this.setState({\n        activeDrag: null,\n        layout: newLayout,\n        oldDragItem: null,\n        oldLayout: null\n      });\n      this.onLayoutMaybeChanged(newLayout, oldLayout);\n    });\n    _defineProperty(this, \"onResizeStart\", (i, w, h, _ref4) => {\n      let {\n        e,\n        node\n      } = _ref4;\n      const {\n        layout\n      } = this.state;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n      if (!l) return;\n      this.setState({\n        oldResizeItem: (0, _utils.cloneLayoutItem)(l),\n        oldLayout: this.state.layout,\n        resizing: true\n      });\n      this.props.onResizeStart(layout, l, l, null, e, node);\n    });\n    _defineProperty(this, \"onResize\", (i, w, h, _ref5) => {\n      let {\n        e,\n        node,\n        size,\n        handle\n      } = _ref5;\n      const {\n        oldResizeItem\n      } = this.state;\n      const {\n        layout\n      } = this.state;\n      const {\n        cols,\n        preventCollision,\n        allowOverlap\n      } = this.props;\n      let shouldMoveItem = false;\n      let finalLayout;\n      let x;\n      let y;\n      const [newLayout, l] = (0, _utils.withLayoutItem)(layout, i, l => {\n        let hasCollisions;\n        x = l.x;\n        y = l.y;\n        if ([\"sw\", \"w\", \"nw\", \"n\", \"ne\"].indexOf(handle) !== -1) {\n          if ([\"sw\", \"nw\", \"w\"].indexOf(handle) !== -1) {\n            x = l.x + (l.w - w);\n            w = l.x !== x && x < 0 ? l.w : w;\n            x = x < 0 ? 0 : x;\n          }\n          if ([\"ne\", \"n\", \"nw\"].indexOf(handle) !== -1) {\n            y = l.y + (l.h - h);\n            h = l.y !== y && y < 0 ? l.h : h;\n            y = y < 0 ? 0 : y;\n          }\n          shouldMoveItem = true;\n        }\n\n        // Something like quad tree should be used\n        // to find collisions faster\n        if (preventCollision && !allowOverlap) {\n          const collisions = (0, _utils.getAllCollisions)(layout, {\n            ...l,\n            w,\n            h,\n            x,\n            y\n          }).filter(layoutItem => layoutItem.i !== l.i);\n          hasCollisions = collisions.length > 0;\n\n          // If we're colliding, we need adjust the placeholder.\n          if (hasCollisions) {\n            // Reset layoutItem dimensions if there were collisions\n            y = l.y;\n            h = l.h;\n            x = l.x;\n            w = l.w;\n            shouldMoveItem = false;\n          }\n        }\n        l.w = w;\n        l.h = h;\n        return l;\n      });\n\n      // Shouldn't ever happen, but typechecking makes it necessary\n      if (!l) return;\n      finalLayout = newLayout;\n      if (shouldMoveItem) {\n        // Move the element to the new position.\n        const isUserAction = true;\n        finalLayout = (0, _utils.moveElement)(newLayout, l, x, y, isUserAction, this.props.preventCollision, (0, _utils.compactType)(this.props), cols, allowOverlap);\n      }\n\n      // Create placeholder element (display only)\n      const placeholder = {\n        w: l.w,\n        h: l.h,\n        x: l.x,\n        y: l.y,\n        static: true,\n        i: i\n      };\n      this.props.onResize(finalLayout, oldResizeItem, l, placeholder, e, node);\n\n      // Re-compact the newLayout and set the drag placeholder.\n      this.setState({\n        layout: allowOverlap ? finalLayout : (0, _utils.compact)(finalLayout, (0, _utils.compactType)(this.props), cols),\n        activeDrag: placeholder\n      });\n    });\n    _defineProperty(this, \"onResizeStop\", (i, w, h, _ref6) => {\n      let {\n        e,\n        node\n      } = _ref6;\n      const {\n        layout,\n        oldResizeItem\n      } = this.state;\n      const {\n        cols,\n        allowOverlap\n      } = this.props;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n\n      // Set state\n      const newLayout = allowOverlap ? layout : (0, _utils.compact)(layout, (0, _utils.compactType)(this.props), cols);\n      this.props.onResizeStop(newLayout, oldResizeItem, l, null, e, node);\n      const {\n        oldLayout\n      } = this.state;\n      this.setState({\n        activeDrag: null,\n        layout: newLayout,\n        oldResizeItem: null,\n        oldLayout: null,\n        resizing: false\n      });\n      this.onLayoutMaybeChanged(newLayout, oldLayout);\n    });\n    // Called while dragging an element. Part of browser native drag/drop API.\n    // Native event target might be the layout itself, or an element within the layout.\n    _defineProperty(this, \"onDragOver\", e => {\n      e.preventDefault(); // Prevent any browser native action\n      e.stopPropagation();\n\n      // we should ignore events from layout's children in Firefox\n      // to avoid unpredictable jumping of a dropping placeholder\n      // FIXME remove this hack\n      if (isFirefox &&\n      // $FlowIgnore can't figure this out\n      !e.nativeEvent.target?.classList.contains(layoutClassName)) {\n        return false;\n      }\n      const {\n        droppingItem,\n        onDropDragOver,\n        margin,\n        cols,\n        rowHeight,\n        maxRows,\n        width,\n        containerPadding,\n        transformScale\n      } = this.props;\n      // Allow user to customize the dropping item or short-circuit the drop based on the results\n      // of the `onDragOver(e: Event)` callback.\n      const onDragOverResult = onDropDragOver?.(e);\n      if (onDragOverResult === false) {\n        if (this.state.droppingDOMNode) {\n          this.removeDroppingPlaceholder();\n        }\n        return false;\n      }\n      const finalDroppingItem = {\n        ...droppingItem,\n        ...onDragOverResult\n      };\n      const {\n        layout\n      } = this.state;\n\n      // $FlowIgnore missing def\n      const gridRect = e.currentTarget.getBoundingClientRect(); // The grid's position in the viewport\n\n      // Calculate the mouse position relative to the grid\n      const layerX = e.clientX - gridRect.left;\n      const layerY = e.clientY - gridRect.top;\n      const droppingPosition = {\n        left: layerX / transformScale,\n        top: layerY / transformScale,\n        e\n      };\n      if (!this.state.droppingDOMNode) {\n        const positionParams /*: PositionParams*/ = {\n          cols,\n          margin,\n          maxRows,\n          rowHeight,\n          containerWidth: width,\n          containerPadding: containerPadding || margin\n        };\n        const calculatedPosition = (0, _calculateUtils.calcXY)(positionParams, layerY, layerX, finalDroppingItem.w, finalDroppingItem.h);\n        this.setState({\n          droppingDOMNode: /*#__PURE__*/React.createElement(\"div\", {\n            key: finalDroppingItem.i\n          }),\n          droppingPosition,\n          layout: [...layout, {\n            ...finalDroppingItem,\n            x: calculatedPosition.x,\n            y: calculatedPosition.y,\n            static: false,\n            isDraggable: true\n          }]\n        });\n      } else if (this.state.droppingPosition) {\n        const {\n          left,\n          top\n        } = this.state.droppingPosition;\n        const shouldUpdatePosition = left != layerX || top != layerY;\n        if (shouldUpdatePosition) {\n          this.setState({\n            droppingPosition\n          });\n        }\n      }\n    });\n    _defineProperty(this, \"removeDroppingPlaceholder\", () => {\n      const {\n        droppingItem,\n        cols\n      } = this.props;\n      const {\n        layout\n      } = this.state;\n      const newLayout = (0, _utils.compact)(layout.filter(l => l.i !== droppingItem.i), (0, _utils.compactType)(this.props), cols, this.props.allowOverlap);\n      this.setState({\n        layout: newLayout,\n        droppingDOMNode: null,\n        activeDrag: null,\n        droppingPosition: undefined\n      });\n    });\n    _defineProperty(this, \"onDragLeave\", e => {\n      e.preventDefault(); // Prevent any browser native action\n      e.stopPropagation();\n      this.dragEnterCounter--;\n\n      // onDragLeave can be triggered on each layout's child.\n      // But we know that count of dragEnter and dragLeave events\n      // will be balanced after leaving the layout's container\n      // so we can increase and decrease count of dragEnter and\n      // when it'll be equal to 0 we'll remove the placeholder\n      if (this.dragEnterCounter === 0) {\n        this.removeDroppingPlaceholder();\n      }\n    });\n    _defineProperty(this, \"onDragEnter\", e => {\n      e.preventDefault(); // Prevent any browser native action\n      e.stopPropagation();\n      this.dragEnterCounter++;\n    });\n    _defineProperty(this, \"onDrop\", (e /*: Event*/) => {\n      e.preventDefault(); // Prevent any browser native action\n      e.stopPropagation();\n      const {\n        droppingItem\n      } = this.props;\n      const {\n        layout\n      } = this.state;\n      const item = layout.find(l => l.i === droppingItem.i);\n\n      // reset dragEnter counter on drop\n      this.dragEnterCounter = 0;\n      this.removeDroppingPlaceholder();\n      this.props.onDrop(layout, item, e);\n    });\n  }\n  componentDidMount() {\n    this.setState({\n      mounted: true\n    });\n    // Possibly call back with layout on mount. This should be done after correcting the layout width\n    // to ensure we don't rerender with the wrong width.\n    this.onLayoutMaybeChanged(this.state.layout, this.props.layout);\n  }\n  static getDerivedStateFromProps(nextProps /*: Props*/, prevState /*: State*/) /*: $Shape<State> | null*/{\n    let newLayoutBase;\n    if (prevState.activeDrag) {\n      return null;\n    }\n\n    // Legacy support for compactType\n    // Allow parent to set layout directly.\n    if (!(0, _fastEquals.deepEqual)(nextProps.layout, prevState.propsLayout) || nextProps.compactType !== prevState.compactType) {\n      newLayoutBase = nextProps.layout;\n    } else if (!(0, _utils.childrenEqual)(nextProps.children, prevState.children)) {\n      // If children change, also regenerate the layout. Use our state\n      // as the base in case because it may be more up to date than\n      // what is in props.\n      newLayoutBase = prevState.layout;\n    }\n\n    // We need to regenerate the layout.\n    if (newLayoutBase) {\n      const newLayout = (0, _utils.synchronizeLayoutWithChildren)(newLayoutBase, nextProps.children, nextProps.cols, (0, _utils.compactType)(nextProps), nextProps.allowOverlap);\n      return {\n        layout: newLayout,\n        // We need to save these props to state for using\n        // getDerivedStateFromProps instead of componentDidMount (in which we would get extra rerender)\n        compactType: nextProps.compactType,\n        children: nextProps.children,\n        propsLayout: nextProps.layout\n      };\n    }\n    return null;\n  }\n  shouldComponentUpdate(nextProps /*: Props*/, nextState /*: State*/) /*: boolean*/{\n    return (\n      // NOTE: this is almost always unequal. Therefore the only way to get better performance\n      // from SCU is if the user intentionally memoizes children. If they do, and they can\n      // handle changes properly, performance will increase.\n      this.props.children !== nextProps.children || !(0, _utils.fastRGLPropsEqual)(this.props, nextProps, _fastEquals.deepEqual) || this.state.activeDrag !== nextState.activeDrag || this.state.mounted !== nextState.mounted || this.state.droppingPosition !== nextState.droppingPosition\n    );\n  }\n  componentDidUpdate(prevProps /*: Props*/, prevState /*: State*/) {\n    if (!this.state.activeDrag) {\n      const newLayout = this.state.layout;\n      const oldLayout = prevState.layout;\n      this.onLayoutMaybeChanged(newLayout, oldLayout);\n    }\n  }\n\n  /**\n   * Calculates a pixel value for the container.\n   * @return {String} Container height in pixels.\n   */\n  containerHeight() /*: ?string*/{\n    if (!this.props.autoSize) return;\n    const nbRow = (0, _utils.bottom)(this.state.layout);\n    const containerPaddingY = this.props.containerPadding ? this.props.containerPadding[1] : this.props.margin[1];\n    return nbRow * this.props.rowHeight + (nbRow - 1) * this.props.margin[1] + containerPaddingY * 2 + \"px\";\n  }\n  onLayoutMaybeChanged(newLayout /*: Layout*/, oldLayout /*: ?Layout*/) {\n    if (!oldLayout) oldLayout = this.state.layout;\n    if (!(0, _fastEquals.deepEqual)(oldLayout, newLayout)) {\n      this.props.onLayoutChange(newLayout);\n    }\n  }\n  /**\n   * Create a placeholder object.\n   * @return {Element} Placeholder div.\n   */\n  placeholder() /*: ?ReactElement<any>*/{\n    const {\n      activeDrag\n    } = this.state;\n    if (!activeDrag) return null;\n    const {\n      width,\n      cols,\n      margin,\n      containerPadding,\n      rowHeight,\n      maxRows,\n      useCSSTransforms,\n      transformScale\n    } = this.props;\n\n    // {...this.state.activeDrag} is pretty slow, actually\n    return /*#__PURE__*/React.createElement(_GridItem.default, {\n      w: activeDrag.w,\n      h: activeDrag.h,\n      x: activeDrag.x,\n      y: activeDrag.y,\n      i: activeDrag.i,\n      className: `react-grid-placeholder ${this.state.resizing ? \"placeholder-resizing\" : \"\"}`,\n      containerWidth: width,\n      cols: cols,\n      margin: margin,\n      containerPadding: containerPadding || margin,\n      maxRows: maxRows,\n      rowHeight: rowHeight,\n      isDraggable: false,\n      isResizable: false,\n      isBounded: false,\n      useCSSTransforms: useCSSTransforms,\n      transformScale: transformScale\n    }, /*#__PURE__*/React.createElement(\"div\", null));\n  }\n\n  /**\n   * Given a grid item, set its style attributes & surround in a <Draggable>.\n   * @param  {Element} child React element.\n   * @return {Element}       Element wrapped in draggable and properly placed.\n   */\n  processGridItem(child /*: ReactElement<any>*/, isDroppingItem /*: boolean*/) /*: ?ReactElement<any>*/{\n    if (!child || !child.key) return;\n    const l = (0, _utils.getLayoutItem)(this.state.layout, String(child.key));\n    if (!l) return null;\n    const {\n      width,\n      cols,\n      margin,\n      containerPadding,\n      rowHeight,\n      maxRows,\n      isDraggable,\n      isResizable,\n      isBounded,\n      useCSSTransforms,\n      transformScale,\n      draggableCancel,\n      draggableHandle,\n      resizeHandles,\n      resizeHandle\n    } = this.props;\n    const {\n      mounted,\n      droppingPosition\n    } = this.state;\n\n    // Determine user manipulations possible.\n    // If an item is static, it can't be manipulated by default.\n    // Any properties defined directly on the grid item will take precedence.\n    const draggable = typeof l.isDraggable === \"boolean\" ? l.isDraggable : !l.static && isDraggable;\n    const resizable = typeof l.isResizable === \"boolean\" ? l.isResizable : !l.static && isResizable;\n    const resizeHandlesOptions = l.resizeHandles || resizeHandles;\n\n    // isBounded set on child if set on parent, and child is not explicitly false\n    const bounded = draggable && isBounded && l.isBounded !== false;\n    return /*#__PURE__*/React.createElement(_GridItem.default, {\n      containerWidth: width,\n      cols: cols,\n      margin: margin,\n      containerPadding: containerPadding || margin,\n      maxRows: maxRows,\n      rowHeight: rowHeight,\n      cancel: draggableCancel,\n      handle: draggableHandle,\n      onDragStop: this.onDragStop,\n      onDragStart: this.onDragStart,\n      onDrag: this.onDrag,\n      onResizeStart: this.onResizeStart,\n      onResize: this.onResize,\n      onResizeStop: this.onResizeStop,\n      isDraggable: draggable,\n      isResizable: resizable,\n      isBounded: bounded,\n      useCSSTransforms: useCSSTransforms && mounted,\n      usePercentages: !mounted,\n      transformScale: transformScale,\n      w: l.w,\n      h: l.h,\n      x: l.x,\n      y: l.y,\n      i: l.i,\n      minH: l.minH,\n      minW: l.minW,\n      maxH: l.maxH,\n      maxW: l.maxW,\n      static: l.static,\n      droppingPosition: isDroppingItem ? droppingPosition : undefined,\n      resizeHandles: resizeHandlesOptions,\n      resizeHandle: resizeHandle\n    }, child);\n  }\n  render() /*: React.Element<\"div\">*/{\n    const {\n      className,\n      style,\n      isDroppable,\n      innerRef\n    } = this.props;\n    const mergedClassName = (0, _clsx.default)(layoutClassName, className);\n    const mergedStyle = {\n      height: this.containerHeight(),\n      ...style\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: innerRef,\n      className: mergedClassName,\n      style: mergedStyle,\n      onDrop: isDroppable ? this.onDrop : _utils.noop,\n      onDragLeave: isDroppable ? this.onDragLeave : _utils.noop,\n      onDragEnter: isDroppable ? this.onDragEnter : _utils.noop,\n      onDragOver: isDroppable ? this.onDragOver : _utils.noop\n    }, React.Children.map(this.props.children, child => this.processGridItem(child)), isDroppable && this.state.droppingDOMNode && this.processGridItem(this.state.droppingDOMNode, true), this.placeholder());\n  }\n}\nexports.default = ReactGridLayout;\n// TODO publish internal ReactClass displayName transform\n_defineProperty(ReactGridLayout, \"displayName\", \"ReactGridLayout\");\n// Refactored to another module to make way for preval\n_defineProperty(ReactGridLayout, \"propTypes\", _ReactGridLayoutPropTypes.default);\n_defineProperty(ReactGridLayout, \"defaultProps\", {\n  autoSize: true,\n  cols: 12,\n  className: \"\",\n  style: {},\n  draggableHandle: \"\",\n  draggableCancel: \"\",\n  containerPadding: null,\n  rowHeight: 150,\n  maxRows: Infinity,\n  // infinite vertical growth\n  layout: [],\n  margin: [10, 10],\n  isBounded: false,\n  isDraggable: true,\n  isResizable: true,\n  allowOverlap: false,\n  isDroppable: false,\n  useCSSTransforms: true,\n  transformScale: 1,\n  verticalCompact: true,\n  compactType: \"vertical\",\n  preventCollision: false,\n  droppingItem: {\n    i: \"__dropping-elem__\",\n    h: 1,\n    w: 1\n  },\n  resizeHandles: [\"se\"],\n  onLayoutChange: _utils.noop,\n  onDragStart: _utils.noop,\n  onDrag: _utils.noop,\n  onDragStop: _utils.noop,\n  onResizeStart: _utils.noop,\n  onResize: _utils.noop,\n  onResizeStop: _utils.noop,\n  onDrop: _utils.noop,\n  onDropDragOver: _utils.noop\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactDom = require(\"react-dom\");\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _reactDraggable = require(\"react-draggable\");\nvar _reactResizable = require(\"react-resizable\");\nvar _utils = require(\"./utils\");\nvar _calculateUtils = require(\"./calculateUtils\");\nvar _ReactGridLayoutPropTypes = require(\"./ReactGridLayoutPropTypes\");\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*:: import type { Element as ReactElement, Node as ReactNode } from \"react\";*/\n/*:: import type {\n  ReactDraggableCallbackData,\n  GridDragEvent,\n  GridResizeEvent,\n  DroppingPosition,\n  Position,\n  ResizeHandleAxis\n} from \"./utils\";*/\n/*:: import type { PositionParams } from \"./calculateUtils\";*/\n/*:: import type { ResizeHandle, ReactRef } from \"./ReactGridLayoutPropTypes\";*/\n/*:: type PartialPosition = { top: number, left: number };*/\n/*:: type GridItemCallback<Data: GridDragEvent | GridResizeEvent> = (\n  i: string,\n  w: number,\n  h: number,\n  Data\n) => void;*/\n/*:: type ResizeCallbackData = {\n  node: HTMLElement,\n  size: Position,\n  handle: ResizeHandleAxis\n};*/\n/*:: type GridItemResizeCallback = (\n  e: Event,\n  data: ResizeCallbackData,\n  position: Position\n) => void;*/\n/*:: type State = {\n  resizing: ?{ top: number, left: number, width: number, height: number },\n  dragging: ?{ top: number, left: number },\n  className: string\n};*/\n/*:: type Props = {\n  children: ReactElement<any>,\n  cols: number,\n  containerWidth: number,\n  margin: [number, number],\n  containerPadding: [number, number],\n  rowHeight: number,\n  maxRows: number,\n  isDraggable: boolean,\n  isResizable: boolean,\n  isBounded: boolean,\n  static?: boolean,\n  useCSSTransforms?: boolean,\n  usePercentages?: boolean,\n  transformScale: number,\n  droppingPosition?: DroppingPosition,\n\n  className: string,\n  style?: Object,\n  // Draggability\n  cancel: string,\n  handle: string,\n\n  x: number,\n  y: number,\n  w: number,\n  h: number,\n\n  minW: number,\n  maxW: number,\n  minH: number,\n  maxH: number,\n  i: string,\n\n  resizeHandles?: ResizeHandleAxis[],\n  resizeHandle?: ResizeHandle,\n\n  onDrag?: GridItemCallback<GridDragEvent>,\n  onDragStart?: GridItemCallback<GridDragEvent>,\n  onDragStop?: GridItemCallback<GridDragEvent>,\n  onResize?: GridItemCallback<GridResizeEvent>,\n  onResizeStart?: GridItemCallback<GridResizeEvent>,\n  onResizeStop?: GridItemCallback<GridResizeEvent>\n};*/\n/*:: type DefaultProps = {\n  className: string,\n  cancel: string,\n  handle: string,\n  minH: number,\n  minW: number,\n  maxH: number,\n  maxW: number,\n  transformScale: number\n};*/\n/**\n * An individual item within a ReactGridLayout.\n */\nclass GridItem extends _react.default.Component /*:: <Props, State>*/{\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", {\n      resizing: null,\n      dragging: null,\n      className: \"\"\n    });\n    _defineProperty(this, \"elementRef\", /*#__PURE__*/_react.default.createRef());\n    /**\n     * onDragStart event handler\n     * @param  {Event}  e             event data\n     * @param  {Object} callbackData  an object with node, delta and position information\n     */\n    _defineProperty(this, \"onDragStart\", (e, _ref) => {\n      let {\n        node\n      } = _ref;\n      const {\n        onDragStart,\n        transformScale\n      } = this.props;\n      if (!onDragStart) return;\n      const newPosition /*: PartialPosition*/ = {\n        top: 0,\n        left: 0\n      };\n\n      // TODO: this wont work on nested parents\n      const {\n        offsetParent\n      } = node;\n      if (!offsetParent) return;\n      const parentRect = offsetParent.getBoundingClientRect();\n      const clientRect = node.getBoundingClientRect();\n      const cLeft = clientRect.left / transformScale;\n      const pLeft = parentRect.left / transformScale;\n      const cTop = clientRect.top / transformScale;\n      const pTop = parentRect.top / transformScale;\n      newPosition.left = cLeft - pLeft + offsetParent.scrollLeft;\n      newPosition.top = cTop - pTop + offsetParent.scrollTop;\n      this.setState({\n        dragging: newPosition\n      });\n\n      // Call callback with this data\n      const {\n        x,\n        y\n      } = (0, _calculateUtils.calcXY)(this.getPositionParams(), newPosition.top, newPosition.left, this.props.w, this.props.h);\n      return onDragStart.call(this, this.props.i, x, y, {\n        e,\n        node,\n        newPosition\n      });\n    });\n    /**\n     * onDrag event handler\n     * @param  {Event}  e             event data\n     * @param  {Object} callbackData  an object with node, delta and position information\n     * @param  {boolean} dontFlush    if true, will not call flushSync\n     */\n    _defineProperty(this, \"onDrag\", (e, _ref2, dontFlush) => {\n      let {\n        node,\n        deltaX,\n        deltaY\n      } = _ref2;\n      const {\n        onDrag\n      } = this.props;\n      if (!onDrag) return;\n      if (!this.state.dragging) {\n        throw new Error(\"onDrag called before onDragStart.\");\n      }\n      let top = this.state.dragging.top + deltaY;\n      let left = this.state.dragging.left + deltaX;\n      const {\n        isBounded,\n        i,\n        w,\n        h,\n        containerWidth\n      } = this.props;\n      const positionParams = this.getPositionParams();\n\n      // Boundary calculations; keeps items within the grid\n      if (isBounded) {\n        const {\n          offsetParent\n        } = node;\n        if (offsetParent) {\n          const {\n            margin,\n            rowHeight,\n            containerPadding\n          } = this.props;\n          const bottomBoundary = offsetParent.clientHeight - (0, _calculateUtils.calcGridItemWHPx)(h, rowHeight, margin[1]);\n          top = (0, _calculateUtils.clamp)(top - containerPadding[1], 0, bottomBoundary);\n          const colWidth = (0, _calculateUtils.calcGridColWidth)(positionParams);\n          const rightBoundary = containerWidth - (0, _calculateUtils.calcGridItemWHPx)(w, colWidth, margin[0]);\n          left = (0, _calculateUtils.clamp)(left - containerPadding[0], 0, rightBoundary);\n        }\n      }\n      const newPosition /*: PartialPosition*/ = {\n        top,\n        left\n      };\n\n      // dontFlush is set if we're calling from inside\n      if (dontFlush) {\n        this.setState({\n          dragging: newPosition\n        });\n      } else {\n        (0, _reactDom.flushSync)(() => {\n          this.setState({\n            dragging: newPosition\n          });\n        });\n      }\n\n      // Call callback with this data\n      const {\n        x,\n        y\n      } = (0, _calculateUtils.calcXY)(positionParams, top, left, w, h);\n      return onDrag.call(this, i, x, y, {\n        e,\n        node,\n        newPosition\n      });\n    });\n    /**\n     * onDragStop event handler\n     * @param  {Event}  e             event data\n     * @param  {Object} callbackData  an object with node, delta and position information\n     */\n    _defineProperty(this, \"onDragStop\", (e, _ref3) => {\n      let {\n        node\n      } = _ref3;\n      const {\n        onDragStop\n      } = this.props;\n      if (!onDragStop) return;\n      if (!this.state.dragging) {\n        throw new Error(\"onDragEnd called before onDragStart.\");\n      }\n      const {\n        w,\n        h,\n        i\n      } = this.props;\n      const {\n        left,\n        top\n      } = this.state.dragging;\n      const newPosition /*: PartialPosition*/ = {\n        top,\n        left\n      };\n      this.setState({\n        dragging: null\n      });\n      const {\n        x,\n        y\n      } = (0, _calculateUtils.calcXY)(this.getPositionParams(), top, left, w, h);\n      return onDragStop.call(this, i, x, y, {\n        e,\n        node,\n        newPosition\n      });\n    });\n    /**\n     * onResizeStop event handler\n     * @param  {Event}  e             event data\n     * @param  {Object} callbackData  an object with node and size information\n     */\n    _defineProperty(this, \"onResizeStop\", (e, callbackData, position) => this.onResizeHandler(e, callbackData, position, \"onResizeStop\"));\n    // onResizeStart event handler\n    _defineProperty(this, \"onResizeStart\", (e, callbackData, position) => this.onResizeHandler(e, callbackData, position, \"onResizeStart\"));\n    // onResize event handler\n    _defineProperty(this, \"onResize\", (e, callbackData, position) => this.onResizeHandler(e, callbackData, position, \"onResize\"));\n  }\n  shouldComponentUpdate(nextProps /*: Props*/, nextState /*: State*/) /*: boolean*/{\n    // We can't deeply compare children. If the developer memoizes them, we can\n    // use this optimization.\n    if (this.props.children !== nextProps.children) return true;\n    if (this.props.droppingPosition !== nextProps.droppingPosition) return true;\n    // TODO memoize these calculations so they don't take so long?\n    const oldPosition = (0, _calculateUtils.calcGridItemPosition)(this.getPositionParams(this.props), this.props.x, this.props.y, this.props.w, this.props.h, this.state);\n    const newPosition = (0, _calculateUtils.calcGridItemPosition)(this.getPositionParams(nextProps), nextProps.x, nextProps.y, nextProps.w, nextProps.h, nextState);\n    return !(0, _utils.fastPositionEqual)(oldPosition, newPosition) || this.props.useCSSTransforms !== nextProps.useCSSTransforms;\n  }\n  componentDidMount() {\n    this.moveDroppingItem({});\n  }\n  componentDidUpdate(prevProps /*: Props*/) {\n    this.moveDroppingItem(prevProps);\n  }\n\n  // When a droppingPosition is present, this means we should fire a move event, as if we had moved\n  // this element by `x, y` pixels.\n  moveDroppingItem(prevProps /*: Props*/) {\n    const {\n      droppingPosition\n    } = this.props;\n    if (!droppingPosition) return;\n    const node = this.elementRef.current;\n    // Can't find DOM node (are we unmounted?)\n    if (!node) return;\n    const prevDroppingPosition = prevProps.droppingPosition || {\n      left: 0,\n      top: 0\n    };\n    const {\n      dragging\n    } = this.state;\n    const shouldDrag = dragging && droppingPosition.left !== prevDroppingPosition.left || droppingPosition.top !== prevDroppingPosition.top;\n    if (!dragging) {\n      this.onDragStart(droppingPosition.e, {\n        node,\n        deltaX: droppingPosition.left,\n        deltaY: droppingPosition.top\n      });\n    } else if (shouldDrag) {\n      const deltaX = droppingPosition.left - dragging.left;\n      const deltaY = droppingPosition.top - dragging.top;\n      this.onDrag(droppingPosition.e, {\n        node,\n        deltaX,\n        deltaY\n      }, true // dontFLush: avoid flushSync to temper warnings\n      );\n    }\n  }\n\n  getPositionParams() /*: PositionParams*/{\n    let props /*: Props*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n    return {\n      cols: props.cols,\n      containerPadding: props.containerPadding,\n      containerWidth: props.containerWidth,\n      margin: props.margin,\n      maxRows: props.maxRows,\n      rowHeight: props.rowHeight\n    };\n  }\n\n  /**\n   * This is where we set the grid item's absolute placement. It gets a little tricky because we want to do it\n   * well when server rendering, and the only way to do that properly is to use percentage width/left because\n   * we don't know exactly what the browser viewport is.\n   * Unfortunately, CSS Transforms, which are great for performance, break in this instance because a percentage\n   * left is relative to the item itself, not its container! So we cannot use them on the server rendering pass.\n   *\n   * @param  {Object} pos Position object with width, height, left, top.\n   * @return {Object}     Style object.\n   */\n  createStyle(pos /*: Position*/) /*: { [key: string]: ?string }*/{\n    const {\n      usePercentages,\n      containerWidth,\n      useCSSTransforms\n    } = this.props;\n    let style;\n    // CSS Transforms support (default)\n    if (useCSSTransforms) {\n      style = (0, _utils.setTransform)(pos);\n    } else {\n      // top,left (slow)\n      style = (0, _utils.setTopLeft)(pos);\n\n      // This is used for server rendering.\n      if (usePercentages) {\n        style.left = (0, _utils.perc)(pos.left / containerWidth);\n        style.width = (0, _utils.perc)(pos.width / containerWidth);\n      }\n    }\n    return style;\n  }\n\n  /**\n   * Mix a Draggable instance into a child.\n   * @param  {Element} child    Child element.\n   * @return {Element}          Child wrapped in Draggable.\n   */\n  mixinDraggable(child /*: ReactElement<any>*/, isDraggable /*: boolean*/) /*: ReactElement<any>*/{\n    return /*#__PURE__*/_react.default.createElement(_reactDraggable.DraggableCore, {\n      disabled: !isDraggable,\n      onStart: this.onDragStart,\n      onDrag: this.onDrag,\n      onStop: this.onDragStop,\n      handle: this.props.handle,\n      cancel: \".react-resizable-handle\" + (this.props.cancel ? \",\" + this.props.cancel : \"\"),\n      scale: this.props.transformScale,\n      nodeRef: this.elementRef\n    }, child);\n  }\n\n  /**\n   * Utility function to setup callback handler definitions for\n   * similarily structured resize events.\n   */\n  curryResizeHandler(position /*: Position*/, handler /*: Function*/) /*: Function*/{\n    return (e /*: Event*/, data /*: ResizeCallbackData*/) => /*: Function*/handler(e, data, position);\n  }\n\n  /**\n   * Mix a Resizable instance into a child.\n   * @param  {Element} child    Child element.\n   * @param  {Object} position  Position object (pixel values)\n   * @return {Element}          Child wrapped in Resizable.\n   */\n  mixinResizable(child /*: ReactElement<any>*/, position /*: Position*/, isResizable /*: boolean*/) /*: ReactElement<any>*/{\n    const {\n      cols,\n      minW,\n      minH,\n      maxW,\n      maxH,\n      transformScale,\n      resizeHandles,\n      resizeHandle\n    } = this.props;\n    const positionParams = this.getPositionParams();\n\n    // This is the max possible width - doesn't go to infinity because of the width of the window\n    const maxWidth = (0, _calculateUtils.calcGridItemPosition)(positionParams, 0, 0, cols, 0).width;\n\n    // Calculate min/max constraints using our min & maxes\n    const mins = (0, _calculateUtils.calcGridItemPosition)(positionParams, 0, 0, minW, minH);\n    const maxes = (0, _calculateUtils.calcGridItemPosition)(positionParams, 0, 0, maxW, maxH);\n    const minConstraints = [mins.width, mins.height];\n    const maxConstraints = [Math.min(maxes.width, maxWidth), Math.min(maxes.height, Infinity)];\n    return /*#__PURE__*/_react.default.createElement(_reactResizable.Resizable\n    // These are opts for the resize handle itself\n    , {\n      draggableOpts: {\n        disabled: !isResizable\n      },\n      className: isResizable ? undefined : \"react-resizable-hide\",\n      width: position.width,\n      height: position.height,\n      minConstraints: minConstraints,\n      maxConstraints: maxConstraints,\n      onResizeStop: this.curryResizeHandler(position, this.onResizeStop),\n      onResizeStart: this.curryResizeHandler(position, this.onResizeStart),\n      onResize: this.curryResizeHandler(position, this.onResize),\n      transformScale: transformScale,\n      resizeHandles: resizeHandles,\n      handle: resizeHandle\n    }, child);\n  }\n  /**\n   * Wrapper around resize events to provide more useful data.\n   */\n  onResizeHandler(e /*: Event*/, _ref4 /*:: */,\n  // 'size' is updated position\n  position /*: Position*/,\n  // existing position\n  handlerName /*: string*/) /*: void*/{\n    let {\n      node,\n      size,\n      handle\n    } /*: ResizeCallbackData*/ = _ref4 /*: ResizeCallbackData*/;\n    const handler = this.props[handlerName];\n    if (!handler) return;\n    const {\n      x,\n      y,\n      i,\n      maxH,\n      minH,\n      containerWidth\n    } = this.props;\n    const {\n      minW,\n      maxW\n    } = this.props;\n\n    // Clamping of dimensions based on resize direction\n    let updatedSize = size;\n    if (node) {\n      updatedSize = (0, _utils.resizeItemInDirection)(handle, position, size, containerWidth);\n      (0, _reactDom.flushSync)(() => {\n        this.setState({\n          resizing: handlerName === \"onResizeStop\" ? null : updatedSize\n        });\n      });\n    }\n\n    // Get new XY based on pixel size\n    let {\n      w,\n      h\n    } = (0, _calculateUtils.calcWH)(this.getPositionParams(), updatedSize.width, updatedSize.height, x, y, handle);\n\n    // Min/max capping.\n    // minW should be at least 1 (TODO propTypes validation?)\n    w = (0, _calculateUtils.clamp)(w, Math.max(minW, 1), maxW);\n    h = (0, _calculateUtils.clamp)(h, minH, maxH);\n    handler.call(this, i, w, h, {\n      e,\n      node,\n      size: updatedSize,\n      handle\n    });\n  }\n  render() /*: ReactNode*/{\n    const {\n      x,\n      y,\n      w,\n      h,\n      isDraggable,\n      isResizable,\n      droppingPosition,\n      useCSSTransforms\n    } = this.props;\n    const pos = (0, _calculateUtils.calcGridItemPosition)(this.getPositionParams(), x, y, w, h, this.state);\n    const child = _react.default.Children.only(this.props.children);\n\n    // Create the child element. We clone the existing element but modify its className and style.\n    let newChild = /*#__PURE__*/_react.default.cloneElement(child, {\n      ref: this.elementRef,\n      className: (0, _clsx.default)(\"react-grid-item\", child.props.className, this.props.className, {\n        static: this.props.static,\n        resizing: Boolean(this.state.resizing),\n        \"react-draggable\": isDraggable,\n        \"react-draggable-dragging\": Boolean(this.state.dragging),\n        dropping: Boolean(droppingPosition),\n        cssTransforms: useCSSTransforms\n      }),\n      // We can set the width and height on the child, but unfortunately we can't set the position.\n      style: {\n        ...this.props.style,\n        ...child.props.style,\n        ...this.createStyle(pos)\n      }\n    });\n\n    // Resizable support. This is usually on but the user can toggle it off.\n    newChild = this.mixinResizable(newChild, pos, isResizable);\n\n    // Draggable support. This is always on, except for with placeholders.\n    newChild = this.mixinDraggable(newChild, isDraggable);\n    return newChild;\n  }\n}\nexports.default = GridItem;\n_defineProperty(GridItem, \"propTypes\", {\n  // Children must be only a single element\n  children: _propTypes.default.element,\n  // General grid attributes\n  cols: _propTypes.default.number.isRequired,\n  containerWidth: _propTypes.default.number.isRequired,\n  rowHeight: _propTypes.default.number.isRequired,\n  margin: _propTypes.default.array.isRequired,\n  maxRows: _propTypes.default.number.isRequired,\n  containerPadding: _propTypes.default.array.isRequired,\n  // These are all in grid units\n  x: _propTypes.default.number.isRequired,\n  y: _propTypes.default.number.isRequired,\n  w: _propTypes.default.number.isRequired,\n  h: _propTypes.default.number.isRequired,\n  // All optional\n  minW: function (props /*: Props*/, propName /*: string*/) {\n    const value = props[propName];\n    if (typeof value !== \"number\") return new Error(\"minWidth not Number\");\n    if (value > props.w || value > props.maxW) return new Error(\"minWidth larger than item width/maxWidth\");\n  },\n  maxW: function (props /*: Props*/, propName /*: string*/) {\n    const value = props[propName];\n    if (typeof value !== \"number\") return new Error(\"maxWidth not Number\");\n    if (value < props.w || value < props.minW) return new Error(\"maxWidth smaller than item width/minWidth\");\n  },\n  minH: function (props /*: Props*/, propName /*: string*/) {\n    const value = props[propName];\n    if (typeof value !== \"number\") return new Error(\"minHeight not Number\");\n    if (value > props.h || value > props.maxH) return new Error(\"minHeight larger than item height/maxHeight\");\n  },\n  maxH: function (props /*: Props*/, propName /*: string*/) {\n    const value = props[propName];\n    if (typeof value !== \"number\") return new Error(\"maxHeight not Number\");\n    if (value < props.h || value < props.minH) return new Error(\"maxHeight smaller than item height/minHeight\");\n  },\n  // ID is nice to have for callbacks\n  i: _propTypes.default.string.isRequired,\n  // Resize handle options\n  resizeHandles: _ReactGridLayoutPropTypes.resizeHandleAxesType,\n  resizeHandle: _ReactGridLayoutPropTypes.resizeHandleType,\n  // Functions\n  onDragStop: _propTypes.default.func,\n  onDragStart: _propTypes.default.func,\n  onDrag: _propTypes.default.func,\n  onResizeStop: _propTypes.default.func,\n  onResizeStart: _propTypes.default.func,\n  onResize: _propTypes.default.func,\n  // Flags\n  isDraggable: _propTypes.default.bool.isRequired,\n  isResizable: _propTypes.default.bool.isRequired,\n  isBounded: _propTypes.default.bool.isRequired,\n  static: _propTypes.default.bool,\n  // Use CSS transforms instead of top/left\n  useCSSTransforms: _propTypes.default.bool.isRequired,\n  transformScale: _propTypes.default.number,\n  // Others\n  className: _propTypes.default.string,\n  // Selector for draggable handle\n  handle: _propTypes.default.string,\n  // Selector for draggable cancel (see react-draggable)\n  cancel: _propTypes.default.string,\n  // Current position of a dropping element\n  droppingPosition: _propTypes.default.shape({\n    e: _propTypes.default.object.isRequired,\n    left: _propTypes.default.number.isRequired,\n    top: _propTypes.default.number.isRequired\n  })\n});\n_defineProperty(GridItem, \"defaultProps\", {\n  className: \"\",\n  cancel: \"\",\n  handle: \"\",\n  minH: 1,\n  minW: 1,\n  maxH: Infinity,\n  maxW: Infinity,\n  transformScale: 1\n});","module.exports = require(\"./build/ReactGridLayout\").default;\nmodule.exports.utils = require(\"./build/utils\");\nmodule.exports.calculateUtils = require(\"./build/calculateUtils\");\nmodule.exports.Responsive =\n  require(\"./build/ResponsiveReactGridLayout\").default;\nmodule.exports.Responsive.utils = require(\"./build/responsiveUtils\");\nmodule.exports.WidthProvider =\n  require(\"./build/components/WidthProvider\").default;\n","import React, { useMemo } from 'react';\nimport { Responsive } from 'react-grid-layout';\nimport { ErrorBoundary } from '@backstage/core-components';\nimport { makeStyles } from 'tss-react/mui';\nimport 'react-grid-layout/css/styles.css';\nimport useMeasure from 'react-use/lib/useMeasure';\n\nconst gridGap = 16;\nconst defaultProps = {\n  // Aligned with the 1.0-1.2 home page gap.\n  margin: [gridGap, gridGap],\n  // Same as in home-plugin CustomHomepageGrid\n  rowHeight: 60,\n  // We use always a 12-column grid, but each cards can define\n  // their number of columns (width) and start column (x) per breakpoint.\n  breakpoints: {\n    xl: 1600,\n    lg: 1200,\n    md: 996,\n    sm: 768,\n    xs: 480,\n    xxs: 0\n  },\n  cols: {\n    xl: 12,\n    lg: 12,\n    md: 12,\n    sm: 12,\n    xs: 12,\n    xxs: 12\n  },\n  isDraggable: false,\n  isResizable: false,\n  compactType: null\n};\nconst useStyles = makeStyles()({\n  // Make card content scrollable (so that cards don't overlap)\n  cardWrapper: {\n    '& > div[class*=\"MuiCard-root\"]': {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    '& div[class*=\"MuiCardContent-root\"]': {\n      overflow: \"auto\"\n    }\n  }\n});\nconst ReadOnlyGrid = (props) => {\n  const { classes } = useStyles();\n  const [measureRef, measureRect] = useMeasure();\n  const cards = useMemo(() => {\n    return props.mountPoints.map((mountPoint, index) => {\n      const id = (index + 1).toString();\n      const layouts2 = {};\n      if (mountPoint.config?.layouts) {\n        for (const [breakpoint, layout] of Object.entries(\n          mountPoint.config.layouts\n        )) {\n          layouts2[breakpoint] = {\n            i: id,\n            x: layout.x ?? 0,\n            y: layout.y ?? 0,\n            w: layout.w ?? 12,\n            h: layout.h ?? 4,\n            isDraggable: false,\n            isResizable: false\n          };\n        }\n      } else {\n        [\"xl\", \"lg\", \"md\", \"sm\", \"xs\", \"xxs\"].forEach((breakpoint) => {\n          layouts2[breakpoint] = {\n            i: id,\n            x: 0,\n            y: 0,\n            w: 12,\n            h: 4,\n            isDraggable: false,\n            isResizable: false\n          };\n        });\n      }\n      return {\n        id,\n        Component: mountPoint.Component,\n        props: mountPoint.config?.props,\n        layouts: layouts2\n      };\n    });\n  }, [props.mountPoints]);\n  const layouts = useMemo(() => {\n    const result = {};\n    for (const card of cards) {\n      for (const [breakpoint, layoutPerBreakpoint] of Object.entries(\n        card.layouts\n      )) {\n        if (!result[breakpoint]) {\n          result[breakpoint] = [];\n        }\n        result[breakpoint].push(layoutPerBreakpoint);\n      }\n    }\n    return result;\n  }, [cards]);\n  const children = useMemo(() => {\n    return cards.map((card) => /* @__PURE__ */ React.createElement(\n      \"div\",\n      {\n        key: card.id,\n        \"data-cardid\": card.id,\n        \"data-testid\": `home-page card ${card.id}`,\n        \"data-layout\": JSON.stringify(card.layouts),\n        className: classes.cardWrapper\n      },\n      /* @__PURE__ */ React.createElement(ErrorBoundary, null, /* @__PURE__ */ React.createElement(card.Component, { ...card.props }))\n    ));\n  }, [cards, classes.cardWrapper]);\n  return /* @__PURE__ */ React.createElement(\"div\", { style: { margin: -16 } }, /* @__PURE__ */ React.createElement(\"div\", { ref: measureRef }), measureRect.width ? /* @__PURE__ */ React.createElement(\n    Responsive,\n    {\n      ...defaultProps,\n      width: measureRect.width,\n      layouts\n    },\n    children\n  ) : null);\n};\n\nexport { ReadOnlyGrid };\n//# sourceMappingURL=ReadOnlyGrid.esm.js.map\n","import React, { useMemo } from 'react';\nimport { Page, Content, EmptyState } from '@backstage/core-components';\nimport { Header } from './Header.esm.js';\nimport { ReadOnlyGrid } from './ReadOnlyGrid.esm.js';\n\nconst HomePage = (props) => {\n  const filteredAndSortedHomePageCards = useMemo(() => {\n    if (!props.cards) {\n      return [];\n    }\n    const filteredAndSorted = props.cards.filter(\n      (card) => card.enabled !== false && (!card.config?.priority || card.config.priority >= 0)\n    );\n    filteredAndSorted.sort(\n      (a, b) => (b.config?.priority ?? 0) - (a.config?.priority ?? 0)\n    );\n    return filteredAndSorted;\n  }, [props.cards]);\n  return /* @__PURE__ */ React.createElement(Page, { themeId: \"home\" }, /* @__PURE__ */ React.createElement(Header, { ...props }), /* @__PURE__ */ React.createElement(Content, null, filteredAndSortedHomePageCards.length === 0 ? /* @__PURE__ */ React.createElement(\n    EmptyState,\n    {\n      title: \"No home page cards (mount points) configured or found.\",\n      missing: \"content\"\n    }\n  ) : /* @__PURE__ */ React.createElement(ReadOnlyGrid, { mountPoints: filteredAndSortedHomePageCards })));\n};\n\nexport { HomePage };\n//# sourceMappingURL=HomePage.esm.js.map\n","import React from 'react';\nimport { useDynamicHomePageCards } from '../hooks/useDynamicHomePageCards.esm.js';\nimport { HomePage } from './HomePage.esm.js';\n\nconst DynamicHomePage = (props) => {\n  const cards = useDynamicHomePageCards();\n  return /* @__PURE__ */ React.createElement(HomePage, { ...props, cards });\n};\n\nexport { DynamicHomePage };\n//# sourceMappingURL=DynamicHomePage.esm.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = WidthProvideRGL;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _resizeObserverPolyfill = _interopRequireDefault(require(\"resize-observer-polyfill\"));\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*:: import type { ReactRef } from \"../ReactGridLayoutPropTypes\";*/\n/*:: type WPDefaultProps = {|\n  measureBeforeMount: boolean\n|};*/\n/*:: type WPProps = {|\n  className?: string,\n  style?: Object,\n  ...WPDefaultProps\n|};*/\n// eslint-disable-next-line no-unused-vars\n/*:: type WPState = {|\n  width: number\n|};*/\n/*:: type ComposedProps<Config> = {|\n  ...Config,\n  measureBeforeMount?: boolean,\n  className?: string,\n  style?: Object,\n  width?: number\n|};*/\nconst layoutClassName = \"react-grid-layout\";\n\n/*\n * A simple HOC that provides facility for listening to container resizes.\n *\n * The Flow type is pretty janky here. I can't just spread `WPProps` into this returned object - I wish I could - but it triggers\n * a flow bug of some sort that causes it to stop typechecking.\n */\nfunction WidthProvideRGL /*:: <Config>*/(ComposedComponent /*: React.AbstractComponent<Config>*/) /*: React.AbstractComponent<ComposedProps<Config>>*/{\n  var _class;\n  return _class = class WidthProvider extends React.Component\n  /*:: <\n      ComposedProps<Config>,\n      WPState\n    >*/\n  {\n    constructor() {\n      super(...arguments);\n      _defineProperty(this, \"state\", {\n        width: 1280\n      });\n      _defineProperty(this, \"elementRef\", /*#__PURE__*/React.createRef());\n      _defineProperty(this, \"mounted\", false);\n      _defineProperty(this, \"resizeObserver\", void 0);\n    }\n    componentDidMount() {\n      this.mounted = true;\n      this.resizeObserver = new _resizeObserverPolyfill.default(entries => {\n        const node = this.elementRef.current;\n        if (node instanceof HTMLElement) {\n          const width = entries[0].contentRect.width;\n          this.setState({\n            width\n          });\n        }\n      });\n      const node = this.elementRef.current;\n      if (node instanceof HTMLElement) {\n        this.resizeObserver.observe(node);\n      }\n    }\n    componentWillUnmount() {\n      this.mounted = false;\n      const node = this.elementRef.current;\n      if (node instanceof HTMLElement) {\n        this.resizeObserver.unobserve(node);\n      }\n      this.resizeObserver.disconnect();\n    }\n    render() {\n      const {\n        measureBeforeMount,\n        ...rest\n      } = this.props;\n      if (measureBeforeMount && !this.mounted) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: (0, _clsx.default)(this.props.className, layoutClassName),\n          style: this.props.style\n          // $FlowIgnore ref types\n          ,\n          ref: this.elementRef\n        });\n      }\n      return /*#__PURE__*/React.createElement(ComposedComponent, _extends({\n        innerRef: this.elementRef\n      }, rest, this.state));\n    }\n  }, _defineProperty(_class, \"defaultProps\", {\n    measureBeforeMount: false\n  }), _defineProperty(_class, \"propTypes\", {\n    // If true, will not render children until mounted. Useful for getting the exact width before\n    // rendering, to prevent any unsightly resizing.\n    measureBeforeMount: _propTypes.default.bool\n  }), _class;\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar react_1 = require(\"react\");\nvar useIsomorphicLayoutEffect_1 = tslib_1.__importDefault(require(\"./useIsomorphicLayoutEffect\"));\nvar util_1 = require(\"./misc/util\");\nvar defaultState = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n};\nfunction useMeasure() {\n    var _a = react_1.useState(null), element = _a[0], ref = _a[1];\n    var _b = react_1.useState(defaultState), rect = _b[0], setRect = _b[1];\n    var observer = react_1.useMemo(function () {\n        return new window.ResizeObserver(function (entries) {\n            if (entries[0]) {\n                var _a = entries[0].contentRect, x = _a.x, y = _a.y, width = _a.width, height = _a.height, top_1 = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n                setRect({ x: x, y: y, width: width, height: height, top: top_1, left: left, bottom: bottom, right: right });\n            }\n        });\n    }, []);\n    useIsomorphicLayoutEffect_1.default(function () {\n        if (!element)\n            return;\n        observer.observe(element);\n        return function () {\n            observer.disconnect();\n        };\n    }, [element]);\n    return [ref, rect];\n}\nexports.default = util_1.isBrowser && typeof window.ResizeObserver !== 'undefined'\n    ? useMeasure\n    : (function () { return [util_1.noop, defaultState]; });\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findOrGenerateResponsiveLayout = findOrGenerateResponsiveLayout;\nexports.getBreakpointFromWidth = getBreakpointFromWidth;\nexports.getColsFromBreakpoint = getColsFromBreakpoint;\nexports.sortBreakpoints = sortBreakpoints;\nvar _utils = require(\"./utils\");\n/*:: import type { CompactType, Layout } from \"./utils\";*/\n/*:: export type Breakpoint = string;*/\n/*:: export type DefaultBreakpoints = \"lg\" | \"md\" | \"sm\" | \"xs\" | \"xxs\";*/\n/*:: export type ResponsiveLayout<T: Breakpoint> = {\n  +[breakpoint: T]: Layout\n};*/\n// + indicates read-only\n/*:: export type Breakpoints<T: Breakpoint> = {\n  +[breakpoint: T]: number\n};*/\n/*:: export type OnLayoutChangeCallback = (\n  Layout,\n  { [key: Breakpoint]: Layout }\n) => void;*/\n/**\n * Given a width, find the highest breakpoint that matches is valid for it (width > breakpoint).\n *\n * @param  {Object} breakpoints Breakpoints object (e.g. {lg: 1200, md: 960, ...})\n * @param  {Number} width Screen width.\n * @return {String}       Highest breakpoint that is less than width.\n */\nfunction getBreakpointFromWidth(breakpoints /*: Breakpoints<Breakpoint>*/, width /*: number*/) /*: Breakpoint*/{\n  const sorted = sortBreakpoints(breakpoints);\n  let matching = sorted[0];\n  for (let i = 1, len = sorted.length; i < len; i++) {\n    const breakpointName = sorted[i];\n    if (width > breakpoints[breakpointName]) matching = breakpointName;\n  }\n  return matching;\n}\n\n/**\n * Given a breakpoint, get the # of cols set for it.\n * @param  {String} breakpoint Breakpoint name.\n * @param  {Object} cols       Map of breakpoints to cols.\n * @return {Number}            Number of cols.\n */\nfunction getColsFromBreakpoint(breakpoint /*: Breakpoint*/, cols /*: Breakpoints<Breakpoint>*/) /*: number*/{\n  if (!cols[breakpoint]) {\n    throw new Error(\"ResponsiveReactGridLayout: `cols` entry for breakpoint \" + breakpoint + \" is missing!\");\n  }\n  return cols[breakpoint];\n}\n\n/**\n * Given existing layouts and a new breakpoint, find or generate a new layout.\n *\n * This finds the layout above the new one and generates from it, if it exists.\n *\n * @param  {Object} layouts     Existing layouts.\n * @param  {Array} breakpoints All breakpoints.\n * @param  {String} breakpoint New breakpoint.\n * @param  {String} breakpoint Last breakpoint (for fallback).\n * @param  {Number} cols       Column count at new breakpoint.\n * @param  {Boolean} verticalCompact Whether or not to compact the layout\n *   vertically.\n * @return {Array}             New layout.\n */\nfunction findOrGenerateResponsiveLayout(layouts /*: ResponsiveLayout<Breakpoint>*/, breakpoints /*: Breakpoints<Breakpoint>*/, breakpoint /*: Breakpoint*/, lastBreakpoint /*: Breakpoint*/, cols /*: number*/, compactType /*: CompactType*/) /*: Layout*/{\n  // If it already exists, just return it.\n  if (layouts[breakpoint]) return (0, _utils.cloneLayout)(layouts[breakpoint]);\n  // Find or generate the next layout\n  let layout = layouts[lastBreakpoint];\n  const breakpointsSorted = sortBreakpoints(breakpoints);\n  const breakpointsAbove = breakpointsSorted.slice(breakpointsSorted.indexOf(breakpoint));\n  for (let i = 0, len = breakpointsAbove.length; i < len; i++) {\n    const b = breakpointsAbove[i];\n    if (layouts[b]) {\n      layout = layouts[b];\n      break;\n    }\n  }\n  layout = (0, _utils.cloneLayout)(layout || []); // clone layout so we don't modify existing items\n  return (0, _utils.compact)((0, _utils.correctBounds)(layout, {\n    cols: cols\n  }), compactType, cols);\n}\n\n/**\n * Given breakpoints, return an array of breakpoints sorted by width. This is usually\n * e.g. ['xxs', 'xs', 'sm', ...]\n *\n * @param  {Object} breakpoints Key/value pair of breakpoint names to widths.\n * @return {Array}              Sorted breakpoints.\n */\nfunction sortBreakpoints(breakpoints /*: Breakpoints<Breakpoint>*/) /*: Array<Breakpoint>*/{\n  const keys /*: Array<string>*/ = Object.keys(breakpoints);\n  return keys.sort(function (a, b) {\n    return breakpoints[a] - breakpoints[b];\n  });\n}","function r(e){var o,t,f=\"\";if(\"string\"==typeof e||\"number\"==typeof e)f+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var n=e.length;for(o=0;o<n;o++)e[o]&&(t=r(e[o]))&&(f&&(f+=\" \"),f+=t)}else for(t in e)e[t]&&(f&&(f+=\" \"),f+=t);return f}function e(){for(var e,o,t=0,f=\"\",n=arguments.length;t<n;t++)(e=arguments[t])&&(o=r(e))&&(f&&(f+=\" \"),f+=o);return f}module.exports=e,module.exports.clsx=e;","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isNavigator = exports.isBrowser = exports.off = exports.on = exports.noop = void 0;\nvar noop = function () { };\nexports.noop = noop;\nfunction on(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.addEventListener) {\n        obj.addEventListener.apply(obj, args);\n    }\n}\nexports.on = on;\nfunction off(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.removeEventListener) {\n        obj.removeEventListener.apply(obj, args);\n    }\n}\nexports.off = off;\nexports.isBrowser = typeof window !== 'undefined';\nexports.isNavigator = typeof navigator !== 'undefined';\n"],"names":["module","exports","a","b","isEqualImpl","className","style","width","autoSize","cols","draggableCancel","draggableHandle","verticalCompact","compactType","layout","margin","containerPadding","rowHeight","maxRows","isBounded","isDraggable","isResizable","allowOverlap","preventCollision","useCSSTransforms","transformScale","isDroppable","resizeHandles","resizeHandle","onLayoutChange","onDragStart","onDrag","onDragStop","onResizeStart","onResize","onResizeStop","onDrop","droppingItem","innerRef","calcGridColWidth","positionParams","containerWidth","calcGridItemWHPx","gridUnits","colOrRowSize","marginPx","Number","isFinite","Math","round","max","clamp","num","lowerBound","upperBound","min","Object","defineProperty","value","calcGridItemPosition","x","y","w","h","state","colWidth","out","resizing","height","dragging","top","left","calcWH","handle","_w","_h","indexOf","calcXY","bottom","childrenEqual","_fastEquals","deepEqual","_react","default","Children","map","c","key","props","cloneLayout","cloneLayoutItem","collides","compact","compactItem","correctBounds","fastPositionEqual","fastRGLPropsEqual","getAllCollisions","getFirstCollision","getLayoutItem","getStatics","modifyLayout","moveElement","moveElementAwayFromCollision","noop","perc","resizeItemInDirection","direction","currentSize","newSize","ordinalHandler","ordinalResizeHandlerMap","setTopLeft","_ref6","position","setTransform","_ref5","translate","transform","WebkitTransform","MozTransform","msTransform","OTransform","sortLayoutItems","sortLayoutItemsByColRow","sortLayoutItemsByRowCol","synchronizeLayoutWithChildren","initialLayout","children","forEach","child","exists","String","g","push","isProduction","validateLayout","i","correctedLayout","withLayoutItem","itemKey","cb","item","obj","__esModule","DEBUG","bottomY","len","length","newLayout","Array","layoutItem","minW","maxW","minH","maxH","moved","Boolean","static","l1","l2","compareWith","sorted","l","heightWidth","resolveCompactionCollision","moveToCoord","axis","sizeProp","otherItem","fullLayout","compactH","bounds","collidesWith","id","filter","isUserAction","log","oldX","oldY","reverse","collisions","hasCollisions","collision","itemToMove","compactV","fakeItem","firstCollision","collisionNorth","collisionWest","undefined","newX","newY","constrainWidth","currentWidth","newWidth","constrainHeight","currentHeight","newHeight","constrainLeft","constrainTop","resizeNorth","_ref","_containerWidth","resizeEast","_ref2","resizeWest","_ref3","resizeSouth","_ref4","n","ne","arguments","e","se","s","sw","nw","slice","sort","contextName","subProps","isArray","Error","j","isNaN","console","React","r","t","_getRequireWildcardCache","has","get","__proto__","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","set","_interopRequireWildcard","_propTypes","_interopRequireDefault","_utils","_responsiveUtils","_ReactGridLayout","WeakMap","_extends","assign","bind","target","source","apply","this","_defineProperty","arg","input","prim","Symbol","toPrimitive","res","hint","TypeError","_toPrimitive","_toPropertyKey","enumerable","configurable","writable","type","toString","getIndentationValue","param","breakpoint","ResponsiveReactGridLayout","Component","constructor","super","generateInitialState","layouts","breakpoints","getBreakpointFromWidth","colNo","getColsFromBreakpoint","findOrGenerateResponsiveLayout","getDerivedStateFromProps","nextProps","prevState","componentDidUpdate","prevProps","onWidthChange","newBreakpoint","lastBreakpoint","newCols","newLayouts","onBreakpointChange","setState","render","other","createElement","string","object","bool","oneOfType","array","propName","keys","number","isRequired","func","lg","md","sm","xs","xxs","react_1","useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","useEffect","createDefaultIsNestedEqual","comparator","_indexOrKeyA","_indexOrKeyB","_parentA","_parentB","meta","createIsCircular","areItemsEqual","isEqual","cache","cachedA","cachedB","result","delete","merge","merged","isPlainObject","isPromiseLike","then","sameValueZeroEqual","createComparator","_a","areArraysEqual","areDatesEqual","areMapsEqual","areObjectsEqual","areRegExpsEqual","areSetsEqual","createIsNestedEqual","aArray","bArray","aTag","valueOf","index","areArraysEqualCircular","isValueEqual","size","matchedIndices","indexA","aValue","aKey","hasMatch","matchIndexB","bValue","bKey","areMapsEqualCircular","keysA","reactElementA","$$typeof","reactElementB","areObjectsEqualCircular","flags","matchIndex","areSetsEqualCircular","DEFAULT_CONFIG","freeze","DEFAULT_CIRCULAR_CONFIG","isDeepEqual","isShallowEqual","isCircularDeepEqual","isCircularShallowEqual","circularDeepEqual","circularShallowEqual","createCustomCircularEqual","getComparatorOptions","createCustomEqual","shallowEqual","factory","resizeHandleType","resizeHandleAxesType","arrayOf","oneOf","node","shape","any","_clsx","_calculateUtils","_GridItem","_ReactGridLayoutPropTypes","layoutClassName","isFirefox","test","navigator","userAgent","ReactGridLayout","activeDrag","mounted","oldDragItem","oldLayout","oldResizeItem","droppingDOMNode","placeholder","onLayoutMaybeChanged","finalLayout","shouldMoveItem","preventDefault","stopPropagation","nativeEvent","classList","contains","onDropDragOver","onDragOverResult","removeDroppingPlaceholder","finalDroppingItem","gridRect","currentTarget","getBoundingClientRect","layerX","clientX","layerY","clientY","droppingPosition","calculatedPosition","dragEnterCounter","find","componentDidMount","newLayoutBase","propsLayout","shouldComponentUpdate","nextState","containerHeight","nbRow","containerPaddingY","processGridItem","isDroppingItem","draggable","resizable","resizeHandlesOptions","bounded","cancel","usePercentages","mergedClassName","mergedStyle","ref","onDragLeave","onDragEnter","onDragOver","Infinity","_reactDom","_reactDraggable","_reactResizable","GridItem","createRef","newPosition","offsetParent","parentRect","clientRect","cLeft","pLeft","cTop","pTop","scrollLeft","scrollTop","getPositionParams","dontFlush","deltaX","deltaY","bottomBoundary","clientHeight","rightBoundary","flushSync","callbackData","onResizeHandler","oldPosition","moveDroppingItem","elementRef","current","prevDroppingPosition","shouldDrag","createStyle","pos","mixinDraggable","DraggableCore","disabled","onStart","onStop","scale","nodeRef","curryResizeHandler","handler","data","mixinResizable","maxWidth","mins","maxes","minConstraints","maxConstraints","Resizable","draggableOpts","handlerName","updatedSize","only","newChild","cloneElement","dropping","cssTransforms","element","Responsive","utils","defaultProps","xl","useStyles","cardWrapper","overflow","ReadOnlyGrid","classes","measureRef","measureRect","useMeasure","cards","useMemo","mountPoints","mountPoint","layouts2","config","entries","card","layoutPerBreakpoint","JSON","stringify","HomePage","filteredAndSortedHomePageCards","filteredAndSorted","enabled","priority","themeId","title","missing","DynamicHomePage","tslib_1","useIsomorphicLayoutEffect_1","__importDefault","util_1","defaultState","right","window","ResizeObserver","useState","_b","rect","setRect","observer","contentRect","top_1","observe","disconnect","breakpointsSorted","sortBreakpoints","breakpointsAbove","matching","breakpointName","o","f","clsx","MapShim","Map","getIndex","arr","some","entry","class_1","__entries__","splice","clear","callback","ctx","_i","document","global$1","self","Function","requestAnimationFrame$1","requestAnimationFrame","setTimeout","Date","now","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","gatherActive","hasActive","broadcastActive","addEventListener","attributes","childList","characterData","subtree","removeEventListener","propertyName","getInstance","instance_","defineConfigurable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","reduce","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","clientWidth","getComputedStyle","paddings","positions_1","getPaddings","horizPad","vertPad","boxSizing","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","getHTMLElementContentRect","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","broadcastRect","ResizeObserverEntry","rectInit","Constr","DOMRectReadOnly","create","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","method","isNavigator","off","on","args"],"sourceRoot":""}